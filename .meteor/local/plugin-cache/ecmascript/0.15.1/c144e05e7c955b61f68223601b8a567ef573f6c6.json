{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/hijack/wrap_routers.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/hijack/wrap_routers.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/hijack/wrap_routers.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/hijack/wrap_routers.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/hijack/wrap_routers.js"}},"code":"module.export({\n  wrapRouters: () => wrapRouters\n});\nlet Fibers;\nmodule.link(\"fibers\", {\n  default(v) {\n    Fibers = v;\n  }\n\n}, 0);\n\nfunction wrapRouters() {\n  let connectRoutes = [];\n\n  try {\n    connectRoutes.push(require('connect-route'));\n  } catch (e) {// We can ignore errors\n  }\n\n  try {\n    if (Package['simple:json-routes']) {\n      // Relative from .npm/node_modules/meteor/montiapm_agent/node_modules\n      // Npm.require is less strict on what paths you use than require\n      connectRoutes.push(Npm.require('../../simple_json-routes/node_modules/connect-route'));\n    }\n  } catch (e) {// we can ignore errors\n  }\n\n  connectRoutes.forEach(connectRoute => {\n    if (typeof connectRoute !== 'function') {\n      return;\n    }\n\n    connectRoute(router => {\n      const oldAdd = router.constructor.prototype.add;\n\n      router.constructor.prototype.add = function (method, route, handler) {\n        // Unlike most routers, connect-route doesn't look at the arguments length\n        oldAdd.call(this, method, route, function () {\n          if (arguments[0] && arguments[0].__kadiraInfo) {\n            arguments[0].__kadiraInfo.suggestedRouteName = route;\n          }\n\n          handler.apply(null, arguments);\n        });\n      };\n    });\n  });\n}","map":{"version":3,"sources":["packages/montiapm:agent/lib/hijack/wrap_routers.js"],"names":["module","export","wrapRouters","Fibers","link","default","v","connectRoutes","push","require","e","Package","Npm","forEach","connectRoute","router","oldAdd","constructor","prototype","add","method","route","handler","call","arguments","__kadiraInfo","suggestedRouteName","apply"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,WAAW,EAAC,MAAIA;AAAjB,CAAd;AAA6C,IAAIC,MAAJ;AAAWH,MAAM,CAACI,IAAP,CAAY,QAAZ,EAAqB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAArB,CAArB,EAA4C,CAA5C;;AAEjD,SAASJ,WAAT,GAAwB;AAC7B,MAAIK,aAAa,GAAG,EAApB;;AACA,MAAI;AACFA,IAAAA,aAAa,CAACC,IAAd,CAAmBC,OAAO,CAAC,eAAD,CAA1B;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU,CACV;AACD;;AAED,MAAI;AACF,QAAIC,OAAO,CAAC,oBAAD,CAAX,EAAmC;AACjC;AACA;AACAJ,MAAAA,aAAa,CAACC,IAAd,CAAmBI,GAAG,CAACH,OAAJ,CAAY,qDAAZ,CAAnB;AACD;AACF,GAND,CAME,OAAOC,CAAP,EAAU,CACT;AACF;;AAEDH,EAAAA,aAAa,CAACM,OAAd,CAAsBC,YAAY,IAAI;AACpC,QAAI,OAAOA,YAAP,KAAwB,UAA5B,EAAwC;AACtC;AACD;;AAEDA,IAAAA,YAAY,CAAEC,MAAD,IAAY;AACvB,YAAMC,MAAM,GAAGD,MAAM,CAACE,WAAP,CAAmBC,SAAnB,CAA6BC,GAA5C;;AACAJ,MAAAA,MAAM,CAACE,WAAP,CAAmBC,SAAnB,CAA6BC,GAA7B,GAAmC,UAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,OAAzB,EAAkC;AACnE;AACAN,QAAAA,MAAM,CAACO,IAAP,CAAY,IAAZ,EAAkBH,MAAlB,EAA0BC,KAA1B,EAAiC,YAAY;AAC3C,cAAIG,SAAS,CAAC,CAAD,CAAT,IAAgBA,SAAS,CAAC,CAAD,CAAT,CAAaC,YAAjC,EAA+C;AAC7CD,YAAAA,SAAS,CAAC,CAAD,CAAT,CAAaC,YAAb,CAA0BC,kBAA1B,GAA+CL,KAA/C;AACD;;AAEDC,UAAAA,OAAO,CAACK,KAAR,CAAc,IAAd,EAAoBH,SAApB;AACD,SAND;AAOD,OATD;AAUD,KAZW,CAAZ;AAaD,GAlBD;AAmBD","sourcesContent":["import Fibers from 'fibers';\n\nexport function wrapRouters () {\n  let connectRoutes = []\n  try {\n    connectRoutes.push(require('connect-route'));\n  } catch (e) {\n    // We can ignore errors\n  }\n\n  try {\n    if (Package['simple:json-routes']) {\n      // Relative from .npm/node_modules/meteor/montiapm_agent/node_modules\n      // Npm.require is less strict on what paths you use than require\n      connectRoutes.push(Npm.require('../../simple_json-routes/node_modules/connect-route'));\n    }\n  } catch (e) {\n     // we can ignore errors\n  }\n\n  connectRoutes.forEach(connectRoute => {\n    if (typeof connectRoute !== 'function') {\n      return;\n    }\n  \n    connectRoute((router) => {\n      const oldAdd = router.constructor.prototype.add;\n      router.constructor.prototype.add = function (method, route, handler) {\n        // Unlike most routers, connect-route doesn't look at the arguments length\n        oldAdd.call(this, method, route, function () {\n          if (arguments[0] && arguments[0].__kadiraInfo) {\n            arguments[0].__kadiraInfo.suggestedRouteName = route;\n          }\n\n          handler.apply(null, arguments)\n        });\n      }\n    });\n  })\n}\n"]},"sourceType":"module","hash":"c144e05e7c955b61f68223601b8a567ef573f6c6"}
