{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/mdg:meteor-apm-agent/lib/hijack/http.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/mdg:meteor-apm-agent/lib/hijack/http.js","filename":"/home/momen/projects/spotmycrib-master/packages/mdg:meteor-apm-agent/lib/hijack/http.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/mdg:meteor-apm-agent/lib/hijack/http.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mdg:meteor-apm-agent/lib/hijack/http.js"}},"code":"var originalCall = HTTP.call;\n\nHTTP.call = function (method, url) {\n  var kadiraInfo = Kadira._getInfo();\n\n  if (kadiraInfo) {\n    var eventId = Kadira.tracer.event(kadiraInfo.trace, 'http', {\n      method: method,\n      url: url\n    });\n  }\n\n  try {\n    var response = originalCall.apply(this, arguments); //if the user supplied an asynCallback, we don't have a response object and it handled asynchronously\n    //we need to track it down to prevent issues like: #3\n\n    var endOptions = HaveAsyncCallback(arguments) ? {\n      async: true\n    } : {\n      statusCode: response.statusCode\n    };\n\n    if (eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endOptions);\n    }\n\n    return response;\n  } catch (ex) {\n    if (eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {\n        err: ex.message\n      });\n    }\n\n    throw ex;\n  }\n};","map":{"version":3,"sources":["packages/mdg:meteor-apm-agent/lib/hijack/http.js"],"names":["originalCall","HTTP","call","method","url","kadiraInfo","Kadira","_getInfo","eventId","tracer","event","trace","response","apply","arguments","endOptions","HaveAsyncCallback","async","statusCode","eventEnd","ex","err","message"],"mappings":"AAAA,IAAIA,YAAY,GAAGC,IAAI,CAACC,IAAxB;;AAEAD,IAAI,CAACC,IAAL,GAAY,UAASC,MAAT,EAAiBC,GAAjB,EAAsB;AAChC,MAAIC,UAAU,GAAGC,MAAM,CAACC,QAAP,EAAjB;;AACA,MAAGF,UAAH,EAAe;AACb,QAAIG,OAAO,GAAGF,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoBL,UAAU,CAACM,KAA/B,EAAsC,MAAtC,EAA8C;AAACR,MAAAA,MAAM,EAAEA,MAAT;AAAiBC,MAAAA,GAAG,EAAEA;AAAtB,KAA9C,CAAd;AACD;;AAED,MAAI;AACF,QAAIQ,QAAQ,GAAGZ,YAAY,CAACa,KAAb,CAAmB,IAAnB,EAAyBC,SAAzB,CAAf,CADE,CAGF;AACA;;AACA,QAAIC,UAAU,GAAGC,iBAAiB,CAACF,SAAD,CAAjB,GAA8B;AAACG,MAAAA,KAAK,EAAE;AAAR,KAA9B,GAA6C;AAACC,MAAAA,UAAU,EAAEN,QAAQ,CAACM;AAAtB,KAA9D;;AACA,QAAGV,OAAH,EAAY;AACVF,MAAAA,MAAM,CAACG,MAAP,CAAcU,QAAd,CAAuBd,UAAU,CAACM,KAAlC,EAAyCH,OAAzC,EAAkDO,UAAlD;AACD;;AACD,WAAOH,QAAP;AACD,GAVD,CAUE,OAAMQ,EAAN,EAAU;AACV,QAAGZ,OAAH,EAAY;AACVF,MAAAA,MAAM,CAACG,MAAP,CAAcU,QAAd,CAAuBd,UAAU,CAACM,KAAlC,EAAyCH,OAAzC,EAAkD;AAACa,QAAAA,GAAG,EAAED,EAAE,CAACE;AAAT,OAAlD;AACD;;AACD,UAAMF,EAAN;AACD;AACF,CAtBD","sourcesContent":["var originalCall = HTTP.call;\n\nHTTP.call = function(method, url) {\n  var kadiraInfo = Kadira._getInfo();\n  if(kadiraInfo) {\n    var eventId = Kadira.tracer.event(kadiraInfo.trace, 'http', {method: method, url: url});\n  }\n\n  try {\n    var response = originalCall.apply(this, arguments);\n\n    //if the user supplied an asynCallback, we don't have a response object and it handled asynchronously\n    //we need to track it down to prevent issues like: #3\n    var endOptions = HaveAsyncCallback(arguments)? {async: true}: {statusCode: response.statusCode};\n    if(eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endOptions);\n    }\n    return response;\n  } catch(ex) {\n    if(eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {err: ex.message});\n    }\n    throw ex;\n  }\n};"]},"sourceType":"module","hash":"e852983e4d89b4b2dbec8bfc916dcb2102652581"}
