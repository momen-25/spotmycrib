{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/hijack/error.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/hijack/error.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/hijack/error.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/hijack/error.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/hijack/error.js"}},"code":"module.export({\n  MeteorDebugIgnore: () => MeteorDebugIgnore\n});\nconst MeteorDebugIgnore = Symbol();\n\nTrackUncaughtExceptions = function () {\n  process.on('uncaughtException', function (err) {\n    // skip errors with `_skipKadira` flag\n    if (err._skipKadira) {\n      return;\n    } // let the server crash normally if error tracking is disabled\n\n\n    if (!Kadira.options.enableErrorTracking) {\n      printErrorAndKill(err);\n    } // looking for already tracked errors and throw them immediately\n    // throw error immediately if kadira is not ready\n\n\n    if (err._tracked || !Kadira.connected) {\n      printErrorAndKill(err);\n    }\n\n    var trace = getTrace(err, 'server-crash', 'uncaughtException');\n    Kadira.models.error.trackError(err, trace);\n\n    Kadira._sendPayload(function () {\n      clearTimeout(timer);\n      throwError(err);\n    });\n\n    var timer = setTimeout(function () {\n      throwError(err);\n    }, 1000 * 10);\n\n    function throwError(err) {\n      // sometimes error came back from a fiber.\n      // But we don't fibers to track that error for us\n      // That's why we throw the error on the nextTick\n      process.nextTick(function () {\n        // we need to mark this error where we really need to throw\n        err._tracked = true;\n        printErrorAndKill(err);\n      });\n    }\n  });\n\n  function printErrorAndKill(err) {\n    // since we are capturing error, we are also on the error message.\n    // so developers think we are also reponsible for the error.\n    // But we are not. This will fix that.\n    console.error(err.stack);\n    process.exit(7);\n  }\n};\n\nTrackUnhandledRejections = function () {\n  process.on('unhandledRejection', function (reason) {\n    // skip errors with `_skipKadira` flag\n    if (reason._skipKadira || !Kadira.options.enableErrorTracking) {\n      return;\n    }\n\n    var trace = getTrace(reason, 'server-internal', 'unhandledRejection');\n    Kadira.models.error.trackError(reason, trace); // TODO: we should respect the --unhandled-rejections option\n    // message taken from \n    // https://github.com/nodejs/node/blob/f4797ff1ef7304659d747d181ec1e7afac408d50/lib/internal/process/promises.js#L243-L248\n\n    const message = 'This error originated either by ' + 'throwing inside of an async function without a catch block, ' + 'or by rejecting a promise which was not handled with .catch().' + ' The promise rejected with the reason: '; // We could emit a warning instead like Node does internally\n    // but it requires Node 8 or newer\n\n    console.warn(message);\n    console.error(reason && reason.stack ? reason.stack : reason);\n  });\n};\n\nTrackMeteorDebug = function () {\n  var originalMeteorDebug = Meteor._debug;\n\n  Meteor._debug = function (message, stack) {\n    // Sometimes Meteor calls Meteor._debug with no arguments\n    // to log an empty line\n    const isArgs = message !== undefined || stack !== undefined; // We've changed `stack` into an object at method and sub handlers so we can\n    // detect the error here. These errors are already tracked so don't track them again.\n\n    var alreadyTracked = false; // Some Meteor versions pass the error, and other versions pass the error stack\n    // Restore so origionalMeteorDebug shows the stack as a string instead as an object\n\n    if (stack && stack[MeteorDebugIgnore]) {\n      alreadyTracked = true;\n      arguments[1] = stack.stack;\n    } else if (stack && stack.stack && stack.stack[MeteorDebugIgnore]) {\n      alreadyTracked = true;\n      arguments[1] = stack.stack.stack;\n    } // only send to the server if connected to kadira\n\n\n    if (Kadira.options.enableErrorTracking && isArgs && !alreadyTracked && Kadira.connected) {\n      let errorMessage = message;\n\n      if (typeof message == 'string' && stack instanceof Error) {\n        const separator = message.endsWith(':') ? '' : ':';\n        errorMessage = \"\".concat(message).concat(separator, \" \").concat(stack.message);\n      }\n\n      let error = new Error(errorMessage);\n\n      if (stack instanceof Error) {\n        error.stack = stack.stack;\n      } else if (stack) {\n        error.stack = stack;\n      } else {\n        error.stack = CreateUserStack(error);\n      }\n\n      var trace = getTrace(error, 'server-internal', 'Meteor._debug');\n      Kadira.models.error.trackError(error, trace);\n    }\n\n    return originalMeteorDebug.apply(this, arguments);\n  };\n};\n\nfunction getTrace(err, type, subType) {\n  return {\n    type: type,\n    subType: subType,\n    name: err.message,\n    errored: true,\n    at: Kadira.syncedDate.getTime(),\n    events: [['start', 0, {}], ['error', 0, {\n      error: {\n        message: err.message,\n        stack: err.stack\n      }\n    }]],\n    metrics: {\n      total: 0\n    }\n  };\n}","map":{"version":3,"sources":["packages/montiapm:agent/lib/hijack/error.js"],"names":["module","export","MeteorDebugIgnore","Symbol","TrackUncaughtExceptions","process","on","err","_skipKadira","Kadira","options","enableErrorTracking","printErrorAndKill","_tracked","connected","trace","getTrace","models","error","trackError","_sendPayload","clearTimeout","timer","throwError","setTimeout","nextTick","console","stack","exit","TrackUnhandledRejections","reason","message","warn","TrackMeteorDebug","originalMeteorDebug","Meteor","_debug","isArgs","undefined","alreadyTracked","arguments","errorMessage","Error","separator","endsWith","CreateUserStack","apply","type","subType","name","errored","at","syncedDate","getTime","events","metrics","total"],"mappings":"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","sourcesContent":["export const MeteorDebugIgnore = Symbol()\n\nTrackUncaughtExceptions = function () {\n  process.on('uncaughtException', function (err) {\n    // skip errors with `_skipKadira` flag\n    if(err._skipKadira) {\n      return;\n    }\n\n    // let the server crash normally if error tracking is disabled\n    if(!Kadira.options.enableErrorTracking) {\n      printErrorAndKill(err);\n    }\n\n    // looking for already tracked errors and throw them immediately\n    // throw error immediately if kadira is not ready\n    if(err._tracked || !Kadira.connected) {\n      printErrorAndKill(err);\n    }\n\n    var trace = getTrace(err, 'server-crash', 'uncaughtException');\n    Kadira.models.error.trackError(err, trace);\n    Kadira._sendPayload(function () {\n      clearTimeout(timer);\n      throwError(err);\n    });\n\n    var timer = setTimeout(function () {\n      throwError(err);\n    }, 1000*10);\n\n    function throwError(err) {\n      // sometimes error came back from a fiber.\n      // But we don't fibers to track that error for us\n      // That's why we throw the error on the nextTick\n      process.nextTick(function() {\n        // we need to mark this error where we really need to throw\n        err._tracked = true;\n        printErrorAndKill(err);\n      });\n    }\n  });\n\n  function printErrorAndKill(err) {\n    // since we are capturing error, we are also on the error message.\n    // so developers think we are also reponsible for the error.\n    // But we are not. This will fix that.\n    console.error(err.stack);\n    process.exit(7);\n  }\n}\n\nTrackUnhandledRejections = function () {\n  process.on('unhandledRejection', function (reason) {\n    // skip errors with `_skipKadira` flag\n    if(\n      reason._skipKadira ||\n      !Kadira.options.enableErrorTracking\n    ) {\n      return;\n    }\n\n    var trace = getTrace(reason, 'server-internal', 'unhandledRejection');\n    Kadira.models.error.trackError(reason, trace);\n\n    // TODO: we should respect the --unhandled-rejections option\n    // message taken from \n    // https://github.com/nodejs/node/blob/f4797ff1ef7304659d747d181ec1e7afac408d50/lib/internal/process/promises.js#L243-L248\n    const message =\n      'This error originated either by ' +\n      'throwing inside of an async function without a catch block, ' +\n      'or by rejecting a promise which was not handled with .catch().' +\n      ' The promise rejected with the reason: ';\n\n    // We could emit a warning instead like Node does internally\n    // but it requires Node 8 or newer\n    console.warn(message);\n    console.error(reason && reason.stack ? reason.stack : reason)\n  });\n}\n\nTrackMeteorDebug = function () {\n  var originalMeteorDebug = Meteor._debug;\n  Meteor._debug = function (message, stack) {\n    // Sometimes Meteor calls Meteor._debug with no arguments\n    // to log an empty line\n    const isArgs = message !== undefined || stack !== undefined;\n\n    // We've changed `stack` into an object at method and sub handlers so we can\n    // detect the error here. These errors are already tracked so don't track them again.\n    var alreadyTracked = false;\n\n    // Some Meteor versions pass the error, and other versions pass the error stack\n    // Restore so origionalMeteorDebug shows the stack as a string instead as an object\n    if (stack && stack[MeteorDebugIgnore]) {\n      alreadyTracked = true;\n      arguments[1] = stack.stack;\n    } else if (stack && stack.stack && stack.stack[MeteorDebugIgnore]) {\n      alreadyTracked = true;\n      arguments[1] = stack.stack.stack;\n    }\n\n    // only send to the server if connected to kadira\n    if (\n      Kadira.options.enableErrorTracking &&\n      isArgs &&\n      !alreadyTracked &&\n      Kadira.connected\n    ) {\n      let errorMessage = message;\n\n      if (typeof message == 'string' && stack instanceof Error) {\n        const separator = message.endsWith(':') ? '' : ':'\n        errorMessage = `${message}${separator} ${stack.message}`\n      }\n\n      let error = new Error(errorMessage);\n      if (stack instanceof Error) {\n        error.stack = stack.stack;\n      } else if (stack) {\n        error.stack = stack;\n      } else {\n        error.stack = CreateUserStack(error);\n      }\n      var trace = getTrace(error, 'server-internal', 'Meteor._debug');\n      Kadira.models.error.trackError(error, trace);\n    }\n\n    return originalMeteorDebug.apply(this, arguments);\n  }\n}\n\nfunction getTrace(err, type, subType) {\n  return {\n    type: type,\n    subType: subType,\n    name: err.message,\n    errored: true,\n    at: Kadira.syncedDate.getTime(),\n    events: [\n      ['start', 0, {}],\n      ['error', 0, {error: {message: err.message, stack: err.stack}}]\n    ],\n    metrics: {\n      total: 0\n    }\n  };\n}\n"]},"sourceType":"module","hash":"82c7793dc4a1bc70000e0008db039994ca51afc9"}
