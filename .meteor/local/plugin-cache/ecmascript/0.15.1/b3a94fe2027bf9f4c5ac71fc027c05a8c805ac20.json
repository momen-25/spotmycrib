{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/models/system.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/models/system.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/models/system.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/models/system.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/models/system.js"}},"code":"let createHistogram;\nmodule.link(\"../utils.js\", {\n  createHistogram(v) {\n    createHistogram = v;\n  }\n\n}, 0);\nlet GCMetrics;\nmodule.link(\"../hijack/gc.js\", {\n  default(v) {\n    GCMetrics = v;\n  }\n\n}, 1);\nlet getFiberMetrics, resetFiberMetrics;\nmodule.link(\"../hijack/async.js\", {\n  getFiberMetrics(v) {\n    getFiberMetrics = v;\n  },\n\n  resetFiberMetrics(v) {\n    resetFiberMetrics = v;\n  }\n\n}, 2);\nlet getMongoDriverStats, resetMongoDriverStats;\nmodule.link(\"../hijack/mongo-driver-events.js\", {\n  getMongoDriverStats(v) {\n    getMongoDriverStats = v;\n  },\n\n  resetMongoDriverStats(v) {\n    resetMongoDriverStats = v;\n  }\n\n}, 3);\n\nvar EventLoopMonitor = Npm.require('evloop-monitor');\n\nSystemModel = function () {\n  this.startTime = Ntp._now();\n  this.newSessions = 0;\n  this.sessionTimeout = 1000 * 60 * 30; //30 min\n\n  this.evloopHistogram = createHistogram();\n  this.evloopMonitor = new EventLoopMonitor(200);\n  this.evloopMonitor.start();\n  this.evloopMonitor.on('lag', lag => {\n    // store as microsecond\n    this.evloopHistogram.add(lag * 1000);\n  });\n  this.gcMetrics = new GCMetrics();\n  this.gcMetrics.start();\n  this.cpuTime = process.hrtime();\n  this.previousCpuUsage = process.cpuUsage();\n  this.cpuHistory = [];\n  this.currentCpuUsage = 0;\n  setInterval(() => {\n    this.cpuUsage();\n  }, 2000);\n};\n\n_.extend(SystemModel.prototype, KadiraModel.prototype);\n\nSystemModel.prototype.buildPayload = function () {\n  var metrics = {};\n\n  var now = Ntp._now();\n\n  metrics.startTime = Kadira.syncedDate.syncTime(this.startTime);\n  metrics.endTime = Kadira.syncedDate.syncTime(now);\n  metrics.sessions = countKeys(Meteor.server.sessions);\n  let memoryUsage = process.memoryUsage();\n  metrics.memory = memoryUsage.rss / (1024 * 1024);\n  metrics.memoryArrayBuffers = (memoryUsage.arrayBuffers || 0) / (1024 * 1024);\n  metrics.memoryExternal = memoryUsage.external / (1024 * 1024);\n  metrics.memoryHeapUsed = memoryUsage.heapUsed / (1024 * 1024);\n  metrics.memoryHeapTotal = memoryUsage.heapTotal / (1024 * 1024);\n  metrics.newSessions = this.newSessions;\n  this.newSessions = 0;\n  metrics.activeRequests = process._getActiveRequests().length;\n  metrics.activeHandles = process._getActiveHandles().length; // track eventloop metrics\n\n  metrics.pctEvloopBlock = this.evloopMonitor.status().pctBlock;\n  metrics.evloopHistogram = this.evloopHistogram;\n  this.evloopHistogram = createHistogram();\n  metrics.gcMajorDuration = this.gcMetrics.metrics.gcMajor;\n  metrics.gcMinorDuration = this.gcMetrics.metrics.gcMinor;\n  metrics.gcIncrementalDuration = this.gcMetrics.metrics.gcIncremental;\n  metrics.gcWeakCBDuration = this.gcMetrics.metrics.gcWeakCB;\n  this.gcMetrics.reset();\n  const driverMetrics = getMongoDriverStats();\n  resetMongoDriverStats();\n  metrics.mongoPoolSize = driverMetrics.poolSize;\n  metrics.mongoPoolPrimaryCheckouts = driverMetrics.primaryCheckouts;\n  metrics.mongoPoolOtherCheckouts = driverMetrics.otherCheckouts;\n  metrics.mongoPoolCheckoutTime = driverMetrics.checkoutTime;\n  metrics.mongoPoolMaxCheckoutTime = driverMetrics.maxCheckoutTime;\n  metrics.mongoPoolPending = driverMetrics.pending;\n  metrics.mongoPoolCheckedOutConnections = driverMetrics.checkedOut;\n  metrics.mongoPoolCreatedConnections = driverMetrics.created;\n  const fiberMetrics = getFiberMetrics();\n  resetFiberMetrics();\n  metrics.createdFibers = fiberMetrics.created;\n  metrics.activeFibers = fiberMetrics.active;\n  metrics.fiberPoolSize = fiberMetrics.poolSize;\n  metrics.pcpu = 0;\n  metrics.pcpuUser = 0;\n  metrics.pcpuSystem = 0;\n\n  if (this.cpuHistory.length > 0) {\n    let lastCpuUsage = this.cpuHistory[this.cpuHistory.length - 1];\n    metrics.pcpu = lastCpuUsage.usage * 100;\n    metrics.pcpuUser = lastCpuUsage.user * 100;\n    metrics.pcpuSystem = lastCpuUsage.sys * 100;\n  }\n\n  metrics.cpuHistory = this.cpuHistory.map(entry => {\n    return {\n      time: Kadira.syncedDate.syncTime(entry.time),\n      usage: entry.usage,\n      sys: entry.sys,\n      user: entry.user\n    };\n  });\n  this.cpuHistory = [];\n  this.startTime = now;\n  return {\n    systemMetrics: [metrics]\n  };\n};\n\nfunction hrtimeToMS(hrtime) {\n  return hrtime[0] * 1000 + hrtime[1] / 1000000;\n}\n\nSystemModel.prototype.cpuUsage = function () {\n  var elapTimeMS = hrtimeToMS(process.hrtime(this.cpuTime));\n  var elapUsage = process.cpuUsage(this.previousCpuUsage);\n  var elapUserMS = elapUsage.user / 1000;\n  var elapSystMS = elapUsage.system / 1000;\n  var totalUsageMS = elapUserMS + elapSystMS;\n  var totalUsagePercent = totalUsageMS / elapTimeMS;\n  this.cpuHistory.push({\n    time: Ntp._now(),\n    usage: totalUsagePercent,\n    user: elapUserMS / elapTimeMS,\n    sys: elapSystMS / elapUsage.system\n  });\n  this.currentCpuUsage = totalUsagePercent * 100;\n  Kadira.docSzCache.setPcpu(this.currentCpuUsage);\n  this.cpuTime = process.hrtime();\n  this.previousCpuUsage = process.cpuUsage();\n};\n\nSystemModel.prototype.handleSessionActivity = function (msg, session) {\n  if (msg.msg === 'connect' && !msg.session) {\n    this.countNewSession(session);\n  } else if (['sub', 'method'].indexOf(msg.msg) != -1) {\n    if (!this.isSessionActive(session)) {\n      this.countNewSession(session);\n    }\n  }\n\n  session._activeAt = Date.now();\n};\n\nSystemModel.prototype.countNewSession = function (session) {\n  if (!isLocalAddress(session.socket)) {\n    this.newSessions++;\n  }\n};\n\nSystemModel.prototype.isSessionActive = function (session) {\n  var inactiveTime = Date.now() - session._activeAt;\n\n  return inactiveTime < this.sessionTimeout;\n}; // ------------------------------------------------------------------------- //\n// http://regex101.com/r/iF3yR3/2\n\n\nvar isLocalHostRegex = /^(?:.*\\.local|localhost)(?:\\:\\d+)?|127(?:\\.\\d{1,3}){3}|192\\.168(?:\\.\\d{1,3}){2}|10(?:\\.\\d{1,3}){3}|172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2}$/; // http://regex101.com/r/hM5gD8/1\n\nvar isLocalAddressRegex = /^127(?:\\.\\d{1,3}){3}|192\\.168(?:\\.\\d{1,3}){2}|10(?:\\.\\d{1,3}){3}|172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2}$/;\n\nfunction isLocalAddress(socket) {\n  var host = socket.headers['host'];\n  if (host) return isLocalHostRegex.test(host);\n  var address = socket.headers['x-forwarded-for'] || socket.remoteAddress;\n  if (address) return isLocalAddressRegex.test(address);\n}","map":{"version":3,"sources":["packages/montiapm:agent/lib/models/system.js"],"names":["createHistogram","module","link","v","GCMetrics","default","getFiberMetrics","resetFiberMetrics","getMongoDriverStats","resetMongoDriverStats","EventLoopMonitor","Npm","require","SystemModel","startTime","Ntp","_now","newSessions","sessionTimeout","evloopHistogram","evloopMonitor","start","on","lag","add","gcMetrics","cpuTime","process","hrtime","previousCpuUsage","cpuUsage","cpuHistory","currentCpuUsage","setInterval","_","extend","prototype","KadiraModel","buildPayload","metrics","now","Kadira","syncedDate","syncTime","endTime","sessions","countKeys","Meteor","server","memoryUsage","memory","rss","memoryArrayBuffers","arrayBuffers","memoryExternal","external","memoryHeapUsed","heapUsed","memoryHeapTotal","heapTotal","activeRequests","_getActiveRequests","length","activeHandles","_getActiveHandles","pctEvloopBlock","status","pctBlock","gcMajorDuration","gcMajor","gcMinorDuration","gcMinor","gcIncrementalDuration","gcIncremental","gcWeakCBDuration","gcWeakCB","reset","driverMetrics","mongoPoolSize","poolSize","mongoPoolPrimaryCheckouts","primaryCheckouts","mongoPoolOtherCheckouts","otherCheckouts","mongoPoolCheckoutTime","checkoutTime","mongoPoolMaxCheckoutTime","maxCheckoutTime","mongoPoolPending","pending","mongoPoolCheckedOutConnections","checkedOut","mongoPoolCreatedConnections","created","fiberMetrics","createdFibers","activeFibers","active","fiberPoolSize","pcpu","pcpuUser","pcpuSystem","lastCpuUsage","usage","user","sys","map","entry","time","systemMetrics","hrtimeToMS","elapTimeMS","elapUsage","elapUserMS","elapSystMS","system","totalUsageMS","totalUsagePercent","push","docSzCache","setPcpu","handleSessionActivity","msg","session","countNewSession","indexOf","isSessionActive","_activeAt","Date","isLocalAddress","socket","inactiveTime","isLocalHostRegex","isLocalAddressRegex","host","headers","test","address","remoteAddress"],"mappings":"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","sourcesContent":["var EventLoopMonitor = Npm.require('evloop-monitor');\nimport { createHistogram } from '../utils.js';\nimport GCMetrics from '../hijack/gc.js';\nimport { getFiberMetrics, resetFiberMetrics } from '../hijack/async.js';\nimport { getMongoDriverStats, resetMongoDriverStats } from '../hijack/mongo-driver-events.js';\n\nSystemModel = function () {\n  this.startTime = Ntp._now();\n  this.newSessions = 0;\n  this.sessionTimeout = 1000 * 60 * 30; //30 min\n\n  this.evloopHistogram = createHistogram();\n  this.evloopMonitor = new EventLoopMonitor(200);\n  this.evloopMonitor.start();\n  this.evloopMonitor.on('lag', lag => {\n    // store as microsecond\n    this.evloopHistogram.add(lag * 1000);\n  });\n\n  this.gcMetrics = new GCMetrics();\n  this.gcMetrics.start();\n\n\n  this.cpuTime = process.hrtime();\n  this.previousCpuUsage = process.cpuUsage();\n  this.cpuHistory = [];\n  this.currentCpuUsage = 0;\n\n  setInterval(() => {\n    this.cpuUsage();\n  }, 2000);\n}\n\n_.extend(SystemModel.prototype, KadiraModel.prototype);\n\nSystemModel.prototype.buildPayload = function() {\n  var metrics = {};\n  var now = Ntp._now();\n  metrics.startTime = Kadira.syncedDate.syncTime(this.startTime);\n  metrics.endTime = Kadira.syncedDate.syncTime(now);\n  metrics.sessions = countKeys(Meteor.server.sessions);\n\n  let memoryUsage = process.memoryUsage();\n  metrics.memory = memoryUsage.rss / (1024*1024);\n  metrics.memoryArrayBuffers = (memoryUsage.arrayBuffers || 0) / (1024*1024);\n  metrics.memoryExternal = memoryUsage.external / (1024*1024);\n  metrics.memoryHeapUsed = memoryUsage.heapUsed / (1024*1024);\n  metrics.memoryHeapTotal = memoryUsage.heapTotal / (1024*1024);\n\n  metrics.newSessions = this.newSessions;\n  this.newSessions = 0;\n\n  metrics.activeRequests = process._getActiveRequests().length;\n  metrics.activeHandles = process._getActiveHandles().length;\n\n  // track eventloop metrics\n  metrics.pctEvloopBlock = this.evloopMonitor.status().pctBlock;\n  metrics.evloopHistogram = this.evloopHistogram;\n  this.evloopHistogram = createHistogram();\n\n  metrics.gcMajorDuration = this.gcMetrics.metrics.gcMajor;\n  metrics.gcMinorDuration = this.gcMetrics.metrics.gcMinor;\n  metrics.gcIncrementalDuration = this.gcMetrics.metrics.gcIncremental;\n  metrics.gcWeakCBDuration = this.gcMetrics.metrics.gcWeakCB;\n  this.gcMetrics.reset();\n\n  const driverMetrics = getMongoDriverStats();\n  resetMongoDriverStats();\n\n  metrics.mongoPoolSize = driverMetrics.poolSize;\n  metrics.mongoPoolPrimaryCheckouts = driverMetrics.primaryCheckouts;\n  metrics.mongoPoolOtherCheckouts = driverMetrics.otherCheckouts;\n  metrics.mongoPoolCheckoutTime = driverMetrics.checkoutTime;\n  metrics.mongoPoolMaxCheckoutTime = driverMetrics.maxCheckoutTime;\n  metrics.mongoPoolPending = driverMetrics.pending;\n  metrics.mongoPoolCheckedOutConnections = driverMetrics.checkedOut;\n  metrics.mongoPoolCreatedConnections = driverMetrics.created;\n\n  const fiberMetrics = getFiberMetrics();\n  resetFiberMetrics();\n  metrics.createdFibers = fiberMetrics.created;\n  metrics.activeFibers = fiberMetrics.active;\n  metrics.fiberPoolSize = fiberMetrics.poolSize;\n\n  metrics.pcpu = 0;\n  metrics.pcpuUser = 0;\n  metrics.pcpuSystem = 0;\n\n  if (this.cpuHistory.length > 0) {\n    let lastCpuUsage = this.cpuHistory[this.cpuHistory.length - 1];\n    metrics.pcpu = lastCpuUsage.usage * 100;\n    metrics.pcpuUser = lastCpuUsage.user * 100;\n    metrics.pcpuSystem = lastCpuUsage.sys * 100;\n  }\n\n  metrics.cpuHistory = this.cpuHistory.map(entry => {\n    return {\n      time: Kadira.syncedDate.syncTime(entry.time),\n      usage: entry.usage,\n      sys: entry.sys,\n      user: entry.user\n    };\n  });\n\n  this.cpuHistory = [];\n  this.startTime = now;\n  return {systemMetrics: [metrics]};\n};\n\nfunction hrtimeToMS(hrtime) {\n  return hrtime[0] * 1000 + hrtime[1] / 1000000;\n}\n\nSystemModel.prototype.cpuUsage = function() {\n  var elapTimeMS = hrtimeToMS(process.hrtime(this.cpuTime));\n  var elapUsage = process.cpuUsage(this.previousCpuUsage);\n  var elapUserMS = elapUsage.user / 1000;\n  var elapSystMS = elapUsage.system / 1000;\n  var totalUsageMS = elapUserMS + elapSystMS;\n  var totalUsagePercent = totalUsageMS / elapTimeMS;\n\n  this.cpuHistory.push({\n    time: Ntp._now(),\n    usage: totalUsagePercent,\n    user: elapUserMS / elapTimeMS,\n    sys: elapSystMS / elapUsage.system\n  });\n\n  this.currentCpuUsage = totalUsagePercent * 100;\n  Kadira.docSzCache.setPcpu(this.currentCpuUsage);\n\n  this.cpuTime = process.hrtime();\n  this.previousCpuUsage = process.cpuUsage();\n}\n\nSystemModel.prototype.handleSessionActivity = function(msg, session) {\n  if(msg.msg === 'connect' && !msg.session) {\n    this.countNewSession(session);\n  } else if(['sub', 'method'].indexOf(msg.msg) != -1) {\n    if(!this.isSessionActive(session)) {\n      this.countNewSession(session);\n    }\n  }\n  session._activeAt = Date.now();\n}\n\nSystemModel.prototype.countNewSession = function(session) {\n  if(!isLocalAddress(session.socket)) {\n    this.newSessions++;\n  }\n}\n\nSystemModel.prototype.isSessionActive = function(session) {\n  var inactiveTime = Date.now() - session._activeAt;\n  return inactiveTime < this.sessionTimeout;\n}\n\n// ------------------------------------------------------------------------- //\n\n// http://regex101.com/r/iF3yR3/2\nvar isLocalHostRegex = /^(?:.*\\.local|localhost)(?:\\:\\d+)?|127(?:\\.\\d{1,3}){3}|192\\.168(?:\\.\\d{1,3}){2}|10(?:\\.\\d{1,3}){3}|172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2}$/;\n\n// http://regex101.com/r/hM5gD8/1\nvar isLocalAddressRegex = /^127(?:\\.\\d{1,3}){3}|192\\.168(?:\\.\\d{1,3}){2}|10(?:\\.\\d{1,3}){3}|172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2}$/;\n\nfunction isLocalAddress (socket) {\n  var host = socket.headers['host'];\n  if(host) return isLocalHostRegex.test(host);\n  var address = socket.headers['x-forwarded-for'] || socket.remoteAddress;\n  if(address) return isLocalAddressRegex.test(address);\n}\n"]},"sourceType":"module","hash":"b3a94fe2027bf9f4c5ac71fc027c05a8c805ac20"}
