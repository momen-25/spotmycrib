{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/common/common.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"common/common.js","filename":"/home/momen/projects/spotmycrib-master/common/common.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/common/common.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"common/common.js"}},"code":"module.link(\"../imports/api/publications.js\");\nmodule.link(\"../imports/api/profile.js\");\nmodule.link(\"../imports/api/properties.js\");\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\n// import '../imports/ui/templates/accounts/signIn/signIn.js'\n// import '../imports/ui/templates/accounts/signUp/signUp.js'\n// import '../imports/ui/templates/accounts/forgot/forgot.js'\nviews = {};\n\nviews['propertyManage.view'] = function (terms) {\n  try {\n    // var id = Router.current().params.id\n    return {\n      find: {\n        propertyId: terms.id\n      },\n      options: {\n        limit: 1\n      } // sort: {sort: {createdAt: -1}, limit: 1}\n\n    };\n  } catch (e) {\n    return {\n      find: {},\n      options: {\n        limit: 1\n      },\n      fail: true\n    };\n  }\n};\n\nviews['property.view'] = function (terms) {\n  try {\n    return {\n      find: {\n        _id: terms.id\n      },\n      options: {\n        limit: 1\n      }\n    };\n  } catch (e) {\n    return {\n      find: {},\n      options: {\n        limit: 1\n      },\n      fail: true\n    };\n  }\n};\n\nviews['PMactivityHistory.view'] = function (terms) {\n  try {\n    // var id = Router.current().params.id\n    var lim = Session.get('resultsPerPage');\n    if (!lim) lim = 100;\n    return {\n      find: {\n        propertyId: terms.id\n      },\n      options: {\n        limit: lim,\n        sort: {\n          createdAt: -1\n        }\n      } // sort: {sort: {createdAt: -1}, limit: 1}\n\n    };\n  } catch (e) {\n    return {\n      find: {},\n      options: {\n        limit: 1\n      },\n      fail: true\n    };\n  }\n};\n\nviews['MyProperties.view'] = function (terms) {\n  try {\n    var resperpage = terms.resperpage;\n    if (isNaN(resperpage)) resperpage = 20;\n    if (!resperpage) resperpage = 20;\n    if (resperpage < 0 || resperpage > 100) resperpage = 20;\n    var pg = 1;\n\n    try {\n      pg = parseInt(terms.pageno);\n    } catch (e) {}\n\n    if (isNaN(pg)) pg = 1;\n    var skip = (pg - 1) * resperpage;\n    if (isNaN(skip)) skip = 0;\n    return {\n      find: {},\n      options: {\n        limit: parseInt(resperpage),\n        sort: {\n          updatedAt: -1\n        },\n        skip: parseInt(skip)\n      }\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      find: {},\n      options: {\n        limit: 1\n      },\n      fail: true\n    };\n  }\n};\n\nviews['PropertyApplications.view'] = function (terms) {\n  try {\n    var originalPgSplit = null,\n        validOriginalPgSplit = false;\n\n    if (terms.pageno) {\n      originalPgSplit = terms.pageno.toString().split('-');\n\n      if (originalPgSplit.length == 2) {\n        //if format issue, then reset issue.\n        // if inside it means that format is correct, below if will correct data if required.\n        validOriginalPgSplit = true;\n        if (isNaN(originalPgSplit[0])) originalPgSplit[0] = 1; // if its not a number then reset it.\n\n        if (isNaN(originalPgSplit[1])) originalPgSplit[1] = 1; // if its not a number then reset it.\n      }\n    }\n\n    if (!validOriginalPgSplit) {\n      //invalid originalPgSplit; reset it\n      originalPgSplit = [1, 1];\n    } //// for property applications\n\n\n    var resperpage = terms.PAresperpage;\n    if (isNaN(resperpage)) resperpage = 20;\n    if (!resperpage) resperpage = 20;\n    if (resperpage < 0 || resperpage > 100) resperpage = 20;\n    var pg = originalPgSplit[0];\n    var skip = (pg - 1) * resperpage;\n    if (isNaN(skip)) skip = 0;\n    var out = {\n      id: terms.id,\n      options: {\n        limit: resperpage\n      }\n    };\n    out.propertyApplications = {\n      find: {},\n      options: {\n        limit: parseInt(resperpage),\n        sort: {\n          createdAt: -1\n        },\n        skip: parseInt(skip)\n      }\n    }; //// for Email Enquiries\n\n    resperpage = terms.EEresperpage;\n    if (isNaN(resperpage)) resperpage = 20;\n    if (!resperpage) resperpage = 20;\n    if (resperpage < 0 || resperpage > 100) resperpage = 20;\n    pg = originalPgSplit[1];\n    skip = (pg - 1) * resperpage;\n    if (isNaN(skip)) skip = 0;\n    out.emailEnquiries = {\n      find: {},\n      options: {\n        limit: parseInt(resperpage),\n        sort: {\n          createdAt: -1\n        },\n        skip: parseInt(skip)\n      }\n    };\n    return out;\n  } catch (e) {\n    console.log(e);\n    return {\n      propertyApplications: {\n        find: {},\n        options: {\n          limit: 1\n        },\n        fail: true\n      },\n      emailEnquiries: {\n        find: {},\n        options: {\n          limit: 1\n        },\n        fail: true\n      },\n      fail: true\n    };\n  }\n};\n\nviews['MyAdvertisements.view'] = function (terms) {\n  try {\n    var resperpage = terms.resperpage;\n    if (isNaN(resperpage)) resperpage = 20;\n    if (!resperpage) resperpage = 20;\n    if (resperpage < 0 || resperpage > 100) resperpage = 20;\n    var pg = 1;\n\n    try {\n      pg = parseInt(terms.pageno);\n    } catch (e) {}\n\n    if (isNaN(pg)) pg = 1;\n    var skip = (pg - 1) * resperpage;\n    if (isNaN(skip)) skip = 0;\n    return {\n      find: {},\n      options: {\n        limit: parseInt(resperpage),\n        sort: {\n          updatedAt: -1\n        },\n        skip: parseInt(skip)\n      }\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      find: {},\n      options: {\n        limit: 1\n      },\n      fail: true\n    };\n  }\n};\n\nviews['browseLettings.view'] = function (terms) {\n  try {\n    var resperpage = terms.resperpage;\n    if (isNaN(resperpage)) resperpage = 20;\n    if (!resperpage) resperpage = 20;\n    if (resperpage < 0 || resperpage > 100) resperpage = 20;\n    var slugData = getSlugData(terms.slug, terms.query);\n    var find = {};\n    if (slugData.area) find['address.area'] = slugData.area;\n    if (slugData.county) find['address.county'] = slugData.county;\n    if (slugData.propertyType) find['type'] = slugData.propertyType; //.toString().toLowerCase()\n    // if(slugData.country) find.address.country=slugData.country;\n    // console.log(slugData)\n\n    var bedCount = null;\n    if (slugData.bedCount && !isNaN(slugData.bedCount)) bedCount = parseInt(slugData.bedCount);\n    var pg = 1;\n\n    try {\n      pg = parseInt(terms.pageno);\n    } catch (e) {}\n\n    if (isNaN(pg)) pg = 1;\n    var skip = (pg - 1) * resperpage;\n    if (isNaN(skip)) skip = 0;\n    var sortOptions = {\n      updatedAt: -1\n    };\n    if (slugData.luxurySort) sortOptions = {\n      rentMonthly: -1\n    };else if (slugData.cheapSort) sortOptions = {\n      rentMonthly: 1\n    };else if (slugData.mostRecentSort) sortOptions = {\n      updatedAt: -1\n    };else if (slugData.leastRecentSort) sortOptions = {\n      updatedAt: 1\n    };\n    var tmp = [],\n        validKeys = null;\n\n    if (terms.propertykey) {\n      validKeys = [];\n      tmp = terms.propertykey.split('-');\n\n      for (var i = 0; i < tmp.length; i++) {\n        if (tmp[i].length == 5) validKeys.push(tmp[i].toUpperCase()); //This is the validation we are doing.\n      }\n    }\n\n    return {\n      find: find,\n      propertykey: validKeys,\n      minRent: slugData.minRent,\n      maxRent: slugData.maxRent,\n      minBeds: slugData.minBeds,\n      maxBeds: slugData.maxBeds,\n      bedCount: bedCount,\n      options: {\n        limit: parseInt(resperpage),\n        sort: sortOptions,\n        skip: parseInt(skip)\n      }\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      find: {},\n      options: {\n        limit: 1\n      },\n      fail: true\n    };\n  }\n};\n\nviews['browseBlogs.view'] = function (terms) {\n  try {\n    var resperpage = terms.resperpage;\n    if (isNaN(resperpage)) resperpage = 6;\n    if (!resperpage) resperpage = 6;\n    if (resperpage < 0 || resperpage > 100) resperpage = 6; // if(!terms.slug) throw 'Slug required';\n\n    var find = {}; // if(terms.slug) find['slug']=slug\n\n    var pg = 1;\n\n    try {\n      pg = parseInt(terms.pageno);\n    } catch (e) {}\n\n    if (isNaN(pg)) pg = 1;\n    var skip = (pg - 1) * resperpage;\n    if (isNaN(skip)) skip = 0;\n    var sortOptions = {\n      updatedAt: -1\n    };\n    return {\n      find: find,\n      options: {\n        limit: parseInt(resperpage),\n        sort: sortOptions,\n        skip: parseInt(skip)\n      }\n    };\n  } catch (e) {\n    console.log(e);\n    return {\n      find: {},\n      options: {\n        limit: 1\n      },\n      fail: true\n    };\n  }\n};\n\nqueryConstructor = function (terms) {\n  var viewFunction = views[terms.viewName];\n  var data = viewFunction(terms);\n\n  if (data.options.limit > 100) {\n    data.options.limit = 100;\n  }\n\n  return data;\n}; //http://www.discovermeteor.com/blog/query-constructors/\n\n\nfunction getSlugData(slug, query) {\n  //This needs to be seperate on common.\n  var propertyType = \"\";\n  var county = \"\";\n  var area = \"\";\n  var maxRent = \"\";\n  var minRent = \"\";\n  var minBeds = \"\";\n  var maxBeds = \"\";\n  var country = \"\";\n  var bedCount = \"\";\n  var luxurySort = \"\";\n  var cheapSort = \"\";\n  var mostRecentSort = \"\";\n  var leastRecentSort = \"\";\n  var range = [{\n    cur: \"eur\",\n    min: 0,\n    max: 10000\n  }];\n  var selectedCur = range[0];\n\n  if (query) {\n    if (query.minRent) minRent = query.minRent;\n    if (query.maxRent) maxRent = query.maxRent;\n    if (query.minBeds) minBeds = query.minBeds;\n    if (query.maxBeds) maxBeds = query.maxBeds;\n    if (query.bedCount) bedCount = query.bedCount;\n    if (query.luxurySort) luxurySort = query.luxurySort;\n    if (query.cheapSort) cheapSort = query.cheapSort;\n    if (query.mostRecentSort) mostRecentSort = query.mostRecentSort;\n    if (query.leastRecentSort) leastRecentSort = query.leastRecentSort;\n  }\n\n  if (!slug) {\n    return {\n      country: country,\n      county: county,\n      area: area,\n      minRent: minRent,\n      maxRent: maxRent,\n      minBeds: minBeds,\n      maxBeds: maxBeds,\n      bedCount: bedCount,\n      luxurySort: luxurySort,\n      cheapSort: cheapSort,\n      mostRecentSort: mostRecentSort,\n      leastRecentSort: leastRecentSort,\n      propertyType: propertyType\n    };\n  }\n\n  if (slug.indexOf('-for-') != -1) {\n    propertyType = slug.split('-for-')[0];\n    propertyType = propertyType.split('-').join(' ');\n  }\n\n  if (slug.indexOf('-in-') != -1) {\n    var tmp = slug.split('-in-')[1].split('-');\n\n    switch (tmp.length) {\n      case 3:\n        country = tmp[2];\n        county = tmp[1];\n        area = tmp[0];\n        break;\n\n      case 2:\n        country = tmp[1];\n        county = tmp[0];\n        break;\n\n      case 1:\n        country = tmp[0];\n        break;\n    }\n\n    if (propertyType) propertyType = propertyType.replace(/_/g, ' ');\n    if (county) county = titleCaseAllWords(county.replace(/_/g, ' '));\n    if (country) country = titleCaseAllWords(country.replace(/_/g, ' '));\n    if (area) area = titleCaseAllWords(area.replace(/_/g, ' '));\n  }\n\n  return {\n    country: country,\n    county: county,\n    area: area,\n    minRent: minRent,\n    maxRent: maxRent,\n    minBeds: minBeds,\n    maxBeds: maxBeds,\n    bedCount: bedCount,\n    luxurySort: luxurySort,\n    cheapSort: cheapSort,\n    mostRecentSort: mostRecentSort,\n    leastRecentSort: leastRecentSort,\n    propertyType: propertyType\n  };\n}\n\nfunction titleCaseAllWords(str) {\n  if (!str) return;\n  return str.split(' ').map(function (str) {\n    return str.charAt(0).toUpperCase() + str.toLowerCase().substring(1);\n  }).join(' '); // var words = str.split(' ')\n  // for(var i=0;i<words.length;i++){\n  //\n  // }\n  // return str.charAt(0).toUpperCase() + str.toLowerCase().substring(1);\n}\n\ncdnPath = function (url) {\n  if (Meteor.settings.public.CDN_ENABLED) {\n    return CDN.get_cdn_url() + url; // if(Meteor.isDevelopment || !process.env.GALAXY_APP_VERSION_ID) return `http://d30nklzkhaqiiz.cloudfront.net${url}`;\n    //\n    // if(url.indexOf('?')!=-1)return `http://d30nklzkhaqiiz.cloudfront.net${url}?_g_app_v_=${process.env.GALAXY_APP_VERSION_ID}`;\n    // else return `http://d30nklzkhaqiiz.cloudfront.net${url}&_g_app_v_=${process.env.GALAXY_APP_VERSION_ID}`;\n  }\n\n  return url;\n};\n\nclearMeta = function () {\n  addLangLink();\n  if (!Meteor.isClient) return;\n  var arr_elms = [];\n  arr_elms = document.head.getElementsByTagName(\"meta\"); // This var is reactive\n\n  var c = 0;\n\n  while (arr_elms[c]) {\n    //First 3 are default and useful\n    // console.log(arr_elms[3])\n    if (arr_elms[c].name == \"description\") document.head.removeChild(arr_elms[c]);\n    c++;\n  } // console.log('Removed: '+c);\n  ///Below code removed extra link hreflang 's\n\n\n  arr_elms = [];\n  arr_elms = document.head.getElementsByTagName(\"link\"); // This var is reactive\n\n  c = 0;\n\n  while (arr_elms[c]) {\n    //First 3 are default and useful\n    if (arr_elms[c].hreflang) document.head.removeChild(arr_elms[c]);\n    c++;\n  }\n};\n\naddLangLink = function () {\n  try {\n    // <link rel=\"alternate\" href=\"https://www.spotmycrib.ie/\" hreflang=\"en-ie\" />\n    var currentURL = FlowRouter.url(FlowRouter.current().route.name, FlowRouter.current().params, FlowRouter.current().queryParams);\n    var linkInfo = {\n      rel: \"alternate\",\n      hreflang: \"en-ie\",\n      href: currentURL\n    };\n    DocHead.addLink(linkInfo);\n    if (FlowRouter.current().route.name != 'letting') DocHead.addMeta({\n      rel: \"canonical\",\n      href: currentURL\n    }); // console.log('In addLang');\n  } catch (e) {}\n};\n\nfbq = function () {}; //Replacement for FB pixel code","map":{"version":3,"sources":["common/common.js"],"names":["module","link","Meteor","v","views","terms","find","propertyId","id","options","limit","e","fail","_id","lim","Session","get","sort","createdAt","resperpage","isNaN","pg","parseInt","pageno","skip","updatedAt","console","log","originalPgSplit","validOriginalPgSplit","toString","split","length","PAresperpage","out","propertyApplications","EEresperpage","emailEnquiries","slugData","getSlugData","slug","query","area","county","propertyType","bedCount","sortOptions","luxurySort","rentMonthly","cheapSort","mostRecentSort","leastRecentSort","tmp","validKeys","propertykey","i","push","toUpperCase","minRent","maxRent","minBeds","maxBeds","queryConstructor","viewFunction","viewName","data","country","range","cur","min","max","selectedCur","indexOf","join","replace","titleCaseAllWords","str","map","charAt","toLowerCase","substring","cdnPath","url","settings","public","CDN_ENABLED","CDN","get_cdn_url","clearMeta","addLangLink","isClient","arr_elms","document","head","getElementsByTagName","c","name","removeChild","hreflang","currentURL","FlowRouter","current","route","params","queryParams","linkInfo","rel","href","DocHead","addLink","addMeta","fbq"],"mappings":"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","sourcesContent":["import \"../imports/api/publications.js\";\nimport '../imports/api/profile.js';\nimport \"../imports/api/properties.js\";\nimport {Meteor} from \"meteor/meteor\";\n// import '../imports/ui/templates/accounts/signIn/signIn.js'\n// import '../imports/ui/templates/accounts/signUp/signUp.js'\n// import '../imports/ui/templates/accounts/forgot/forgot.js'\n\nviews = {};\n\nviews['propertyManage.view'] = function(terms){\n    try{\n        // var id = Router.current().params.id\n        return {\n            find: {propertyId:terms.id},\n            options: {limit: 1}\n            // sort: {sort: {createdAt: -1}, limit: 1}\n        };\n    }catch(e){\n        return {\n            find:{},\n            options: {limit: 1},\n            fail:true\n        }\n    }\n}\nviews['property.view'] = function(terms){\n    try{\n        return {\n            find: {_id:terms.id},\n            options: {limit: 1}\n        };\n    }catch(e){\n        return {\n            find:{},\n            options: {limit: 1},\n            fail:true\n        }\n    }\n}\nviews['PMactivityHistory.view'] = function(terms){\n    try{\n        // var id = Router.current().params.id\n        var lim = Session.get('resultsPerPage');\n        if(!lim) lim = 100;\n        return {\n            find: {propertyId:terms.id},\n            options: {limit: lim,sort: { createdAt : -1 }}\n            // sort: {sort: {createdAt: -1}, limit: 1}\n        };\n    }catch(e){\n        return {\n            find:{},\n            options: {limit: 1},\n            fail:true\n        }\n    }\n}\nviews['MyProperties.view'] = function(terms){\n    try{\n        var resperpage = terms.resperpage;\n        if(isNaN(resperpage))resperpage = 20;\n        if(!resperpage) resperpage = 20;\n        if(resperpage<0||resperpage>100) resperpage = 20;\n\n\n        var pg = 1;\n        try{pg = parseInt(terms.pageno);}catch(e){}\n        if(isNaN(pg))pg = 1;\n        var skip = (pg-1)*resperpage;\n        if(isNaN(skip))skip = 0;\n\n        return {\n            find: {},\n            options: {limit: parseInt(resperpage),sort: { updatedAt : -1 }, skip: parseInt(skip)}\n        };\n    }catch(e){\n        console.log(e);\n        return {\n            find:{},\n            options: {limit: 1},\n            fail:true\n        }\n    }\n}\nviews['PropertyApplications.view'] = function(terms){\n    try{\n        let originalPgSplit = null, validOriginalPgSplit = false;\n        if(terms.pageno){\n            originalPgSplit = terms.pageno.toString().split('-')\n            if(originalPgSplit.length==2){//if format issue, then reset issue.\n                // if inside it means that format is correct, below if will correct data if required.\n                validOriginalPgSplit = true;\n                if(isNaN(originalPgSplit[0])) originalPgSplit[0] = 1;// if its not a number then reset it.\n                if(isNaN(originalPgSplit[1])) originalPgSplit[1] = 1;// if its not a number then reset it.\n            }\n        }\n        if(!validOriginalPgSplit){//invalid originalPgSplit; reset it\n            originalPgSplit = [1,1]\n        }\n\n        //// for property applications\n        var resperpage = terms.PAresperpage;\n        if(isNaN(resperpage))resperpage = 20;\n        if(!resperpage) resperpage = 20;\n        if(resperpage<0||resperpage>100) resperpage = 20;\n        var pg = originalPgSplit[0];\n        var skip = (pg-1)*resperpage;\n        if(isNaN(skip))skip = 0;\n        let out = {id:terms.id,options:{limit:resperpage}}\n        out.propertyApplications = {\n            find: {},\n            options: {limit: parseInt(resperpage),sort: { createdAt : -1 }, skip: parseInt(skip)}\n        }\n        //// for Email Enquiries\n        resperpage = terms.EEresperpage;\n        if(isNaN(resperpage))resperpage = 20;\n        if(!resperpage) resperpage = 20;\n        if(resperpage<0||resperpage>100) resperpage = 20;\n        pg = originalPgSplit[1];\n        skip = (pg-1)*resperpage;\n        if(isNaN(skip))skip = 0;\n        out.emailEnquiries = {\n            find: {},\n            options: {limit: parseInt(resperpage),sort: { createdAt : -1 }, skip: parseInt(skip)}\n        }\n\n        return out;\n    }catch(e){\n        console.log(e);\n        return {\n            propertyApplications: {\n                find:{},\n                options: {limit: 1},\n                fail:true\n            },\n            emailEnquiries: {\n                find:{},\n                options: {limit: 1},\n                fail:true\n            },\n            fail:true\n        }\n    }\n}\nviews['MyAdvertisements.view'] = function(terms){\n\n    try{\n        var resperpage = terms.resperpage;\n        if(isNaN(resperpage))resperpage = 20;\n        if(!resperpage) resperpage = 20;\n        if(resperpage<0||resperpage>100) resperpage = 20;\n\n\n        var pg = 1;\n        try{pg = parseInt(terms.pageno);}catch(e){}\n        if(isNaN(pg))pg = 1;\n        var skip = (pg-1)*resperpage;\n        if(isNaN(skip))skip = 0;\n\n        return {\n            find: {},\n            options: {limit: parseInt(resperpage),sort: { updatedAt : -1 }, skip: parseInt(skip)}\n        };\n    }catch(e){\n        console.log(e);\n        return {\n            find:{},\n            options: {limit: 1},\n            fail:true\n        }\n    }\n}\nviews['browseLettings.view'] = function(terms){\n\n    try{\n        var resperpage = terms.resperpage;\n        if(isNaN(resperpage))resperpage = 20;\n        if(!resperpage) resperpage = 20;\n        if(resperpage<0||resperpage>100) resperpage = 20;\n\n        var slugData = getSlugData(terms.slug,terms.query);\n\n        var find={}\n        if(slugData.area) find['address.area']=slugData.area\n        if(slugData.county) find['address.county']=slugData.county\n        if(slugData.propertyType) find['type']=slugData.propertyType //.toString().toLowerCase()\n        // if(slugData.country) find.address.country=slugData.country;\n        // console.log(slugData)\n        var bedCount = null;\n        if(slugData.bedCount && !isNaN(slugData.bedCount) )bedCount=parseInt(slugData.bedCount)\n\n        var pg = 1;\n        try{pg = parseInt(terms.pageno);}catch(e){}\n        if(isNaN(pg))pg = 1;\n        var skip = (pg-1)*resperpage;\n        if(isNaN(skip))skip = 0;\n\n        var sortOptions = { updatedAt : -1 }\n        if( slugData.luxurySort )sortOptions = { rentMonthly : -1 }\n        else if( slugData.cheapSort )sortOptions = { rentMonthly : 1 }\n        else if( slugData.mostRecentSort )sortOptions = { updatedAt : -1 }\n        else if( slugData.leastRecentSort )sortOptions = { updatedAt : 1 }\n\n        let tmp = [],validKeys = null;\n        if(terms.propertykey){\n            validKeys = []\n            tmp = terms.propertykey.split('-');\n            for(let i=0;i<tmp.length;i++){\n                if(tmp[i].length==5)validKeys.push(tmp[i].toUpperCase())//This is the validation we are doing.\n            }\n        }\n\n        return {\n            find: find,\n            propertykey:validKeys,\n            minRent:slugData.minRent,\n            maxRent:slugData.maxRent,\n            minBeds:slugData.minBeds,\n            maxBeds:slugData.maxBeds,\n            bedCount:bedCount,\n            options: {limit: parseInt(resperpage),sort: sortOptions, skip: parseInt(skip)}\n        };\n    }catch(e){\n        console.log(e);\n        return {\n            find:{},\n            options: {limit: 1},\n            fail:true\n        }\n    }\n}\nviews['browseBlogs.view'] = function(terms){\n\n    try{\n        var resperpage = terms.resperpage;\n        if(isNaN(resperpage))resperpage = 6;\n        if(!resperpage) resperpage = 6;\n        if(resperpage<0||resperpage>100) resperpage = 6;\n\n        // if(!terms.slug) throw 'Slug required';\n        var find={}\n        // if(terms.slug) find['slug']=slug\n\n        var pg = 1;\n        try{pg = parseInt(terms.pageno);}catch(e){}\n        if(isNaN(pg))pg = 1;\n        var skip = (pg-1)*resperpage;\n        if(isNaN(skip))skip = 0;\n\n        var sortOptions = { updatedAt : -1 }\n\n        return {\n            find: find,\n            options: {limit: parseInt(resperpage),sort: sortOptions, skip: parseInt(skip)}\n        };\n    }catch(e){\n        console.log(e);\n        return {\n            find:{},\n            options: {limit: 1},\n            fail:true\n        }\n    }\n}\n\nqueryConstructor = function (terms) {\n\n    var viewFunction = views[terms.viewName]\n    var data = viewFunction(terms);\n\n    if (data.options.limit > 100) {\n        data.options.limit = 100;\n    }\n\n    return data;\n\n}//http://www.discovermeteor.com/blog/query-constructors/\n\nfunction getSlugData(slug, query){//This needs to be seperate on common.\n    var propertyType = \"\";\n    var county = \"\";\n    var area = \"\";\n    var maxRent = \"\";\n    var minRent = \"\";\n    var minBeds = \"\";\n    var maxBeds = \"\";\n    var country = \"\";\n    var bedCount = \"\";\n    var luxurySort = \"\";\n    var cheapSort = \"\";\n    var mostRecentSort = \"\";\n    var leastRecentSort = \"\";\n\n    var range = [{cur:\"eur\",min:0,max:10000}]\n    var selectedCur = range[0];\n\n    if(query) {\n        if(query.minRent)minRent = query.minRent;\n        if(query.maxRent)maxRent = query.maxRent;\n        if(query.minBeds)minBeds = query.minBeds;\n        if(query.maxBeds)maxBeds = query.maxBeds;\n        if(query.bedCount)bedCount = query.bedCount;\n        if(query.luxurySort)luxurySort = query.luxurySort;\n        if(query.cheapSort)cheapSort = query.cheapSort;\n        if(query.mostRecentSort)mostRecentSort = query.mostRecentSort;\n        if(query.leastRecentSort)leastRecentSort = query.leastRecentSort;\n    }\n\n    if(!slug){\n        return {\n            country:country,\n            county:county,\n            area:area,\n            minRent:minRent,\n            maxRent:maxRent,\n            minBeds:minBeds,\n            maxBeds:maxBeds,\n            bedCount:bedCount,\n            luxurySort:luxurySort,\n            cheapSort:cheapSort,\n            mostRecentSort:mostRecentSort,\n            leastRecentSort:leastRecentSort,\n            propertyType:propertyType,\n        };\n    }\n    if(slug.indexOf('-for-')!=-1){\n        propertyType = slug.split('-for-')[0];\n        propertyType = propertyType.split('-').join(' ');\n    }\n    if(slug.indexOf('-in-')!=-1) {\n        var tmp = slug.split('-in-')[1].split('-')\n        switch (tmp.length) {\n            case 3:\n                country = tmp[2];\n                county = tmp[1];\n                area = tmp[0];\n                break;\n            case 2:\n                country = tmp[1];\n                county = tmp[0];\n                break;\n            case 1:\n                country = tmp[0];\n                break;\n        }\n        if (propertyType) propertyType = propertyType.replace(/_/g, ' ')\n        if (county) county = titleCaseAllWords(county.replace(/_/g, ' '))\n        if (country) country = titleCaseAllWords(country.replace(/_/g, ' '))\n        if (area) area = titleCaseAllWords(area.replace(/_/g, ' '))\n    }\n    return {\n        country:country,\n        county:county,\n        area:area,\n        minRent:minRent,\n        maxRent:maxRent,\n        minBeds:minBeds,\n        maxBeds:maxBeds,\n        bedCount:bedCount,\n        luxurySort:luxurySort,\n        cheapSort:cheapSort,\n        mostRecentSort:mostRecentSort,\n        leastRecentSort:leastRecentSort,\n        propertyType:propertyType,\n    }\n}\nfunction titleCaseAllWords(str){\n    if(!str)return;\n    return str.split(' ').map(function(str){\n        return str.charAt(0).toUpperCase() + str.toLowerCase().substring(1);\n    }).join(' ')\n    // var words = str.split(' ')\n    // for(var i=0;i<words.length;i++){\n    //\n    // }\n    // return str.charAt(0).toUpperCase() + str.toLowerCase().substring(1);\n}\ncdnPath = function(url){\n    if(Meteor.settings.public.CDN_ENABLED){\n        return CDN.get_cdn_url()+url;\n\n        // if(Meteor.isDevelopment || !process.env.GALAXY_APP_VERSION_ID) return `http://d30nklzkhaqiiz.cloudfront.net${url}`;\n        //\n        // if(url.indexOf('?')!=-1)return `http://d30nklzkhaqiiz.cloudfront.net${url}?_g_app_v_=${process.env.GALAXY_APP_VERSION_ID}`;\n        // else return `http://d30nklzkhaqiiz.cloudfront.net${url}&_g_app_v_=${process.env.GALAXY_APP_VERSION_ID}`;\n    }\n    return url;\n}\nclearMeta = function() {\n    addLangLink();\n    if(!Meteor.isClient)return;\n    var arr_elms = [];\n    arr_elms = document.head.getElementsByTagName(\"meta\"); // This var is reactive\n    var c = 0;\n    while(arr_elms[c]){//First 3 are default and useful\n        // console.log(arr_elms[3])\n        if(arr_elms[c].name == \"description\")\n            document.head.removeChild(arr_elms[c]);\n        c++;\n    }\n    // console.log('Removed: '+c);\n    ///Below code removed extra link hreflang 's\n    arr_elms = []\n    arr_elms = document.head.getElementsByTagName(\"link\"); // This var is reactive\n    c = 0;\n    while(arr_elms[c]){//First 3 are default and useful\n        if(arr_elms[c].hreflang)\n            document.head.removeChild(arr_elms[c]);\n        c++;\n    }\n}\naddLangLink = function(){\n    try {\n        // <link rel=\"alternate\" href=\"https://www.spotmycrib.ie/\" hreflang=\"en-ie\" />\n        var currentURL = FlowRouter.url(FlowRouter.current().route.name, FlowRouter.current().params, FlowRouter.current().queryParams)\n        var linkInfo = {rel: \"alternate\", hreflang: \"en-ie\", href: currentURL};\n        DocHead.addLink(linkInfo);\n\n        if(FlowRouter.current().route.name != 'letting')\n            DocHead.addMeta({rel: \"canonical\", href: currentURL });\n        // console.log('In addLang');\n    }catch(e){\n\n    }\n}\nfbq = function(){}//Replacement for FB pixel code"]},"sourceType":"module","hash":"0e82809eda02a06707872724a4a62771447f050f"}
