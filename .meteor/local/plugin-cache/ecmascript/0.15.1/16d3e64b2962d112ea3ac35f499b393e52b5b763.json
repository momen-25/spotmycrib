{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/environment_variables.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/environment_variables.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/environment_variables.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/environment_variables.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/environment_variables.js"}},"code":"function normalizedPrefix(name) {\n  return name.replace('KADIRA_', 'MONTI_');\n}\n\nKadira._parseEnv = function (env) {\n  var options = {};\n\n  for (var name in env) {\n    var value = env[name];\n    var normalizedName = normalizedPrefix(name);\n    var info = Kadira._parseEnv._options[normalizedName];\n\n    if (info && value) {\n      options[info.name] = info.parser(value);\n    }\n  }\n\n  return options;\n};\n\nKadira._parseEnv.parseInt = function (str) {\n  var num = parseInt(str);\n  if (num || num === 0) return num;\n  throw new Error('Kadira: Match Error: \"' + num + '\" is not a number');\n};\n\nKadira._parseEnv.parseBool = function (str) {\n  str = str.toLowerCase();\n  if (str === 'true') return true;\n  if (str === 'false') return false;\n  throw new Error('Kadira: Match Error: ' + str + ' is not a boolean');\n};\n\nKadira._parseEnv.parseUrl = function (str) {\n  return str;\n};\n\nKadira._parseEnv.parseString = function (str) {\n  return str;\n};\n\nKadira._parseEnv._options = {\n  // auth\n  MONTI_APP_ID: {\n    name: 'appId',\n    parser: Kadira._parseEnv.parseString\n  },\n  MONTI_APP_SECRET: {\n    name: 'appSecret',\n    parser: Kadira._parseEnv.parseString\n  },\n  // delay to send the initial ping to the kadira engine after page loads\n  MONTI_OPTIONS_CLIENT_ENGINE_SYNC_DELAY: {\n    name: 'clientEngineSyncDelay',\n    parser: Kadira._parseEnv.parseInt\n  },\n  // time between sending errors to the engine\n  MONTI_OPTIONS_ERROR_DUMP_INTERVAL: {\n    name: 'errorDumpInterval',\n    parser: Kadira._parseEnv.parseInt\n  },\n  // no of errors allowed in a given interval\n  MONTI_OPTIONS_MAX_ERRORS_PER_INTERVAL: {\n    name: 'maxErrorsPerInterval',\n    parser: Kadira._parseEnv.parseInt\n  },\n  // a zone.js specific option to collect the full stack trace(which is not much useful)\n  MONTI_OPTIONS_COLLECT_ALL_STACKS: {\n    name: 'collectAllStacks',\n    parser: Kadira._parseEnv.parseBool\n  },\n  // enable error tracking (which is turned on by default)\n  MONTI_OPTIONS_ENABLE_ERROR_TRACKING: {\n    name: 'enableErrorTracking',\n    parser: Kadira._parseEnv.parseBool\n  },\n  // kadira engine endpoint\n  MONTI_OPTIONS_ENDPOINT: {\n    name: 'endpoint',\n    parser: Kadira._parseEnv.parseUrl\n  },\n  // define the hostname of the current running process\n  MONTI_OPTIONS_HOSTNAME: {\n    name: 'hostname',\n    parser: Kadira._parseEnv.parseString\n  },\n  // interval between sending data to the kadira engine from the server\n  MONTI_OPTIONS_PAYLOAD_TIMEOUT: {\n    name: 'payloadTimeout',\n    parser: Kadira._parseEnv.parseInt\n  },\n  // set HTTP/HTTPS proxy\n  MONTI_OPTIONS_PROXY: {\n    name: 'proxy',\n    parser: Kadira._parseEnv.parseUrl\n  },\n  // number of items cached for tracking document size\n  MONTI_OPTIONS_DOCUMENT_SIZE_CACHE_SIZE: {\n    name: 'documentSizeCacheSize',\n    parser: Kadira._parseEnv.parseInt\n  },\n  // enable uploading sourcemaps\n  MONTI_UPLOAD_SOURCE_MAPS: {\n    name: 'uploadSourceMaps',\n    parser: Kadira._parseEnv.parseBool\n  },\n  MONTI_RECORD_IP_ADDRESS: {\n    name: 'recordIPAddress',\n    parser: Kadira._parseEnv.parseString\n  },\n  MONTI_EVENT_STACK_TRACE: {\n    name: 'eventStackTrace',\n    parser: Kadira._parseEnv.parseBool\n  }\n};","map":{"version":3,"sources":["packages/montiapm:agent/lib/environment_variables.js"],"names":["normalizedPrefix","name","replace","Kadira","_parseEnv","env","options","value","normalizedName","info","_options","parser","parseInt","str","num","Error","parseBool","toLowerCase","parseUrl","parseString","MONTI_APP_ID","MONTI_APP_SECRET","MONTI_OPTIONS_CLIENT_ENGINE_SYNC_DELAY","MONTI_OPTIONS_ERROR_DUMP_INTERVAL","MONTI_OPTIONS_MAX_ERRORS_PER_INTERVAL","MONTI_OPTIONS_COLLECT_ALL_STACKS","MONTI_OPTIONS_ENABLE_ERROR_TRACKING","MONTI_OPTIONS_ENDPOINT","MONTI_OPTIONS_HOSTNAME","MONTI_OPTIONS_PAYLOAD_TIMEOUT","MONTI_OPTIONS_PROXY","MONTI_OPTIONS_DOCUMENT_SIZE_CACHE_SIZE","MONTI_UPLOAD_SOURCE_MAPS","MONTI_RECORD_IP_ADDRESS","MONTI_EVENT_STACK_TRACE"],"mappings":"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","sourcesContent":["function normalizedPrefix (name) {\n  return name.replace('KADIRA_', 'MONTI_');\n}\n\nKadira._parseEnv = function (env) {\n  var options = {};\n  for(var name in env) {\n    var value = env[name];\n    var normalizedName = normalizedPrefix(name);\n    var info = Kadira._parseEnv._options[normalizedName];\n\n    if(info && value) {\n      options[info.name] = info.parser(value);\n    }\n  }\n\n  return options;\n};\n\n\nKadira._parseEnv.parseInt = function (str) {\n  var num = parseInt(str);\n  if(num || num === 0) return num;\n  throw new Error('Kadira: Match Error: \"'+num+'\" is not a number');\n};\n\n\nKadira._parseEnv.parseBool = function (str) {\n  str = str.toLowerCase();\n  if(str === 'true') return true;\n  if(str === 'false') return false;\n  throw new Error('Kadira: Match Error: '+str+' is not a boolean');\n};\n\n\nKadira._parseEnv.parseUrl = function (str) {\n  return str;\n};\n\n\nKadira._parseEnv.parseString = function (str) {\n  return str;\n};\n\n\nKadira._parseEnv._options = {\n  // auth\n  MONTI_APP_ID: {\n    name: 'appId',\n    parser: Kadira._parseEnv.parseString\n  },\n  MONTI_APP_SECRET: {\n    name: 'appSecret',\n    parser: Kadira._parseEnv.parseString\n  },\n  // delay to send the initial ping to the kadira engine after page loads\n  MONTI_OPTIONS_CLIENT_ENGINE_SYNC_DELAY: {\n    name: 'clientEngineSyncDelay',\n    parser: Kadira._parseEnv.parseInt,\n  },\n  // time between sending errors to the engine\n  MONTI_OPTIONS_ERROR_DUMP_INTERVAL: {\n    name: 'errorDumpInterval',\n    parser: Kadira._parseEnv.parseInt,\n  },\n  // no of errors allowed in a given interval\n  MONTI_OPTIONS_MAX_ERRORS_PER_INTERVAL: {\n    name: 'maxErrorsPerInterval',\n    parser: Kadira._parseEnv.parseInt,\n  },\n  // a zone.js specific option to collect the full stack trace(which is not much useful)\n  MONTI_OPTIONS_COLLECT_ALL_STACKS: {\n    name: 'collectAllStacks',\n    parser: Kadira._parseEnv.parseBool,\n  },\n  // enable error tracking (which is turned on by default)\n  MONTI_OPTIONS_ENABLE_ERROR_TRACKING: {\n    name: 'enableErrorTracking',\n    parser: Kadira._parseEnv.parseBool,\n  },\n  // kadira engine endpoint\n  MONTI_OPTIONS_ENDPOINT: {\n    name: 'endpoint',\n    parser: Kadira._parseEnv.parseUrl,\n  },\n  // define the hostname of the current running process\n  MONTI_OPTIONS_HOSTNAME: {\n    name: 'hostname',\n    parser: Kadira._parseEnv.parseString,\n  },\n  // interval between sending data to the kadira engine from the server\n  MONTI_OPTIONS_PAYLOAD_TIMEOUT: {\n    name: 'payloadTimeout',\n    parser: Kadira._parseEnv.parseInt,\n  },\n  // set HTTP/HTTPS proxy\n  MONTI_OPTIONS_PROXY: {\n    name: 'proxy',\n    parser: Kadira._parseEnv.parseUrl,\n  },\n  // number of items cached for tracking document size\n  MONTI_OPTIONS_DOCUMENT_SIZE_CACHE_SIZE: {\n    name: 'documentSizeCacheSize',\n    parser: Kadira._parseEnv.parseInt,\n  },\n  // enable uploading sourcemaps\n  MONTI_UPLOAD_SOURCE_MAPS: {\n    name: 'uploadSourceMaps',\n    parser: Kadira._parseEnv.parseBool\n  },\n  MONTI_RECORD_IP_ADDRESS: {\n    name: 'recordIPAddress',\n    parser: Kadira._parseEnv.parseString,\n  },\n  MONTI_EVENT_STACK_TRACE: {\n    name: 'eventStackTrace',\n    parser: Kadira._parseEnv.parseBool,\n  }\n};\n"]},"sourceType":"module","hash":"16d3e64b2962d112ea3ac35f499b393e52b5b763"}
