{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/mdg:meteor-apm-agent/lib/tracer/default_filters.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/mdg:meteor-apm-agent/lib/tracer/default_filters.js","filename":"/home/momen/projects/spotmycrib-master/packages/mdg:meteor-apm-agent/lib/tracer/default_filters.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/mdg:meteor-apm-agent/lib/tracer/default_filters.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mdg:meteor-apm-agent/lib/tracer/default_filters.js"}},"code":"// strip sensitive data sent to kadia engine.\n// possible to limit types by providing an array of types to strip\n// possible types are: \"start\", \"db\", \"http\", \"email\"\nTracer.stripSensitive = function stripSensitive(typesToStrip, receiverType, name) {\n  typesToStrip = typesToStrip || [];\n  var strippedTypes = {};\n  typesToStrip.forEach(function (type) {\n    strippedTypes[type] = true;\n  });\n  return function (type, data, info) {\n    if (typesToStrip.length > 0 && !strippedTypes[type]) return data;\n    if (receiverType && receiverType != info.type) return data;\n    if (name && name != info.name) return data;\n\n    if (type == \"start\") {\n      data.params = \"[stripped]\";\n    } else if (type == \"db\") {\n      data.selector = \"[stripped]\";\n    } else if (type == \"http\") {\n      data.url = \"[stripped]\";\n    } else if (type == \"email\") {\n      [\"from\", \"to\", \"cc\", \"bcc\", \"replyTo\"].forEach(function (item) {\n        if (data[item]) {\n          data[item] = \"[stripped]\";\n        }\n      });\n    }\n\n    return data;\n  };\n}; // strip selectors only from the given list of collection names\n\n\nTracer.stripSelectors = function stripSelectors(collectionList, receiverType, name) {\n  collectionList = collectionList || [];\n  var collMap = {};\n  collectionList.forEach(function (collName) {\n    collMap[collName] = true;\n  });\n  return function (type, data, info) {\n    if (type != \"db\" || data && !collMap[data.coll]) {\n      return data;\n    }\n\n    if (receiverType && receiverType != info.type) return data;\n    if (name && name != info.name) return data;\n    data.selector = \"[stripped]\";\n    return data;\n  };\n};","map":{"version":3,"sources":["packages/mdg:meteor-apm-agent/lib/tracer/default_filters.js"],"names":["Tracer","stripSensitive","typesToStrip","receiverType","name","strippedTypes","forEach","type","data","info","length","params","selector","url","item","stripSelectors","collectionList","collMap","collName","coll"],"mappings":"AAAA;AACA;AACA;AACAA,MAAM,CAACC,cAAP,GAAwB,SAASA,cAAT,CAAwBC,YAAxB,EAAsCC,YAAtC,EAAoDC,IAApD,EAA0D;AAChFF,EAAAA,YAAY,GAAIA,YAAY,IAAI,EAAhC;AAEA,MAAIG,aAAa,GAAG,EAApB;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqB,UAASC,IAAT,EAAe;AAClCF,IAAAA,aAAa,CAACE,IAAD,CAAb,GAAsB,IAAtB;AACD,GAFD;AAIA,SAAO,UAAUA,IAAV,EAAgBC,IAAhB,EAAsBC,IAAtB,EAA4B;AACjC,QAAGP,YAAY,CAACQ,MAAb,GAAsB,CAAtB,IAA2B,CAACL,aAAa,CAACE,IAAD,CAA5C,EACE,OAAOC,IAAP;AAEF,QAAGL,YAAY,IAAIA,YAAY,IAAIM,IAAI,CAACF,IAAxC,EACE,OAAOC,IAAP;AAEF,QAAGJ,IAAI,IAAIA,IAAI,IAAIK,IAAI,CAACL,IAAxB,EACE,OAAOI,IAAP;;AAEF,QAAGD,IAAI,IAAI,OAAX,EAAoB;AAClBC,MAAAA,IAAI,CAACG,MAAL,GAAc,YAAd;AACD,KAFD,MAEO,IAAGJ,IAAI,IAAI,IAAX,EAAiB;AACtBC,MAAAA,IAAI,CAACI,QAAL,GAAgB,YAAhB;AACD,KAFM,MAEA,IAAGL,IAAI,IAAI,MAAX,EAAmB;AACxBC,MAAAA,IAAI,CAACK,GAAL,GAAW,YAAX;AACD,KAFM,MAEA,IAAGN,IAAI,IAAI,OAAX,EAAoB;AACzB,OAAC,MAAD,EAAS,IAAT,EAAe,IAAf,EAAqB,KAArB,EAA4B,SAA5B,EAAuCD,OAAvC,CAA+C,UAASQ,IAAT,EAAe;AAC5D,YAAGN,IAAI,CAACM,IAAD,CAAP,EAAe;AACbN,UAAAA,IAAI,CAACM,IAAD,CAAJ,GAAa,YAAb;AACD;AACF,OAJD;AAKD;;AAED,WAAON,IAAP;AACD,GAzBD;AA0BD,CAlCD,C,CAoCA;;;AACAR,MAAM,CAACe,cAAP,GAAwB,SAASA,cAAT,CAAwBC,cAAxB,EAAwCb,YAAxC,EAAsDC,IAAtD,EAA4D;AAClFY,EAAAA,cAAc,GAAGA,cAAc,IAAI,EAAnC;AAEA,MAAIC,OAAO,GAAG,EAAd;AACAD,EAAAA,cAAc,CAACV,OAAf,CAAuB,UAASY,QAAT,EAAmB;AACxCD,IAAAA,OAAO,CAACC,QAAD,CAAP,GAAoB,IAApB;AACD,GAFD;AAIA,SAAO,UAASX,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2B;AAChC,QAAGF,IAAI,IAAI,IAAR,IAAiBC,IAAI,IAAI,CAACS,OAAO,CAACT,IAAI,CAACW,IAAN,CAApC,EAAkD;AAChD,aAAOX,IAAP;AACD;;AAED,QAAGL,YAAY,IAAIA,YAAY,IAAIM,IAAI,CAACF,IAAxC,EACE,OAAOC,IAAP;AAEF,QAAGJ,IAAI,IAAIA,IAAI,IAAIK,IAAI,CAACL,IAAxB,EACE,OAAOI,IAAP;AAEFA,IAAAA,IAAI,CAACI,QAAL,GAAgB,YAAhB;AACA,WAAOJ,IAAP;AACD,GAbD;AAcD,CAtBD","sourcesContent":["// strip sensitive data sent to kadia engine.\n// possible to limit types by providing an array of types to strip\n// possible types are: \"start\", \"db\", \"http\", \"email\"\nTracer.stripSensitive = function stripSensitive(typesToStrip, receiverType, name) {\n  typesToStrip =  typesToStrip || [];\n\n  var strippedTypes = {};\n  typesToStrip.forEach(function(type) {\n    strippedTypes[type] = true;\n  });\n\n  return function (type, data, info) {\n    if(typesToStrip.length > 0 && !strippedTypes[type])\n      return data;\n\n    if(receiverType && receiverType != info.type)\n      return data;\n\n    if(name && name != info.name)\n      return data;\n\n    if(type == \"start\") {\n      data.params = \"[stripped]\";\n    } else if(type == \"db\") {\n      data.selector = \"[stripped]\";\n    } else if(type == \"http\") {\n      data.url = \"[stripped]\";\n    } else if(type == \"email\") {\n      [\"from\", \"to\", \"cc\", \"bcc\", \"replyTo\"].forEach(function(item) {\n        if(data[item]) {\n          data[item] = \"[stripped]\";\n        }\n      });\n    }\n\n    return data;\n  };\n};\n\n// strip selectors only from the given list of collection names\nTracer.stripSelectors = function stripSelectors(collectionList, receiverType, name) {\n  collectionList = collectionList || [];\n\n  var collMap = {};\n  collectionList.forEach(function(collName) {\n    collMap[collName] = true;\n  });\n\n  return function(type, data, info) {\n    if(type != \"db\" || (data && !collMap[data.coll])) {\n      return data\n    }\n\n    if(receiverType && receiverType != info.type)\n      return data;\n\n    if(name && name != info.name)\n      return data;\n\n    data.selector = \"[stripped]\";\n    return data;\n  };\n}"]},"sourceType":"module","hash":"c91bc4b7174df5e6fc2a72e58d85b718848cac34"}
