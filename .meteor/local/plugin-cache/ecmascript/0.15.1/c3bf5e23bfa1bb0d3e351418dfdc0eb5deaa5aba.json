{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js"}},"code":"var originalMeteorDebug = Meteor._debug;\nlet lastMessageToIgnore = null;\nlet messagesToIgnore = 0; // Sometimes one of the other error reporter tracks an error, but Meteor also\n// sends the details to Meteor._debug. In some places, Meteor splits the\n// information across multiple Meteor._debug calls.\n//\n// Does not report Meteor._debug errors until it sees the given message\n// or it has ignored maxMessages.\n\nKadira._ignoreDebugMessagesUntil = function (message, maxMessages) {\n  lastMessageToIgnore = message;\n  messagesToIgnore = maxMessages;\n};\n\nMeteor._debug = function (m, s) {\n  // We need to assign variables like this. Otherwise, \n  // we can't see proper error messages.\n  // See: https://github.com/meteorhacks/kadira/issues/193\n  var message = m;\n  var stack = s;\n  var args = arguments;\n\n  function runOriginal() {\n    return originalMeteorDebug.apply(Meteor, args);\n  } // track only if error tracking is enabled\n\n\n  if (!Kadira.options.enableErrorTracking) {\n    return runOriginal();\n  } // do not track if a zone is available (let zone handle the error)\n\n\n  if (window.zone) {\n    return runOriginal();\n  } // Do not report messages until either we see the\n  // lastMessageToIgnore or we have ignored the number of\n  // messages in messagesToIgnore\n\n\n  if (lastMessageToIgnore) {\n    if (message === lastMessageToIgnore || messagesToIgnore === 1) {\n      lastMessageToIgnore = null;\n      messagesToIgnore = 0;\n    } else {\n      messagesToIgnore -= 1;\n    }\n\n    return runOriginal();\n  } // We hate Meteor._debug (no single usage pattern)\n\n\n  if (message instanceof Error) {\n    stack = message.stack;\n    message = message.message;\n  } else if (typeof message == 'string' && stack === undefined) {\n    stack = getStackFromMessage(message);\n    message = firstLine(message);\n  } else if (typeof message == 'string' && stack instanceof Error) {\n    const separator = message.endsWith(':') ? '' : ':';\n    message = \"\".concat(message).concat(separator, \" \").concat(stack.message);\n    stack = getStackFromMessage(stack.stack);\n  } // sometimes Meteor._debug is called with the stack concat to the message\n  // FIXME Meteor._debug can be called in many ways\n\n\n  if (message && stack === undefined) {\n    stack = getStackFromMessage(message);\n    message = firstLine(message);\n  }\n\n  var now = new Date().getTime();\n  Kadira.errors.sendError({\n    appId: Kadira.options.appId,\n    name: message,\n    type: 'client',\n    startTime: now,\n    subType: 'meteor._debug',\n    info: getBrowserInfo(),\n    stacks: JSON.stringify([{\n      at: now,\n      events: [],\n      stack: stack\n    }])\n  });\n  return runOriginal();\n}; // Identifies lines that are a stack trace frame:\n// 1. Has \"at\" proceeded and followed by at least one space\n// 2. Or has an \"@\" symbol\n\n\nvar stackRegex = /(^.*@.*$|^\\s+at\\s.+$)/gm;\n\nfunction getStackFromMessage(message) {\n  // add empty string to add the empty line at start\n  var stack = [''];\n  var match;\n\n  while (match = stackRegex.exec(message)) {\n    stack.push(match[0]);\n  }\n\n  return stack.join('\\n');\n}\n\nfunction firstLine(message) {\n  return message.split('\\n')[0];\n}","map":{"version":3,"sources":["packages/montiapm:agent/lib/client/error_reporters/meteor_debug.js"],"names":["originalMeteorDebug","Meteor","_debug","lastMessageToIgnore","messagesToIgnore","Kadira","_ignoreDebugMessagesUntil","message","maxMessages","m","s","stack","args","arguments","runOriginal","apply","options","enableErrorTracking","window","zone","Error","undefined","getStackFromMessage","firstLine","separator","endsWith","now","Date","getTime","errors","sendError","appId","name","type","startTime","subType","info","getBrowserInfo","stacks","JSON","stringify","at","events","stackRegex","match","exec","push","join","split"],"mappings":"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","sourcesContent":["var originalMeteorDebug = Meteor._debug;\n\nlet lastMessageToIgnore = null;\nlet messagesToIgnore = 0;\n\n// Sometimes one of the other error reporter tracks an error, but Meteor also\n// sends the details to Meteor._debug. In some places, Meteor splits the\n// information across multiple Meteor._debug calls.\n//\n// Does not report Meteor._debug errors until it sees the given message\n// or it has ignored maxMessages.\nKadira._ignoreDebugMessagesUntil = function (message, maxMessages) {\n  lastMessageToIgnore = message;\n  messagesToIgnore = maxMessages;\n};\n\nMeteor._debug = function(m, s) {\n  // We need to assign variables like this. Otherwise, \n  // we can't see proper error messages.\n  // See: https://github.com/meteorhacks/kadira/issues/193\n  var message = m;\n  var stack = s;\n  var args = arguments;\n\n  function runOriginal() {\n    return originalMeteorDebug.apply(Meteor, args);\n  }\n  \n  // track only if error tracking is enabled\n  if(!Kadira.options.enableErrorTracking) {\n    return runOriginal();\n  }\n\n  // do not track if a zone is available (let zone handle the error)\n  if(window.zone) {\n    return runOriginal();\n  }\n\n  // Do not report messages until either we see the\n  // lastMessageToIgnore or we have ignored the number of\n  // messages in messagesToIgnore\n  if (lastMessageToIgnore) {\n    if (message === lastMessageToIgnore || messagesToIgnore === 1) {\n      lastMessageToIgnore = null;\n      messagesToIgnore = 0;\n    } else {\n      messagesToIgnore -= 1;\n    }\n\n    return runOriginal();\n  }\n\n  // We hate Meteor._debug (no single usage pattern)\n  if(message instanceof Error) {\n    stack = message.stack;\n    message = message.message\n  } else if(typeof message == 'string' && stack === undefined) {\n    stack = getStackFromMessage(message);\n    message = firstLine(message);\n  } else if(typeof message == 'string' && stack instanceof Error) {\n    const separator = message.endsWith(':') ? '' : ':'\n    message = `${message}${separator} ${stack.message}`;\n    stack = getStackFromMessage(stack.stack);\n  }\n\n  // sometimes Meteor._debug is called with the stack concat to the message\n  // FIXME Meteor._debug can be called in many ways\n  if(message && stack === undefined) {\n    stack = getStackFromMessage(message);\n    message = firstLine(message);\n  }\n\n  var now = (new Date().getTime());\n  Kadira.errors.sendError({\n    appId : Kadira.options.appId,\n    name : message,\n    type : 'client',\n    startTime : now,\n    subType : 'meteor._debug',\n    info : getBrowserInfo(),\n    stacks : JSON.stringify([{at: now, events: [], stack: stack}]),\n  });\n\n  return runOriginal();\n};\n\n// Identifies lines that are a stack trace frame:\n// 1. Has \"at\" proceeded and followed by at least one space\n// 2. Or has an \"@\" symbol\nvar stackRegex = /(^.*@.*$|^\\s+at\\s.+$)/gm;\nfunction getStackFromMessage (message) {\n  // add empty string to add the empty line at start\n  var stack = [''];\n  var match;\n  while(match = stackRegex.exec(message)) {\n    stack.push(match[0]);\n  }\n  return stack.join('\\n');\n}\n\nfunction firstLine (message) {\n  return message.split('\\n')[0];\n}\n"]},"sourceType":"module","hash":"c3bf5e23bfa1bb0d3e351418dfdc0eb5deaa5aba"}
