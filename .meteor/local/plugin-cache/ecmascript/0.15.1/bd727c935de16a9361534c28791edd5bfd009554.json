{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/accounts-google/google.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/accounts-google/google.js","filename":"/home/momen/projects/spotmycrib-master/packages/accounts-google/google.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/accounts-google/google.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-google/google.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nAccounts.oauth.registerService('google');\n\nif (Meteor.isClient) {\n  const loginWithGoogle = (options, callback) => {\n    // support a callback without options\n    if (!callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    if (Meteor.isCordova && Google.signIn) {\n      // After 20 April 2017, Google OAuth login will no longer work from\n      // a WebView, so Cordova apps must use Google Sign-In instead.\n      // https://github.com/meteor/meteor/issues/8253\n      Google.signIn(options, callback);\n      return;\n    } // Use Google's domain-specific login page if we want to restrict creation to\n    // a particular email domain. (Don't use it if restrictCreationByEmailDomain\n    // is a function.) Note that all this does is change Google's UI ---\n    // accounts-base/accounts_server.js still checks server-side that the server\n    // has the proper email address after the OAuth conversation.\n\n\n    if (typeof Accounts._options.restrictCreationByEmailDomain === 'string') {\n      options = _objectSpread({}, options);\n      options.loginUrlParameters = _objectSpread({}, options.loginUrlParameters);\n      options.loginUrlParameters.hd = Accounts._options.restrictCreationByEmailDomain;\n    }\n\n    const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Google.requestCredential(options, credentialRequestCompleteCallback);\n  };\n\n  Accounts.registerClientLoginFunction('google', loginWithGoogle);\n\n  Meteor.loginWithGoogle = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return Accounts.applyLoginFunction('google', args);\n  };\n} else {\n  Accounts.addAutopublishFields({\n    forLoggedInUser: // publish access token since it can be used from the client (if\n    // transmitted over ssl or on\n    // localhost). https://developers.google.com/accounts/docs/OAuth2UserAgent\n    // refresh token probably shouldn't be sent down.\n    Google.whitelistedFields.concat(['accessToken', 'expiresAt']).map(subfield => \"services.google.\".concat(subfield) // don't publish refresh token\n    ),\n    forOtherUsers: // even with autopublish, no legitimate web app should be\n    // publishing all users' emails\n    Google.whitelistedFields.filter(field => field !== 'email' && field !== 'verified_email').map(subfield => \"services.google.\".concat(subfield))\n  });\n}","map":{"version":3,"sources":["packages/accounts-google/google.js"],"names":["_objectSpread","module","link","default","v","Accounts","oauth","registerService","Meteor","isClient","loginWithGoogle","options","callback","isCordova","Google","signIn","_options","restrictCreationByEmailDomain","loginUrlParameters","hd","credentialRequestCompleteCallback","credentialRequestCompleteHandler","requestCredential","registerClientLoginFunction","args","applyLoginFunction","addAutopublishFields","forLoggedInUser","whitelistedFields","concat","map","subfield","forOtherUsers","filter","field"],"mappings":"AAAA,IAAIA,aAAJ;;AAAkBC,MAAM,CAACC,IAAP,CAAY,sCAAZ,EAAmD;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,IAAAA,aAAa,GAACI,CAAd;AAAgB;;AAA5B,CAAnD,EAAiF,CAAjF;AAAlBC,QAAQ,CAACC,KAAT,CAAeC,eAAf,CAA+B,QAA/B;;AAEA,IAAIC,MAAM,CAACC,QAAX,EAAqB;AACnB,QAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC7C;AACA,QAAI,CAAEA,QAAF,IAAc,OAAOD,OAAP,KAAmB,UAArC,EAAiD;AAC/CC,MAAAA,QAAQ,GAAGD,OAAX;AACAA,MAAAA,OAAO,GAAG,IAAV;AACD;;AAED,QAAIH,MAAM,CAACK,SAAP,IACAC,MAAM,CAACC,MADX,EACmB;AACjB;AACA;AACA;AACAD,MAAAA,MAAM,CAACC,MAAP,CAAcJ,OAAd,EAAuBC,QAAvB;AACA;AACD,KAd4C,CAgB7C;AACA;AACA;AACA;AACA;;;AACA,QAAI,OAAOP,QAAQ,CAACW,QAAT,CAAkBC,6BAAzB,KAA2D,QAA/D,EAAyE;AACvEN,MAAAA,OAAO,qBAAQA,OAAR,CAAP;AACAA,MAAAA,OAAO,CAACO,kBAAR,qBAAkCP,OAAO,CAACO,kBAA1C;AACAP,MAAAA,OAAO,CAACO,kBAAR,CAA2BC,EAA3B,GAAgCd,QAAQ,CAACW,QAAT,CAAkBC,6BAAlD;AACD;;AACD,UAAMG,iCAAiC,GAAGf,QAAQ,CAACC,KAAT,CAAee,gCAAf,CAAgDT,QAAhD,CAA1C;AACAE,IAAAA,MAAM,CAACQ,iBAAP,CAAyBX,OAAzB,EAAkCS,iCAAlC;AACD,GA5BD;;AA6BAf,EAAAA,QAAQ,CAACkB,2BAAT,CAAqC,QAArC,EAA+Cb,eAA/C;;AACAF,EAAAA,MAAM,CAACE,eAAP,GACE;AAAA,sCAAIc,IAAJ;AAAIA,MAAAA,IAAJ;AAAA;;AAAA,WAAanB,QAAQ,CAACoB,kBAAT,CAA4B,QAA5B,EAAsCD,IAAtC,CAAb;AAAA,GADF;AAED,CAjCD,MAiCO;AACLnB,EAAAA,QAAQ,CAACqB,oBAAT,CAA8B;AAC5BC,IAAAA,eAAe,EACb;AACA;AACA;AACA;AACAb,IAAAA,MAAM,CAACc,iBAAP,CAAyBC,MAAzB,CAAgC,CAAC,aAAD,EAAgB,WAAhB,CAAhC,EAA8DC,GAA9D,CACEC,QAAQ,8BAAuBA,QAAvB,CADV,CAC4C;AAD5C,KAN0B;AAU5BC,IAAAA,aAAa,EACX;AACA;AACAlB,IAAAA,MAAM,CAACc,iBAAP,CAAyBK,MAAzB,CACEC,KAAK,IAAIA,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,gBAD1C,EAEEJ,GAFF,CAGEC,QAAQ,8BAAuBA,QAAvB,CAHV;AAb0B,GAA9B;AAmBD","sourcesContent":["Accounts.oauth.registerService('google');\n\nif (Meteor.isClient) {\n  const loginWithGoogle = (options, callback) => {\n    // support a callback without options\n    if (! callback && typeof options === \"function\") {\n      callback = options;\n      options = null;\n    }\n\n    if (Meteor.isCordova &&\n        Google.signIn) {\n      // After 20 April 2017, Google OAuth login will no longer work from\n      // a WebView, so Cordova apps must use Google Sign-In instead.\n      // https://github.com/meteor/meteor/issues/8253\n      Google.signIn(options, callback);\n      return;\n    }\n\n    // Use Google's domain-specific login page if we want to restrict creation to\n    // a particular email domain. (Don't use it if restrictCreationByEmailDomain\n    // is a function.) Note that all this does is change Google's UI ---\n    // accounts-base/accounts_server.js still checks server-side that the server\n    // has the proper email address after the OAuth conversation.\n    if (typeof Accounts._options.restrictCreationByEmailDomain === 'string') {\n      options = { ...options };\n      options.loginUrlParameters = { ...options.loginUrlParameters };\n      options.loginUrlParameters.hd = Accounts._options.restrictCreationByEmailDomain;\n    }\n    const credentialRequestCompleteCallback = Accounts.oauth.credentialRequestCompleteHandler(callback);\n    Google.requestCredential(options, credentialRequestCompleteCallback);\n  };\n  Accounts.registerClientLoginFunction('google', loginWithGoogle);\n  Meteor.loginWithGoogle = \n    (...args) => Accounts.applyLoginFunction('google', args);\n} else {\n  Accounts.addAutopublishFields({\n    forLoggedInUser:\n      // publish access token since it can be used from the client (if\n      // transmitted over ssl or on\n      // localhost). https://developers.google.com/accounts/docs/OAuth2UserAgent\n      // refresh token probably shouldn't be sent down.\n      Google.whitelistedFields.concat(['accessToken', 'expiresAt']).map(\n        subfield => `services.google.${subfield}` // don't publish refresh token\n      ), \n\n    forOtherUsers: \n      // even with autopublish, no legitimate web app should be\n      // publishing all users' emails\n      Google.whitelistedFields.filter(\n        field => field !== 'email' && field !== 'verified_email'\n      ).map(\n        subfield => `services.google.${subfield}`\n      ),\n  });\n}\n"]},"sourceType":"module","hash":"bd727c935de16a9361534c28791edd5bfd009554"}
