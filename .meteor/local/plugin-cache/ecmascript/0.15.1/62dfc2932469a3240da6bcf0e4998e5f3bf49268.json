{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/oauth/oauth_client.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/oauth/oauth_client.js","filename":"/home/momen/projects/spotmycrib-master/packages/oauth/oauth_client.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/oauth/oauth_client.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/oauth/oauth_client.js"}},"code":"// credentialToken -> credentialSecret. You must provide both the\n// credentialToken and the credentialSecret to retrieve an access token from\n// the _pendingCredentials collection.\nvar credentialSecrets = {};\nOAuth = {};\n\nOAuth.showPopup = function (url, callback, dimensions) {\n  throw new Error(\"OAuth.showPopup must be implemented on this arch.\");\n}; // Determine the login style (popup or redirect) for this login flow.\n//\n//\n\n\nOAuth._loginStyle = function (service, config, options) {\n  if (Meteor.isCordova) {\n    return \"popup\";\n  }\n\n  var loginStyle = options && options.loginStyle || config.loginStyle || 'popup';\n  if (![\"popup\", \"redirect\"].includes(loginStyle)) throw new Error(\"Invalid login style: \" + loginStyle); // If we don't have session storage (for example, Safari in private\n  // mode), the redirect login flow won't work, so fallback to the\n  // popup style.\n\n  if (loginStyle === 'redirect') {\n    try {\n      sessionStorage.setItem('Meteor.oauth.test', 'test');\n      sessionStorage.removeItem('Meteor.oauth.test');\n    } catch (e) {\n      loginStyle = 'popup';\n    }\n  }\n\n  return loginStyle;\n};\n\nOAuth._stateParam = function (loginStyle, credentialToken, redirectUrl) {\n  var _Meteor$settings, _Meteor$settings$publ, _Meteor$settings$publ2, _Meteor$settings$publ3;\n\n  var state = {\n    loginStyle: loginStyle,\n    credentialToken: credentialToken,\n    isCordova: Meteor.isCordova\n  };\n\n  if (loginStyle === 'redirect' || (_Meteor$settings = Meteor.settings) !== null && _Meteor$settings !== void 0 && (_Meteor$settings$publ = _Meteor$settings.public) !== null && _Meteor$settings$publ !== void 0 && (_Meteor$settings$publ2 = _Meteor$settings$publ.packages) !== null && _Meteor$settings$publ2 !== void 0 && (_Meteor$settings$publ3 = _Meteor$settings$publ2.oauth) !== null && _Meteor$settings$publ3 !== void 0 && _Meteor$settings$publ3.setRedirectUrlWhenLoginStyleIsPopup && loginStyle === 'popup') {\n    state.redirectUrl = redirectUrl || '' + window.location;\n  } // Encode base64 as not all login services URI-encode the state\n  // parameter when they pass it back to us.\n  // Use the 'base64' package here because 'btoa' isn't supported in IE8/9.\n\n\n  return Base64.encode(JSON.stringify(state));\n}; // At the beginning of the redirect login flow, before we redirect to\n// the login service, save the credential token for this login attempt\n// in the reload migration data.\n//\n\n\nOAuth.saveDataForRedirect = function (loginService, credentialToken) {\n  Reload._onMigrate('oauth', function () {\n    return [true, {\n      loginService: loginService,\n      credentialToken: credentialToken\n    }];\n  });\n\n  Reload._migrate(null, {\n    immediateMigration: true\n  });\n}; // At the end of the redirect login flow, when we've redirected back\n// to the application, retrieve the credentialToken and (if the login\n// was successful) the credentialSecret.\n//\n// Called at application startup.  Returns null if this is normal\n// application startup and we weren't just redirected at the end of\n// the login flow.\n//\n\n\nOAuth.getDataAfterRedirect = function () {\n  var migrationData = Reload._migrationData('oauth');\n\n  if (!(migrationData && migrationData.credentialToken)) return null;\n  var credentialToken = migrationData.credentialToken;\n  var key = OAuth._storageTokenPrefix + credentialToken;\n  var credentialSecret;\n\n  try {\n    credentialSecret = sessionStorage.getItem(key);\n    sessionStorage.removeItem(key);\n  } catch (e) {\n    Meteor._debug('error retrieving credentialSecret', e);\n  }\n\n  return {\n    loginService: migrationData.loginService,\n    credentialToken: credentialToken,\n    credentialSecret: credentialSecret\n  };\n}; // Launch an OAuth login flow.  For the popup login style, show the\n// popup.  For the redirect login style, save the credential token for\n// this login attempt in the reload migration data, and redirect to\n// the service for the login.\n//\n// options:\n//  loginService: \"facebook\", \"google\", etc.\n//  loginStyle: \"popup\" or \"redirect\"\n//  loginUrl: The URL at the login service provider to start the OAuth flow.\n//  credentialRequestCompleteCallback: for the popup flow, call when the popup\n//    is closed and we have the credential from the login service.\n//  credentialToken: our identifier for this login flow.\n//\n\n\nOAuth.launchLogin = function (options) {\n  if (!options.loginService) throw new Error('loginService required');\n\n  if (options.loginStyle === 'popup') {\n    OAuth.showPopup(options.loginUrl, options.credentialRequestCompleteCallback.bind(null, options.credentialToken), options.popupOptions);\n  } else if (options.loginStyle === 'redirect') {\n    OAuth.saveDataForRedirect(options.loginService, options.credentialToken);\n    window.location = options.loginUrl;\n  } else {\n    throw new Error('invalid login style');\n  }\n}; // XXX COMPAT WITH 0.7.0.1\n// Private interface but probably used by many oauth clients in atmosphere.\n\n\nOAuth.initiateLogin = function (credentialToken, url, callback, dimensions) {\n  OAuth.showPopup(url, callback.bind(null, credentialToken), dimensions);\n}; // Called by the popup when the OAuth flow is completed, right before\n// the popup closes.\n\n\nOAuth._handleCredentialSecret = function (credentialToken, secret) {\n  check(credentialToken, String);\n  check(secret, String);\n\n  if (!Object.prototype.hasOwnProperty.call(credentialSecrets, credentialToken)) {\n    credentialSecrets[credentialToken] = secret;\n  } else {\n    throw new Error(\"Duplicate credential token from OAuth login\");\n  }\n}; // Used by accounts-oauth, which needs both a credentialToken and the\n// corresponding to credential secret to call the `login` method over DDP.\n\n\nOAuth._retrieveCredentialSecret = function (credentialToken) {\n  // First check the secrets collected by OAuth._handleCredentialSecret,\n  // then check localStorage. This matches what we do in\n  // end_of_login_response.html.\n  var secret = credentialSecrets[credentialToken];\n\n  if (!secret) {\n    var localStorageKey = OAuth._storageTokenPrefix + credentialToken;\n    secret = Meteor._localStorage.getItem(localStorageKey);\n\n    Meteor._localStorage.removeItem(localStorageKey);\n  } else {\n    delete credentialSecrets[credentialToken];\n  }\n\n  return secret;\n};","map":{"version":3,"sources":["packages/oauth/oauth_client.js"],"names":["credentialSecrets","OAuth","showPopup","url","callback","dimensions","Error","_loginStyle","service","config","options","Meteor","isCordova","loginStyle","includes","sessionStorage","setItem","removeItem","e","_stateParam","credentialToken","redirectUrl","state","settings","public","packages","oauth","setRedirectUrlWhenLoginStyleIsPopup","window","location","Base64","encode","JSON","stringify","saveDataForRedirect","loginService","Reload","_onMigrate","_migrate","immediateMigration","getDataAfterRedirect","migrationData","_migrationData","key","_storageTokenPrefix","credentialSecret","getItem","_debug","launchLogin","loginUrl","credentialRequestCompleteCallback","bind","popupOptions","initiateLogin","_handleCredentialSecret","secret","check","String","Object","prototype","hasOwnProperty","call","_retrieveCredentialSecret","localStorageKey","_localStorage"],"mappings":"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","sourcesContent":["// credentialToken -> credentialSecret. You must provide both the\n// credentialToken and the credentialSecret to retrieve an access token from\n// the _pendingCredentials collection.\nconst credentialSecrets = {};\n\nOAuth = {};\n\nOAuth.showPopup = (url, callback, dimensions) => {\n  throw new Error(\"OAuth.showPopup must be implemented on this arch.\");\n};\n\n// Determine the login style (popup or redirect) for this login flow.\n//\n//\nOAuth._loginStyle = (service, config, options) => {\n\n  if (Meteor.isCordova) {\n    return \"popup\";\n  }\n\n  let loginStyle = (options && options.loginStyle) || config.loginStyle || 'popup';\n\n  if (! [\"popup\", \"redirect\"].includes(loginStyle))\n    throw new Error(`Invalid login style: ${loginStyle}`);\n\n  // If we don't have session storage (for example, Safari in private\n  // mode), the redirect login flow won't work, so fallback to the\n  // popup style.\n  if (loginStyle === 'redirect') {\n    try {\n      sessionStorage.setItem('Meteor.oauth.test', 'test');\n      sessionStorage.removeItem('Meteor.oauth.test');\n    } catch (e) {\n      loginStyle = 'popup';\n    }\n  }\n\n  return loginStyle;\n};\n\nOAuth._stateParam = (loginStyle, credentialToken, redirectUrl) => {\n  const state = {\n    loginStyle,\n    credentialToken,\n    isCordova: Meteor.isCordova\n  };\n\n  if (loginStyle === 'redirect' ||\n    (Meteor.settings?.public?.packages?.oauth?.setRedirectUrlWhenLoginStyleIsPopup && loginStyle === 'popup')\n  ) {\n    state.redirectUrl = redirectUrl || ('' + window.location);\n  }\n\n  // Encode base64 as not all login services URI-encode the state\n  // parameter when they pass it back to us.\n  // Use the 'base64' package here because 'btoa' isn't supported in IE8/9.\n  return Base64.encode(JSON.stringify(state));\n};\n\n\n// At the beginning of the redirect login flow, before we redirect to\n// the login service, save the credential token for this login attempt\n// in the reload migration data.\n//\nOAuth.saveDataForRedirect = (loginService, credentialToken) => {\n  Reload._onMigrate('oauth', () => [true, { loginService, credentialToken }]);\n  Reload._migrate(null, {immediateMigration: true});\n};\n\n// At the end of the redirect login flow, when we've redirected back\n// to the application, retrieve the credentialToken and (if the login\n// was successful) the credentialSecret.\n//\n// Called at application startup.  Returns null if this is normal\n// application startup and we weren't just redirected at the end of\n// the login flow.\n//\nOAuth.getDataAfterRedirect = () => {\n  const migrationData = Reload._migrationData('oauth');\n\n  if (! (migrationData && migrationData.credentialToken))\n    return null;\n\n  const { credentialToken } = migrationData;\n  const key = OAuth._storageTokenPrefix + credentialToken;\n  let credentialSecret;\n  try {\n    credentialSecret = sessionStorage.getItem(key);\n    sessionStorage.removeItem(key);\n  } catch (e) {\n    Meteor._debug('error retrieving credentialSecret', e);\n  }\n  return {\n    loginService: migrationData.loginService,\n    credentialToken,\n    credentialSecret,\n  };\n};\n\n// Launch an OAuth login flow.  For the popup login style, show the\n// popup.  For the redirect login style, save the credential token for\n// this login attempt in the reload migration data, and redirect to\n// the service for the login.\n//\n// options:\n//  loginService: \"facebook\", \"google\", etc.\n//  loginStyle: \"popup\" or \"redirect\"\n//  loginUrl: The URL at the login service provider to start the OAuth flow.\n//  credentialRequestCompleteCallback: for the popup flow, call when the popup\n//    is closed and we have the credential from the login service.\n//  credentialToken: our identifier for this login flow.\n//\nOAuth.launchLogin = options => {\n  if (! options.loginService)\n    throw new Error('loginService required');\n  if (options.loginStyle === 'popup') {\n    OAuth.showPopup(\n      options.loginUrl,\n      options.credentialRequestCompleteCallback.bind(null, options.credentialToken),\n      options.popupOptions);\n  } else if (options.loginStyle === 'redirect') {\n    OAuth.saveDataForRedirect(options.loginService, options.credentialToken);\n    window.location = options.loginUrl;\n  } else {\n    throw new Error('invalid login style');\n  }\n};\n\n// XXX COMPAT WITH 0.7.0.1\n// Private interface but probably used by many oauth clients in atmosphere.\nOAuth.initiateLogin = (credentialToken, url, callback, dimensions) => {\n  OAuth.showPopup(\n    url,\n    callback.bind(null, credentialToken),\n    dimensions\n  );\n};\n\n// Called by the popup when the OAuth flow is completed, right before\n// the popup closes.\nOAuth._handleCredentialSecret = (credentialToken, secret) => {\n  check(credentialToken, String);\n  check(secret, String);\n  if (! Object.prototype.hasOwnProperty.call(credentialSecrets, credentialToken)) {\n    credentialSecrets[credentialToken] = secret;\n  } else {\n    throw new Error(\"Duplicate credential token from OAuth login\");\n  }\n};\n\n// Used by accounts-oauth, which needs both a credentialToken and the\n// corresponding to credential secret to call the `login` method over DDP.\nOAuth._retrieveCredentialSecret = credentialToken => {\n  // First check the secrets collected by OAuth._handleCredentialSecret,\n  // then check localStorage. This matches what we do in\n  // end_of_login_response.html.\n  let secret = credentialSecrets[credentialToken];\n  if (! secret) {\n    const localStorageKey = OAuth._storageTokenPrefix + credentialToken;\n    secret = Meteor._localStorage.getItem(localStorageKey);\n    Meteor._localStorage.removeItem(localStorageKey);\n  } else {\n    delete credentialSecrets[credentialToken];\n  }\n  return secret;\n};\n"]},"sourceType":"module","hash":"62dfc2932469a3240da6bcf0e4998e5f3bf49268"}
