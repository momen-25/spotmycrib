{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/client/accounts/validation.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"client/accounts/validation.js","filename":"/home/momen/projects/spotmycrib-master/client/accounts/validation.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/client/accounts/validation.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"client/accounts/validation.js"}},"code":"$.validator.setDefaults({\n  rules: {\n    \"address.address\": {\n      required: true,\n      minlength: 2\n    },\n    \"contacts.0.phone\": {\n      required: false,\n      digits: true // minlength:10,\n      // maxlength:10\n\n    },\n    \"baths\": {\n      required: true,\n      range: [1, 100]\n    },\n    \"numBedRoomCount\": {\n      required: true,\n      range: [1, 100]\n    },\n    email: {\n      email: true\n    } // password: {\n    //     required: true,\n    //     minlength: 6\n    // }\n\n  },\n  messages: {\n    email: {\n      required: \"You must enter an email address.\",\n      email: \"You've entered an invalid email address.\"\n    },\n    password: {\n      required: \"You must enter a password.\",\n      minlength: \"Your password must be at least {0} characters.\"\n    }\n  }\n});\nwindow.LoginFormValidation = {\n  username: function (username) {\n    // Valid\n    if (username.length >= 3) {\n      return true;\n    } // Invalid\n\n\n    return {\n      \"error\": \"INVALID_USERNAME\",\n      \"reason\": \"Username must be at least 3 characters long\"\n    };\n  },\n  mobile: function (mobile, optional) {\n    mobile = mobile.trim(); // Valid\n\n    if (optional === true && mobile.length === 0) {\n      return true;\n    } else if (/^\\d{10}$/.test(mobile)) {\n      return true;\n    }\n\n    if (mobile.length === 0) {\n      //Removed 10 digit validation.\n      // Invalid\n      return {\n        error: \"INVALID_MOBILE\",\n        reason: \"Please enter a valid mobile number\" //\"Please enter a valid 10 digit mobile number in format 0891234567\"\n\n      };\n    }\n\n    return true;\n  },\n  email: function (email, optional) {\n    email = email.trim();\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // Valid\n\n    if (optional === true && email.length === 0) {\n      return true;\n    } else if (re.test(email)) {\n      return true;\n    } // Invalid\n\n\n    return {\n      error: \"INVALID_EMAIL\",\n      reason: \"Please enter a valid email address in format pat@gmail.com\"\n    };\n  },\n  password: function (password, options) {\n    // Must have one number and/or symbol\n    var validPasswordRegex = /^.*(?=.*[a-z])(?=.*[\\d\\W]).*$/;\n    options = options || {}; // Only check if a password has been entered at all.\n    // This is usefull for the login forms\n\n    if (options.validationLevel === 'exists') {\n      if (password.length > 0) {\n        return true;\n      } else {\n        return {\n          error: \"INVALID_PASSWORD\",\n          reason: \"Password is required\"\n        };\n      }\n    }\n\n    if (options.validationLevel === 'length') {\n      if (password.length < 6) {\n        return {\n          error: \"INVALID_PASSWORD\",\n          reason: \"Password must be at least 6 characters long\"\n        };\n      } else if (password.length > 30) {\n        return {\n          error: \"INVALID_PASSWORD\",\n          reason: \"Password must be less than 30 characters long\"\n        };\n      } else return true;\n    } // ---\n    // Validate the password pased on some rules\n    // This is useful for cases where a password needs to be created or updated.\n    //\n\n\n    if (password.length < 6) {\n      return {\n        error: \"INVALID_PASSWORD\",\n        reason: \"Password must be at least 6 characters long\"\n      };\n    }\n\n    if (password.match(validPasswordRegex) === null) {\n      return {\n        error: \"INVALID_PASSWORD\",\n        reason: \"Password must have one number and/or symbol\"\n      };\n    } // Otherwise the password is valid\n\n\n    return true;\n  }\n};","map":{"version":3,"sources":["client/accounts/validation.js"],"names":["$","validator","setDefaults","rules","required","minlength","digits","range","email","messages","password","window","LoginFormValidation","username","length","mobile","optional","trim","test","error","reason","re","options","validPasswordRegex","validationLevel","match"],"mappings":"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","sourcesContent":["$.validator.setDefaults({\n    rules: {\n        \"address.address\": {\n            required: true,\n            minlength: 2\n        },\n        \"contacts.0.phone\": {\n            required: false,\n            digits: true,\n            // minlength:10,\n            // maxlength:10\n        },\n        \"baths\": {\n            required: true,\n            range: [1,100]\n        },\n        \"numBedRoomCount\": {\n            required: true,\n            range: [1,100]\n        },\n        email: {\n            email: true\n        },\n        // password: {\n        //     required: true,\n        //     minlength: 6\n        // }\n    },\n    messages: {\n        email: {\n            required: \"You must enter an email address.\",\n            email: \"You've entered an invalid email address.\"\n        },\n        password: {\n            required: \"You must enter a password.\",\n            minlength: \"Your password must be at least {0} characters.\"\n        }\n    }\n});\n\n\nwindow.LoginFormValidation = {\n  username: function(username) {\n\n    // Valid\n    if (username.length >= 3) {\n      return true;\n    }\n\n    // Invalid\n    return {\n      \"error\": \"INVALID_USERNAME\",\n      \"reason\": \"Username must be at least 3 characters long\"\n    };\n  },\n\n  mobile: function(mobile, optional) {\n\n    mobile = mobile.trim();\n\n    // Valid\n    if (optional === true && mobile.length === 0) {\n      return true;\n    } else if (/^\\d{10}$/.test(mobile)) {\n      return true;\n    }\n\n    if(mobile.length === 0){//Removed 10 digit validation.\n        // Invalid\n        return {\n            error: \"INVALID_MOBILE\",\n            reason: \"Please enter a valid mobile number\"//\"Please enter a valid 10 digit mobile number in format 0891234567\"\n        };\n    }\n    return true;\n  },\n\n  email: function(email, optional) {\n\n    email = email.trim();\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    // Valid\n    if (optional === true && email.length === 0) {\n      return true;\n    } else if( re.test(email) ){\n      return true;\n    }\n\n    // Invalid\n    return {\n      error: \"INVALID_EMAIL\",\n      reason: \"Please enter a valid email address in format pat@gmail.com\",\n    };\n\n  },\n\n  password: function(password, options) {\n    // Must have one number and/or symbol\n    var validPasswordRegex = /^.*(?=.*[a-z])(?=.*[\\d\\W]).*$/;\n    options = options || {};\n\n    // Only check if a password has been entered at all.\n    // This is usefull for the login forms\n    if (options.validationLevel === 'exists') {\n      if (password.length > 0) {\n        return true;\n      } else {\n        return {\n          error: \"INVALID_PASSWORD\",\n          reason: \"Password is required\"\n        }\n      }\n    }\n    if (options.validationLevel === 'length') {\n        if(password.length < 6 ){\n            return {\n                error: \"INVALID_PASSWORD\",\n                reason: \"Password must be at least 6 characters long\"\n            }\n        }else if(password.length > 30 ){\n            return {\n                error: \"INVALID_PASSWORD\",\n                reason: \"Password must be less than 30 characters long\"\n            }\n        }else return true;\n    }\n\n    // ---\n    // Validate the password pased on some rules\n    // This is useful for cases where a password needs to be created or updated.\n    //\n\n\n\n    if (password.length < 6) {\n      return {\n        error: \"INVALID_PASSWORD\",\n        reason: \"Password must be at least 6 characters long\"\n      }\n    }\n\n    if (password.match(validPasswordRegex) === null) {\n      return {\n        error: \"INVALID_PASSWORD\",\n        reason: \"Password must have one number and/or symbol\",\n      }\n    }\n\n\n    // Otherwise the password is valid\n    return true\n  }\n};\n"]},"sourceType":"module","hash":"d5826764a8149866d43592512e92e5a829ea8472"}
