{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/tracer/tracer_store.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/tracer/tracer_store.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/tracer/tracer_store.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/tracer/tracer_store.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/tracer/tracer_store.js"}},"code":"var logger = Npm.require('debug')('kadira:ts');\n\nTracerStore = function TracerStore(options) {\n  options = options || {};\n  this.maxTotalPoints = options.maxTotalPoints || 30;\n  this.interval = options.interval || 1000 * 60;\n  this.archiveEvery = options.archiveEvery || this.maxTotalPoints / 6; //store max total on the past 30 minutes (or past 30 items)\n\n  this.maxTotals = Object.create(null); //store the max trace of the current interval\n\n  this.currentMaxTrace = Object.create(null); //archive for the traces\n\n  this.traceArchive = [];\n  this.processedCnt = Object.create(null); //group errors by messages between an interval\n\n  this.errorMap = Object.create(null);\n};\n\nTracerStore.prototype.addTrace = function (trace) {\n  var kind = [trace.type, trace.name].join('::');\n\n  if (!this.currentMaxTrace[kind]) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if (this.currentMaxTrace[kind].metrics.total < trace.metrics.total) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if (trace.errored) {\n    this._handleErrors(trace);\n  }\n};\n\nTracerStore.prototype.collectTraces = function () {\n  var traces = this.traceArchive;\n  this.traceArchive = []; // convert at(timestamp) into the actual serverTime\n\n  traces.forEach(function (trace) {\n    trace.at = Kadira.syncedDate.syncTime(trace.at);\n  });\n  return traces;\n};\n\nTracerStore.prototype.start = function () {\n  this._timeoutHandler = setInterval(this.processTraces.bind(this), this.interval);\n};\n\nTracerStore.prototype.stop = function () {\n  if (this._timeoutHandler) {\n    clearInterval(this._timeoutHandler);\n  }\n};\n\nTracerStore.prototype._handleErrors = function (trace) {\n  // sending error requests as it is\n  var lastEvent = trace.events[trace.events.length - 1];\n\n  if (lastEvent && lastEvent[2]) {\n    var error = lastEvent[2].error; // grouping errors occured (reset after processTraces)\n\n    var errorKey = [trace.type, trace.name, error.message].join(\"::\");\n\n    if (!this.errorMap[errorKey]) {\n      var erroredTrace = EJSON.clone(trace);\n      this.errorMap[errorKey] = erroredTrace;\n      this.traceArchive.push(erroredTrace);\n    }\n  } else {\n    logger('last events is not an error: ', JSON.stringify(trace.events));\n  }\n};\n\nTracerStore.prototype.processTraces = function () {\n  var self = this;\n  let kinds = new Set();\n  Object.keys(this.maxTotals).forEach(key => {\n    kinds.add(key);\n  });\n  Object.keys(this.currentMaxTrace).forEach(key => {\n    kinds.add(key);\n  });\n\n  for (kind of kinds) {\n    self.processedCnt[kind] = self.processedCnt[kind] || 0;\n    var currentMaxTrace = self.currentMaxTrace[kind];\n    var currentMaxTotal = currentMaxTrace ? currentMaxTrace.metrics.total : 0;\n    self.maxTotals[kind] = self.maxTotals[kind] || []; //add the current maxPoint\n\n    self.maxTotals[kind].push(currentMaxTotal);\n    var exceedingPoints = self.maxTotals[kind].length - self.maxTotalPoints;\n\n    if (exceedingPoints > 0) {\n      self.maxTotals[kind].splice(0, exceedingPoints);\n    }\n\n    var archiveDefault = self.processedCnt[kind] % self.archiveEvery == 0;\n    self.processedCnt[kind]++;\n\n    var canArchive = archiveDefault || self._isTraceOutlier(kind, currentMaxTrace);\n\n    if (canArchive && currentMaxTrace) {\n      self.traceArchive.push(currentMaxTrace);\n    } //reset currentMaxTrace\n\n\n    self.currentMaxTrace[kind] = null;\n  }\n\n  ; //reset the errorMap\n\n  self.errorMap = Object.create(null);\n};\n\nTracerStore.prototype._isTraceOutlier = function (kind, trace) {\n  if (trace) {\n    var dataSet = this.maxTotals[kind];\n    return this._isOutlier(dataSet, trace.metrics.total, 3);\n  } else {\n    return false;\n  }\n};\n/*\n  Data point must exists in the dataSet\n*/\n\n\nTracerStore.prototype._isOutlier = function (dataSet, dataPoint, maxMadZ) {\n  var median = this._getMedian(dataSet);\n\n  var mad = this._calculateMad(dataSet, median);\n\n  var madZ = this._funcMedianDeviation(median)(dataPoint) / mad;\n  return madZ > maxMadZ;\n};\n\nTracerStore.prototype._getMedian = function (dataSet) {\n  var sortedDataSet = _.clone(dataSet).sort(function (a, b) {\n    return a - b;\n  });\n\n  return this._pickQuartile(sortedDataSet, 2);\n};\n\nTracerStore.prototype._pickQuartile = function (dataSet, num) {\n  var pos = (dataSet.length + 1) * num / 4;\n\n  if (pos % 1 == 0) {\n    return dataSet[pos - 1];\n  } else {\n    pos = pos - pos % 1;\n    return (dataSet[pos - 1] + dataSet[pos]) / 2;\n  }\n};\n\nTracerStore.prototype._calculateMad = function (dataSet, median) {\n  var medianDeviations = _.map(dataSet, this._funcMedianDeviation(median));\n\n  var mad = this._getMedian(medianDeviations);\n\n  return mad;\n};\n\nTracerStore.prototype._funcMedianDeviation = function (median) {\n  return function (x) {\n    return Math.abs(median - x);\n  };\n};\n\nTracerStore.prototype._getMean = function (dataPoints) {\n  if (dataPoints.length > 0) {\n    var total = 0;\n    dataPoints.forEach(function (point) {\n      total += point;\n    });\n    return total / dataPoints.length;\n  } else {\n    return 0;\n  }\n};","map":{"version":3,"sources":["packages/montiapm:agent/lib/tracer/tracer_store.js"],"names":["logger","Npm","require","TracerStore","options","maxTotalPoints","interval","archiveEvery","maxTotals","Object","create","currentMaxTrace","traceArchive","processedCnt","errorMap","prototype","addTrace","trace","kind","type","name","join","EJSON","clone","metrics","total","errored","_handleErrors","collectTraces","traces","forEach","at","Kadira","syncedDate","syncTime","start","_timeoutHandler","setInterval","processTraces","bind","stop","clearInterval","lastEvent","events","length","error","errorKey","message","erroredTrace","push","JSON","stringify","self","kinds","Set","keys","key","add","currentMaxTotal","exceedingPoints","splice","archiveDefault","canArchive","_isTraceOutlier","dataSet","_isOutlier","dataPoint","maxMadZ","median","_getMedian","mad","_calculateMad","madZ","_funcMedianDeviation","sortedDataSet","_","sort","a","b","_pickQuartile","num","pos","medianDeviations","map","x","Math","abs","_getMean","dataPoints","point"],"mappings":"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","sourcesContent":["var logger = Npm.require('debug')('kadira:ts');\n\nTracerStore = function TracerStore(options) {\n  options = options || {};\n\n  this.maxTotalPoints = options.maxTotalPoints || 30;\n  this.interval = options.interval || 1000 * 60;\n  this.archiveEvery = options.archiveEvery || this.maxTotalPoints / 6;\n\n  //store max total on the past 30 minutes (or past 30 items)\n  this.maxTotals = Object.create(null);\n  //store the max trace of the current interval\n  this.currentMaxTrace = Object.create(null);\n  //archive for the traces\n  this.traceArchive = [];\n\n  this.processedCnt = Object.create(null);\n\n  //group errors by messages between an interval\n  this.errorMap = Object.create(null);\n};\n\nTracerStore.prototype.addTrace = function(trace) {\n  var kind = [trace.type, trace.name].join('::');\n  if(!this.currentMaxTrace[kind]) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if(this.currentMaxTrace[kind].metrics.total < trace.metrics.total) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if(trace.errored) {\n    this._handleErrors(trace);\n  }\n};\n\nTracerStore.prototype.collectTraces = function() {\n  var traces = this.traceArchive;\n  this.traceArchive = [];\n\n  // convert at(timestamp) into the actual serverTime\n  traces.forEach(function(trace) {\n    trace.at = Kadira.syncedDate.syncTime(trace.at);\n  });\n  return traces;\n};\n\nTracerStore.prototype.start = function() {\n  this._timeoutHandler = setInterval(this.processTraces.bind(this), this.interval);\n};\n\nTracerStore.prototype.stop = function() {\n  if(this._timeoutHandler) {\n    clearInterval(this._timeoutHandler);\n  }\n};\n\nTracerStore.prototype._handleErrors = function(trace) {\n  // sending error requests as it is\n  var lastEvent = trace.events[trace.events.length -1];\n  if(lastEvent && lastEvent[2]) {\n    var error = lastEvent[2].error;\n\n    // grouping errors occured (reset after processTraces)\n    var errorKey = [trace.type, trace.name, error.message].join(\"::\");\n    if(!this.errorMap[errorKey]) {\n      var erroredTrace = EJSON.clone(trace);\n      this.errorMap[errorKey] = erroredTrace;\n\n      this.traceArchive.push(erroredTrace);\n    }\n  } else {\n    logger('last events is not an error: ', JSON.stringify(trace.events));\n  }\n};\n\nTracerStore.prototype.processTraces = function() {\n  var self = this;\n  \n  let kinds = new Set();\n  Object.keys(this.maxTotals).forEach(key => {\n    kinds.add(key);\n  });\n  Object.keys(this.currentMaxTrace).forEach(key => {\n    kinds.add(key);\n  });\n\n  for (kind of kinds) {\n    self.processedCnt[kind] = self.processedCnt[kind] || 0;\n    var currentMaxTrace = self.currentMaxTrace[kind];\n    var currentMaxTotal = currentMaxTrace? currentMaxTrace.metrics.total : 0;\n\n    self.maxTotals[kind] = self.maxTotals[kind] || [];\n    //add the current maxPoint\n    self.maxTotals[kind].push(currentMaxTotal);\n    var exceedingPoints = self.maxTotals[kind].length - self.maxTotalPoints;\n    if(exceedingPoints > 0) {\n      self.maxTotals[kind].splice(0, exceedingPoints);\n    }\n\n    var archiveDefault = (self.processedCnt[kind] % self.archiveEvery) == 0;\n    self.processedCnt[kind]++;\n\n    var canArchive = archiveDefault\n      || self._isTraceOutlier(kind, currentMaxTrace);\n\n    if(canArchive && currentMaxTrace) {\n      self.traceArchive.push(currentMaxTrace);\n    }\n\n    //reset currentMaxTrace\n    self.currentMaxTrace[kind] = null;\n  };\n\n  //reset the errorMap\n  self.errorMap = Object.create(null);\n};\n\nTracerStore.prototype._isTraceOutlier = function(kind, trace) {\n  if(trace) {\n    var dataSet = this.maxTotals[kind];\n    return this._isOutlier(dataSet, trace.metrics.total, 3);\n  } else {\n    return false;\n  }\n};\n\n/*\n  Data point must exists in the dataSet\n*/\nTracerStore.prototype._isOutlier = function(dataSet, dataPoint, maxMadZ) {\n  var median = this._getMedian(dataSet);\n  var mad = this._calculateMad(dataSet, median);\n  var madZ = this._funcMedianDeviation(median)(dataPoint) / mad;\n\n  return madZ > maxMadZ;\n};\n\nTracerStore.prototype._getMedian = function(dataSet) {\n  var sortedDataSet = _.clone(dataSet).sort(function(a, b) {\n    return a-b;\n  });\n  return this._pickQuartile(sortedDataSet, 2);\n};\n\nTracerStore.prototype._pickQuartile = function(dataSet, num) {\n  var pos = ((dataSet.length + 1) * num) / 4;\n  if(pos % 1 == 0) {\n    return dataSet[pos -1];\n  } else {\n    pos = pos - (pos % 1);\n    return (dataSet[pos -1] + dataSet[pos])/2\n  }\n};\n\nTracerStore.prototype._calculateMad = function(dataSet, median) {\n  var medianDeviations = _.map(dataSet, this._funcMedianDeviation(median));\n  var mad = this._getMedian(medianDeviations);\n\n  return mad;\n};\n\nTracerStore.prototype._funcMedianDeviation = function(median) {\n  return function(x) {\n    return Math.abs(median - x);\n  };\n};\n\nTracerStore.prototype._getMean = function(dataPoints) {\n  if(dataPoints.length > 0) {\n    var total = 0;\n    dataPoints.forEach(function(point) {\n      total += point;\n    });\n    return total/dataPoints.length;\n  } else {\n    return 0;\n  }\n};\n"]},"sourceType":"module","hash":"8f64453e968b04c116235a65afd074ce47cb988c"}
