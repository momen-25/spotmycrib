{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/imports/api/collections.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"imports/api/collections.js","filename":"/home/momen/projects/spotmycrib-master/imports/api/collections.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/imports/api/collections.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/collections.js"}},"code":"module.export({\n  Collections: () => Collections\n});\nlet Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\n// import \"./schemas.js\";\n// export const Tasks = new Mongo.Collection('Property');\n// import SimpleSchema from \"simpl-schema\";\n// SimpleSchema.extendOptions(['autoform']);\nmodule.runSetters(Collections = {});\nCollections.Properties = new Mongo.Collection(\"Properties\");\nCollections.Bids = new Mongo.Collection(\"Bids\");\nCollections.Auctions = new Mongo.Collection(\"Auctions\");\nCollections.Agents = new Mongo.Collection(\"Agents\");\nCollections.Config = new Mongo.Collection(\"Config\");\nCollections.PropertyManage = new Mongo.Collection(\"PropertyManage\");\nCollections.ActivityHistory = new Mongo.Collection(\"ActivityHistory\");\nCollections.Areas = new Mongo.Collection(\"Areas\");\nCollections.Blogs = new Mongo.Collection(\"Blogs\");\nCollections.EmailEnquiries = new Mongo.Collection(\"EmailEnquiries\");\nCollections.EmailRequests = new Mongo.Collection(\"EmailRequests\");\nCollections.Properties.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.Properties.before.update(function (userId, doc, fieldNames, modifier, options) {\n  var skip = false;\n  if (Array.isArray(fieldNames)) if (fieldNames.indexOf('auctionHistory') != -1) {\n    if (modifier['$set']['auctionId'] == \"\" && modifier['$set']['rent'] == \"\") skip = true; //This is for deactivate\n  }\n\n  if (!skip) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date();\n  }\n});\nCollections.Bids.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.Bids.before.update(function (userId, doc, fieldNames, modifier, options) {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.updatedAt = new Date();\n});\nCollections.Auctions.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.Auctions.before.update(function (userId, doc, fieldNames, modifier, options) {\n  var skip = false;\n  if (Array.isArray(fieldNames)) if (fieldNames.length == 1 && fieldNames.indexOf('views') != -1) {\n    // console.log('Its just view, so skipping')\n    skip = true;\n  }\n  if (fieldNames['isArchived'] == true) skip = true; //This is for deactivate\n\n  if (!skip) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date();\n  }\n});\nCollections.Agents.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.Agents.before.update(function (userId, doc, fieldNames, modifier, options) {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.updatedAt = new Date();\n});\nCollections.Config.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.Config.before.update(function (userId, doc, fieldNames, modifier, options) {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.updatedAt = new Date();\n});\nCollections.PropertyManage.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.PropertyManage.before.update(function (userId, doc, fieldNames, modifier, options) {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.updatedAt = new Date();\n});\nCollections.ActivityHistory.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.ActivityHistory.before.update(function (userId, doc, fieldNames, modifier, options) {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.updatedAt = new Date();\n});\nCollections.Areas.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.Areas.before.update(function (userId, doc, fieldNames, modifier, options) {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.updatedAt = new Date();\n});\nCollections.Blogs.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.Blogs.before.update(function (userId, doc, fieldNames, modifier, options) {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.updatedAt = new Date();\n});\nCollections.EmailEnquiries.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.EmailEnquiries.before.update(function (userId, doc, fieldNames, modifier, options) {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.updatedAt = new Date();\n});\nCollections.EmailRequests.before.insert(function (userId, doc) {\n  doc.createdAt = new Date();\n  doc.updatedAt = new Date();\n});\nCollections.EmailRequests.before.update(function (userId, doc, fieldNames, modifier, options) {\n  modifier.$set = modifier.$set || {};\n  modifier.$set.updatedAt = new Date();\n});\n\nif (Meteor.isClient) {\n  Collections.PA_AvgOffer = new Mongo.Collection(\"avgOffer\");\n}\n\nif (Meteor.isServer) {\n  Collections.propertyAlerts = new Mongo.Collection(\"propertyAlerts\");\n  Collections.propertyAlerts.before.insert(function (userId, doc) {\n    if (userId) doc.userId = userId;\n    doc.createdAt = new Date();\n    doc.updatedAt = new Date();\n  });\n  Collections.propertyAlerts.before.update(function (userId, doc, fieldNames, modifier, options) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date();\n  });\n} // Collections.Auctions.attachSchema(Schema.Auctions);\n// Collections.Properties.attachSchema(Schema.Properties);\n// Collections.Bids.attachSchema(Schema.Bids);\n\n\nUI.registerHelper(\"retCollectionProperties\", function () {\n  return Collections.Properties;\n});","map":{"version":3,"sources":["imports/api/collections.js"],"names":["module","export","Collections","Mongo","link","v","Properties","Collection","Bids","Auctions","Agents","Config","PropertyManage","ActivityHistory","Areas","Blogs","EmailEnquiries","EmailRequests","before","insert","userId","doc","createdAt","Date","updatedAt","update","fieldNames","modifier","options","skip","Array","isArray","indexOf","$set","length","Meteor","isClient","PA_AvgOffer","isServer","propertyAlerts","UI","registerHelper"],"mappings":"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","sourcesContent":["/**\n * Created by njanjanam on 06/04/2017.\n */\nimport {Mongo} from \"meteor/mongo\";\n// import \"./schemas.js\";\n// export const Tasks = new Mongo.Collection('Property');\n// import SimpleSchema from \"simpl-schema\";\n// SimpleSchema.extendOptions(['autoform']);\nCollections = {}\nCollections.Properties = new Mongo.Collection(\"Properties\");\nCollections.Bids = new Mongo.Collection(\"Bids\");\nCollections.Auctions = new Mongo.Collection(\"Auctions\");\nCollections.Agents = new Mongo.Collection(\"Agents\");\nCollections.Config = new Mongo.Collection(\"Config\");\nCollections.PropertyManage = new Mongo.Collection(\"PropertyManage\");\nCollections.ActivityHistory = new Mongo.Collection(\"ActivityHistory\");\nCollections.Areas = new Mongo.Collection(\"Areas\");\nCollections.Blogs = new Mongo.Collection(\"Blogs\");\nCollections.EmailEnquiries = new Mongo.Collection(\"EmailEnquiries\");\nCollections.EmailRequests = new Mongo.Collection(\"EmailRequests\");\n\nCollections.Properties.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.Properties.before.update(function (userId, doc, fieldNames, modifier, options) {\n    var skip=false;\n    if(Array.isArray(fieldNames))\n        if(fieldNames.indexOf('auctionHistory')!=-1){\n            if(modifier['$set']['auctionId']==\"\" && modifier['$set']['rent']==\"\")\n                skip = true //This is for deactivate\n        }\n    if(!skip){\n        modifier.$set = modifier.$set || {};\n        modifier.$set.updatedAt = new Date()\n    }\n});\nCollections.Bids.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.Bids.before.update(function (userId, doc, fieldNames, modifier, options) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date()\n});\nCollections.Auctions.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.Auctions.before.update(function (userId, doc, fieldNames, modifier, options) {\n    var skip=false;\n    if(Array.isArray(fieldNames))\n    if(fieldNames.length==1 && fieldNames.indexOf('views')!=-1){\n        // console.log('Its just view, so skipping')\n        skip=true\n    }\n    if(fieldNames['isArchived']==true) skip=true //This is for deactivate\n    if(!skip){\n        modifier.$set = modifier.$set || {};\n        modifier.$set.updatedAt = new Date()\n    }\n});\nCollections.Agents.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.Agents.before.update(function (userId, doc, fieldNames, modifier, options) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date()\n});\nCollections.Config.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.Config.before.update(function (userId, doc, fieldNames, modifier, options) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date()\n});\nCollections.PropertyManage.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.PropertyManage.before.update(function (userId, doc, fieldNames, modifier, options) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date()\n});\nCollections.ActivityHistory.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.ActivityHistory.before.update(function (userId, doc, fieldNames, modifier, options) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date()\n});\nCollections.Areas.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.Areas.before.update(function (userId, doc, fieldNames, modifier, options) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date()\n});\nCollections.Blogs.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.Blogs.before.update(function (userId, doc, fieldNames, modifier, options) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date()\n});\nCollections.EmailEnquiries.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.EmailEnquiries.before.update(function (userId, doc, fieldNames, modifier, options) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date()\n});\nCollections.EmailRequests.before.insert(function (userId, doc) {\n    doc.createdAt = new Date()\n    doc.updatedAt = new Date()\n});\nCollections.EmailRequests.before.update(function (userId, doc, fieldNames, modifier, options) {\n    modifier.$set = modifier.$set || {};\n    modifier.$set.updatedAt = new Date()\n});\n\nif (Meteor.isClient) {\n    Collections.PA_AvgOffer = new Mongo.Collection(\"avgOffer\");\n}\nif(Meteor.isServer){\n    Collections.propertyAlerts = new Mongo.Collection(\"propertyAlerts\");\n    Collections.propertyAlerts.before.insert(function (userId, doc) {\n        if(userId)doc.userId = userId\n        doc.createdAt = new Date()\n        doc.updatedAt = new Date()\n    });\n    Collections.propertyAlerts.before.update(function (userId, doc, fieldNames, modifier, options) {\n        modifier.$set = modifier.$set || {};\n        modifier.$set.updatedAt = new Date()\n    });\n\n}\n\n// Collections.Auctions.attachSchema(Schema.Auctions);\n// Collections.Properties.attachSchema(Schema.Properties);\n// Collections.Bids.attachSchema(Schema.Bids);\n\nUI.registerHelper(\"retCollectionProperties\", function () {\n    return  Collections.Properties;\n});\n\n\n\n\nexport {Collections};\n\n\n\n\n//\n// Collections = [\n//     {\"Property\" : new Mongo.Collection(\"Property\") },\n//     {Bids : new Mongo.Collection(\"Bids\")},\n//     {Auctions : new Mongo.Collection(\"Auctions\")},\n//     {Agents : new Mongo.Collection(\"Agents\")},\n//     {Config : new Mongo.Collection(\"Config\")}\n// ];\n\n\n// Collections.Properties = new Mongo.Collection(\"Property\");\n// //Meteor.subscribe(\"Projects\");\n// export Collections.Bids = new Mongo.Collection(\"Bids\");\n// //Meteor.subscribe(\"Bids\");\n// export Collections.Auctions = new Mongo.Collection(\"Auctions\");\n// //Meteor.subscribe(\"Auctions\");\n// export Collections.Config = new Mongo.Collection(\"Config\");\n// //Meteor.subscribe(\"Config\");\n\n\n"]},"sourceType":"module","hash":"6bebc458fc968821c37106aa7865395d0829b4d6"}
