{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/oauth1/oauth1_binding.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/oauth1/oauth1_binding.js","filename":"/home/momen/projects/spotmycrib-master/packages/oauth1/oauth1_binding.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/oauth1/oauth1_binding.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/oauth1/oauth1_binding.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nmodule.export({\n  OAuth1Binding: () => OAuth1Binding\n});\nlet crypto;\nmodule.link(\"crypto\", {\n  default(v) {\n    crypto = v;\n  }\n\n}, 0);\nlet querystring;\nmodule.link(\"querystring\", {\n  default(v) {\n    querystring = v;\n  }\n\n}, 1);\nlet urlModule;\nmodule.link(\"url\", {\n  default(v) {\n    urlModule = v;\n  }\n\n}, 2);\n\nclass OAuth1Binding {\n  constructor(config, urls) {\n    this._config = config;\n    this._urls = urls;\n  }\n\n  prepareRequestToken(callbackUrl) {\n    const headers = this._buildHeader({\n      oauth_callback: callbackUrl\n    });\n\n    const response = this._call('POST', this._urls.requestToken, headers);\n\n    const tokens = querystring.parse(response.content);\n    if (!tokens.oauth_callback_confirmed) throw Object.assign(new Error(\"oauth_callback_confirmed false when requesting oauth1 token\"), {\n      response: response\n    });\n    this.requestToken = tokens.oauth_token;\n    this.requestTokenSecret = tokens.oauth_token_secret;\n  }\n\n  prepareAccessToken(query, requestTokenSecret) {\n    // support implementations that use request token secrets. This is\n    // read by this._call.\n    //\n    // XXX make it a param to call, not something stashed on self? It's\n    // kinda confusing right now, everything except this is passed as\n    // arguments, but this is stored.\n    if (requestTokenSecret) this.accessTokenSecret = requestTokenSecret;\n\n    const headers = this._buildHeader({\n      oauth_token: query.oauth_token,\n      oauth_verifier: query.oauth_verifier\n    });\n\n    const response = this._call('POST', this._urls.accessToken, headers);\n\n    const tokens = querystring.parse(response.content);\n\n    if (!tokens.oauth_token || !tokens.oauth_token_secret) {\n      const error = new Error(\"missing oauth token or secret\"); // We provide response only if no token is available, we do not want to leak any tokens\n\n      if (!tokens.oauth_token && !tokens.oauth_token_secret) {\n        Object.assign(error, {\n          response: response\n        });\n      }\n\n      throw error;\n    }\n\n    this.accessToken = tokens.oauth_token;\n    this.accessTokenSecret = tokens.oauth_token_secret;\n  }\n\n  call(method, url, params, callback) {\n    const headers = this._buildHeader({\n      oauth_token: this.accessToken\n    });\n\n    if (!params) {\n      params = {};\n    }\n\n    return this._call(method, url, headers, params, callback);\n  }\n\n  get(url, params, callback) {\n    return this.call('GET', url, params, callback);\n  }\n\n  post(url, params, callback) {\n    return this.call('POST', url, params, callback);\n  }\n\n  _buildHeader(headers) {\n    return _objectSpread({\n      oauth_consumer_key: this._config.consumerKey,\n      oauth_nonce: Random.secret().replace(/\\W/g, ''),\n      oauth_signature_method: 'HMAC-SHA1',\n      oauth_timestamp: (new Date().valueOf() / 1000).toFixed().toString(),\n      oauth_version: '1.0'\n    }, headers);\n  }\n\n  _getSignature(method, url, rawHeaders, accessTokenSecret, params) {\n    const headers = this._encodeHeader(_objectSpread(_objectSpread({}, rawHeaders), params));\n\n    const parameters = Object.keys(headers).map(key => \"\".concat(key, \"=\").concat(headers[key])).sort().join('&');\n    const signatureBase = [method, this._encodeString(url), this._encodeString(parameters)].join('&');\n    const secret = OAuth.openSecret(this._config.secret);\n    let signingKey = \"\".concat(this._encodeString(secret), \"&\");\n    if (accessTokenSecret) signingKey += this._encodeString(accessTokenSecret);\n    return crypto.createHmac('SHA1', signingKey).update(signatureBase).digest('base64');\n  }\n\n  _call(method, url) {\n    let headers = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let params = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    let callback = arguments.length > 4 ? arguments[4] : undefined;\n\n    // all URLs to be functions to support parameters/customization\n    if (typeof url === \"function\") {\n      url = url(this);\n    } // Extract all query string parameters from the provided URL\n\n\n    const parsedUrl = urlModule.parse(url, true); // Merge them in a way that params given to the method call have precedence\n\n    params = _objectSpread(_objectSpread({}, parsedUrl.query), params); // Reconstruct the URL back without any query string parameters\n    // (they are now in params)\n\n    parsedUrl.query = {};\n    parsedUrl.search = '';\n    url = urlModule.format(parsedUrl); // Get the signature\n\n    headers.oauth_signature = this._getSignature(method, url, headers, this.accessTokenSecret, params); // Make a authorization string according to oauth1 spec\n\n    const authString = this._getAuthHeaderString(headers); // Make signed request\n\n\n    try {\n      const response = HTTP.call(method, url, {\n        params,\n        headers: {\n          Authorization: authString\n        }\n      }, callback && ((error, response) => {\n        if (!error) {\n          response.nonce = headers.oauth_nonce;\n        }\n\n        callback(error, response);\n      })); // We store nonce so that JWTs can be validated\n\n      if (response) response.nonce = headers.oauth_nonce;\n      return response;\n    } catch (err) {\n      throw Object.assign(new Error(\"Failed to send OAuth1 request to \".concat(url, \". \").concat(err.message)), {\n        response: err.response\n      });\n    }\n  }\n\n  _encodeHeader(header) {\n    return Object.keys(header).reduce((memo, key) => {\n      memo[this._encodeString(key)] = this._encodeString(header[key]);\n      return memo;\n    }, {});\n  }\n\n  _encodeString(str) {\n    return encodeURIComponent(str).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n  }\n\n  _getAuthHeaderString(headers) {\n    return 'OAuth ' + Object.keys(headers).map(key => \"\".concat(this._encodeString(key), \"=\\\"\").concat(this._encodeString(headers[key]), \"\\\"\")).sort().join(', ');\n  }\n\n}\n\n;","map":{"version":3,"sources":["packages/oauth1/oauth1_binding.js"],"names":["_objectSpread","module","link","default","v","export","OAuth1Binding","crypto","querystring","urlModule","constructor","config","urls","_config","_urls","prepareRequestToken","callbackUrl","headers","_buildHeader","oauth_callback","response","_call","requestToken","tokens","parse","content","oauth_callback_confirmed","Object","assign","Error","oauth_token","requestTokenSecret","oauth_token_secret","prepareAccessToken","query","accessTokenSecret","oauth_verifier","accessToken","error","call","method","url","params","callback","get","post","oauth_consumer_key","consumerKey","oauth_nonce","Random","secret","replace","oauth_signature_method","oauth_timestamp","Date","valueOf","toFixed","toString","oauth_version","_getSignature","rawHeaders","_encodeHeader","parameters","keys","map","key","sort","join","signatureBase","_encodeString","OAuth","openSecret","signingKey","createHmac","update","digest","parsedUrl","search","format","oauth_signature","authString","_getAuthHeaderString","HTTP","Authorization","nonce","err","message","header","reduce","memo","str","encodeURIComponent","escape"],"mappings":"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","sourcesContent":["import crypto from 'crypto';\nimport querystring from 'querystring';\nimport urlModule from 'url';\n\n// An OAuth1 wrapper around http calls which helps get tokens and\n// takes care of HTTP headers\n//\n// @param config {Object}\n//   - consumerKey (String): oauth consumer key\n//   - secret (String): oauth consumer secret\n// @param urls {Object}\n//   - requestToken (String): url\n//   - authorize (String): url\n//   - accessToken (String): url\n//   - authenticate (String): url\nexport class OAuth1Binding {\n  constructor(config, urls) {\n    this._config = config;\n    this._urls = urls;\n  }\n\n  prepareRequestToken(callbackUrl) {\n    const headers = this._buildHeader({\n      oauth_callback: callbackUrl\n    });\n\n    const response = this._call('POST', this._urls.requestToken, headers);\n    const tokens = querystring.parse(response.content);\n\n    if (! tokens.oauth_callback_confirmed)\n      throw Object.assign(new Error(\"oauth_callback_confirmed false when requesting oauth1 token\"),\n                               {response: response});\n\n    this.requestToken = tokens.oauth_token;\n    this.requestTokenSecret = tokens.oauth_token_secret;\n  }\n\n  prepareAccessToken(query, requestTokenSecret) {\n    // support implementations that use request token secrets. This is\n    // read by this._call.\n    //\n    // XXX make it a param to call, not something stashed on self? It's\n    // kinda confusing right now, everything except this is passed as\n    // arguments, but this is stored.\n    if (requestTokenSecret)\n      this.accessTokenSecret = requestTokenSecret;\n\n    const headers = this._buildHeader({\n      oauth_token: query.oauth_token,\n      oauth_verifier: query.oauth_verifier\n    });\n\n    const response = this._call('POST', this._urls.accessToken, headers);\n    const tokens = querystring.parse(response.content);\n\n    if (! tokens.oauth_token || ! tokens.oauth_token_secret) {\n      const error = new Error(\"missing oauth token or secret\");\n      // We provide response only if no token is available, we do not want to leak any tokens\n      if (! tokens.oauth_token && ! tokens.oauth_token_secret) {\n        Object.assign(error, {response: response});\n      }\n      throw error;\n    }\n\n    this.accessToken = tokens.oauth_token;\n    this.accessTokenSecret = tokens.oauth_token_secret;\n  }\n\n  call(method, url, params, callback) {\n    const headers = this._buildHeader({\n      oauth_token: this.accessToken\n    });\n\n    if(! params) {\n      params = {};\n    }\n\n    return this._call(method, url, headers, params, callback);\n  }\n\n  get(url, params, callback) {\n    return this.call('GET', url, params, callback);\n  }\n\n  post(url, params, callback) {\n    return this.call('POST', url, params, callback);\n  }\n\n  _buildHeader(headers) {\n    return {\n      oauth_consumer_key: this._config.consumerKey,\n      oauth_nonce: Random.secret().replace(/\\W/g, ''),\n      oauth_signature_method: 'HMAC-SHA1',\n      oauth_timestamp: (new Date().valueOf()/1000).toFixed().toString(),\n      oauth_version: '1.0',\n      ...headers,\n    }\n  }\n\n  _getSignature(method, url, rawHeaders, accessTokenSecret, params) {\n    const headers = this._encodeHeader({ ...rawHeaders, ...params });\n\n    const parameters = Object.keys(headers).map(key => `${key}=${headers[key]}`)\n      .sort().join('&');\n\n    const signatureBase = [\n      method,\n      this._encodeString(url),\n      this._encodeString(parameters)\n    ].join('&');\n\n    const secret = OAuth.openSecret(this._config.secret);\n\n    let signingKey = `${this._encodeString(secret)}&`;\n    if (accessTokenSecret)\n      signingKey += this._encodeString(accessTokenSecret);\n\n    return crypto.createHmac('SHA1', signingKey).update(signatureBase).digest('base64');\n  };\n\n  _call(method, url, headers = {}, params = {}, callback) {\n    // all URLs to be functions to support parameters/customization\n    if(typeof url === \"function\") {\n      url = url(this);\n    }\n\n    // Extract all query string parameters from the provided URL\n    const parsedUrl = urlModule.parse(url, true);\n    // Merge them in a way that params given to the method call have precedence\n    params = { ...parsedUrl.query, ...params };\n\n    // Reconstruct the URL back without any query string parameters\n    // (they are now in params)\n    parsedUrl.query = {};\n    parsedUrl.search = '';\n    url = urlModule.format(parsedUrl);\n\n    // Get the signature\n    headers.oauth_signature =\n      this._getSignature(method, url, headers, this.accessTokenSecret, params);\n\n    // Make a authorization string according to oauth1 spec\n    const authString = this._getAuthHeaderString(headers);\n\n    // Make signed request\n    try {\n      const response = HTTP.call(method, url, {\n        params,\n        headers: {\n          Authorization: authString\n        }\n      }, callback && ((error, response) => {\n        if (! error) {\n          response.nonce = headers.oauth_nonce;\n        }\n        callback(error, response);\n      }));\n      // We store nonce so that JWTs can be validated\n      if (response)\n        response.nonce = headers.oauth_nonce;\n      return response;\n    } catch (err) {\n      throw Object.assign(new Error(`Failed to send OAuth1 request to ${url}. ${err.message}`),\n                     {response: err.response});\n    }\n  };\n\n  _encodeHeader(header) {\n    return Object.keys(header).reduce((memo, key) => {\n      memo[this._encodeString(key)] = this._encodeString(header[key]);\n      return memo;\n    }, {});\n  };\n\n  _encodeString(str) {\n    return encodeURIComponent(str).replace(/[!'()]/g, escape).replace(/\\*/g, \"%2A\");\n  };\n\n  _getAuthHeaderString(headers) {\n    return 'OAuth ' +  Object.keys(headers).map(key =>\n      `${this._encodeString(key)}=\"${this._encodeString(headers[key])}\"`\n    ).sort().join(', ');\n  };\n\n};\n"]},"sourceType":"module","hash":"5323b41a8b0bc0a9ee31eea52e86a1fb9a213c2f"}
