{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/oauth1/oauth1_pending_request_tokens.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/oauth1/oauth1_pending_request_tokens.js","filename":"/home/momen/projects/spotmycrib-master/packages/oauth1/oauth1_pending_request_tokens.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/oauth1/oauth1_pending_request_tokens.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/oauth1/oauth1_pending_request_tokens.js"}},"code":"//\n// _pendingRequestTokens are request tokens that have been received\n// but not yet fully authorized (processed).\n//\n// During the oauth1 authorization process, the Meteor App opens\n// a pop-up, requests a request token from the oauth1 service, and\n// redirects the browser to the oauth1 service for the user\n// to grant authorization.  The user is then returned to the\n// Meteor Apps' callback url and the request token is verified.\n//\n// When Meteor Apps run on multiple servers, it's possible that\n// 2 different servers may be used to generate the request token\n// and to verify it in the callback once the user has authorized.\n//\n// For this reason, the _pendingRequestTokens are stored in the database\n// so they can be shared across Meteor App servers.\n//\n// XXX This code is fairly similar to oauth/pending_credentials.js --\n// maybe we can combine them somehow.\n// Collection containing pending request tokens\n// Has key, requestToken, requestTokenSecret, and createdAt fields.\nOAuth._pendingRequestTokens = new Mongo.Collection(\"meteor_oauth_pendingRequestTokens\", {\n  _preventAutopublish: true\n});\n\nOAuth._pendingRequestTokens._ensureIndex('key', {\n  unique: true\n});\n\nOAuth._pendingRequestTokens._ensureIndex('createdAt'); // Periodically clear old entries that never got completed\n\n\nconst _cleanStaleResults = () => {\n  // Remove request tokens older than 5 minute\n  const timeCutoff = new Date();\n  timeCutoff.setMinutes(timeCutoff.getMinutes() - 5);\n\n  OAuth._pendingRequestTokens.remove({\n    createdAt: {\n      $lt: timeCutoff\n    }\n  });\n};\n\nconst _cleanupHandle = Meteor.setInterval(_cleanStaleResults, 60 * 1000); // Stores the key and request token in the _pendingRequestTokens collection.\n// Will throw an exception if `key` is not a string.\n//\n// @param key {string}\n// @param requestToken {string}\n// @param requestTokenSecret {string}\n//\n\n\nOAuth._storeRequestToken = (key, requestToken, requestTokenSecret) => {\n  check(key, String); // We do an upsert here instead of an insert in case the user happens\n  // to somehow send the same `state` parameter twice during an OAuth\n  // login; we don't want a duplicate key error.\n\n  OAuth._pendingRequestTokens.upsert({\n    key\n  }, {\n    key,\n    requestToken: OAuth.sealSecret(requestToken),\n    requestTokenSecret: OAuth.sealSecret(requestTokenSecret),\n    createdAt: new Date()\n  });\n}; // Retrieves and removes a request token from the _pendingRequestTokens collection\n// Returns an object containing requestToken and requestTokenSecret properties\n//\n// @param key {string}\n//\n\n\nOAuth._retrieveRequestToken = key => {\n  check(key, String);\n\n  const pendingRequestToken = OAuth._pendingRequestTokens.findOne({\n    key: key\n  });\n\n  if (pendingRequestToken) {\n    OAuth._pendingRequestTokens.remove({\n      _id: pendingRequestToken._id\n    });\n\n    return {\n      requestToken: OAuth.openSecret(pendingRequestToken.requestToken),\n      requestTokenSecret: OAuth.openSecret(pendingRequestToken.requestTokenSecret)\n    };\n  } else {\n    return undefined;\n  }\n};","map":{"version":3,"sources":["packages/oauth1/oauth1_pending_request_tokens.js"],"names":["OAuth","_pendingRequestTokens","Mongo","Collection","_preventAutopublish","_ensureIndex","unique","_cleanStaleResults","timeCutoff","Date","setMinutes","getMinutes","remove","createdAt","$lt","_cleanupHandle","Meteor","setInterval","_storeRequestToken","key","requestToken","requestTokenSecret","check","String","upsert","sealSecret","_retrieveRequestToken","pendingRequestToken","findOne","_id","openSecret","undefined"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACAA,KAAK,CAACC,qBAAN,GAA8B,IAAIC,KAAK,CAACC,UAAV,CAC5B,mCAD4B,EACS;AACnCC,EAAAA,mBAAmB,EAAE;AADc,CADT,CAA9B;;AAKAJ,KAAK,CAACC,qBAAN,CAA4BI,YAA5B,CAAyC,KAAzC,EAAgD;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAhD;;AACAN,KAAK,CAACC,qBAAN,CAA4BI,YAA5B,CAAyC,WAAzC,E,CAIA;;;AACA,MAAME,kBAAkB,GAAG,MAAM;AAC/B;AACA,QAAMC,UAAU,GAAG,IAAIC,IAAJ,EAAnB;AACAD,EAAAA,UAAU,CAACE,UAAX,CAAsBF,UAAU,CAACG,UAAX,KAA0B,CAAhD;;AACAX,EAAAA,KAAK,CAACC,qBAAN,CAA4BW,MAA5B,CAAmC;AAAEC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,GAAG,EAAEN;AAAP;AAAb,GAAnC;AACD,CALD;;AAMA,MAAMO,cAAc,GAAGC,MAAM,CAACC,WAAP,CAAmBV,kBAAnB,EAAuC,KAAK,IAA5C,CAAvB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAP,KAAK,CAACkB,kBAAN,GAA2B,CAACC,GAAD,EAAMC,YAAN,EAAoBC,kBAApB,KAA2C;AACpEC,EAAAA,KAAK,CAACH,GAAD,EAAMI,MAAN,CAAL,CADoE,CAGpE;AACA;AACA;;AACAvB,EAAAA,KAAK,CAACC,qBAAN,CAA4BuB,MAA5B,CAAmC;AACjCL,IAAAA;AADiC,GAAnC,EAEG;AACDA,IAAAA,GADC;AAEDC,IAAAA,YAAY,EAAEpB,KAAK,CAACyB,UAAN,CAAiBL,YAAjB,CAFb;AAGDC,IAAAA,kBAAkB,EAAErB,KAAK,CAACyB,UAAN,CAAiBJ,kBAAjB,CAHnB;AAIDR,IAAAA,SAAS,EAAE,IAAIJ,IAAJ;AAJV,GAFH;AAQD,CAdD,C,CAiBA;AACA;AACA;AACA;AACA;;;AACAT,KAAK,CAAC0B,qBAAN,GAA8BP,GAAG,IAAI;AACnCG,EAAAA,KAAK,CAACH,GAAD,EAAMI,MAAN,CAAL;;AAEA,QAAMI,mBAAmB,GAAG3B,KAAK,CAACC,qBAAN,CAA4B2B,OAA5B,CAAoC;AAAET,IAAAA,GAAG,EAAEA;AAAP,GAApC,CAA5B;;AACA,MAAIQ,mBAAJ,EAAyB;AACvB3B,IAAAA,KAAK,CAACC,qBAAN,CAA4BW,MAA5B,CAAmC;AAAEiB,MAAAA,GAAG,EAAEF,mBAAmB,CAACE;AAA3B,KAAnC;;AACA,WAAO;AACLT,MAAAA,YAAY,EAAEpB,KAAK,CAAC8B,UAAN,CAAiBH,mBAAmB,CAACP,YAArC,CADT;AAELC,MAAAA,kBAAkB,EAAErB,KAAK,CAAC8B,UAAN,CAClBH,mBAAmB,CAACN,kBADF;AAFf,KAAP;AAKD,GAPD,MAOO;AACL,WAAOU,SAAP;AACD;AACF,CAdD","sourcesContent":["//\n// _pendingRequestTokens are request tokens that have been received\n// but not yet fully authorized (processed).\n//\n// During the oauth1 authorization process, the Meteor App opens\n// a pop-up, requests a request token from the oauth1 service, and\n// redirects the browser to the oauth1 service for the user\n// to grant authorization.  The user is then returned to the\n// Meteor Apps' callback url and the request token is verified.\n//\n// When Meteor Apps run on multiple servers, it's possible that\n// 2 different servers may be used to generate the request token\n// and to verify it in the callback once the user has authorized.\n//\n// For this reason, the _pendingRequestTokens are stored in the database\n// so they can be shared across Meteor App servers.\n//\n// XXX This code is fairly similar to oauth/pending_credentials.js --\n// maybe we can combine them somehow.\n\n// Collection containing pending request tokens\n// Has key, requestToken, requestTokenSecret, and createdAt fields.\nOAuth._pendingRequestTokens = new Mongo.Collection(\n  \"meteor_oauth_pendingRequestTokens\", {\n    _preventAutopublish: true\n  });\n\nOAuth._pendingRequestTokens._ensureIndex('key', { unique: true });\nOAuth._pendingRequestTokens._ensureIndex('createdAt');\n\n\n\n// Periodically clear old entries that never got completed\nconst _cleanStaleResults = () => {\n  // Remove request tokens older than 5 minute\n  const timeCutoff = new Date();\n  timeCutoff.setMinutes(timeCutoff.getMinutes() - 5);\n  OAuth._pendingRequestTokens.remove({ createdAt: { $lt: timeCutoff } });\n};\nconst _cleanupHandle = Meteor.setInterval(_cleanStaleResults, 60 * 1000);\n\n\n// Stores the key and request token in the _pendingRequestTokens collection.\n// Will throw an exception if `key` is not a string.\n//\n// @param key {string}\n// @param requestToken {string}\n// @param requestTokenSecret {string}\n//\nOAuth._storeRequestToken = (key, requestToken, requestTokenSecret) => {\n  check(key, String);\n\n  // We do an upsert here instead of an insert in case the user happens\n  // to somehow send the same `state` parameter twice during an OAuth\n  // login; we don't want a duplicate key error.\n  OAuth._pendingRequestTokens.upsert({\n    key,\n  }, {\n    key,\n    requestToken: OAuth.sealSecret(requestToken),\n    requestTokenSecret: OAuth.sealSecret(requestTokenSecret),\n    createdAt: new Date()\n  });\n};\n\n\n// Retrieves and removes a request token from the _pendingRequestTokens collection\n// Returns an object containing requestToken and requestTokenSecret properties\n//\n// @param key {string}\n//\nOAuth._retrieveRequestToken = key => {\n  check(key, String);\n\n  const pendingRequestToken = OAuth._pendingRequestTokens.findOne({ key: key });\n  if (pendingRequestToken) {\n    OAuth._pendingRequestTokens.remove({ _id: pendingRequestToken._id });\n    return {\n      requestToken: OAuth.openSecret(pendingRequestToken.requestToken),\n      requestTokenSecret: OAuth.openSecret(\n        pendingRequestToken.requestTokenSecret)\n    };\n  } else {\n    return undefined;\n  }\n};\n"]},"sourceType":"module","hash":"493296c8c6afd9ef0744c2baf5e8dc0a4658de76"}
