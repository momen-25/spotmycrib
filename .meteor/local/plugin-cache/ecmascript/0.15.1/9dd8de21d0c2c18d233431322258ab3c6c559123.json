{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/server/core/SA.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"server/core/SA.js","filename":"/home/momen/projects/spotmycrib-master/server/core/SA.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/server/core/SA.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/core/SA.js"}},"code":"/**\n * Created by njanjanam on 27/03/2018.\n */\nMeteor.methods({\n  SAGenerateSlugsForMissingProperties: function (auctionCode) {\n    //Will generate slugs to all auctions, missing ones\n    console.log(\"server method Super Admin SAGenerateSlugsForMissingProperties called\");\n    var user = Meteor.user();\n\n    if (!user) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    if (!user.isSA) {\n      //Only super admins can use this method.\n      throw new Meteor.Error('not-authorized');\n      return false;\n    }\n\n    var properties = Collections.Properties.find({\n      isArchived: false\n    });\n    var tmp = properties.fetch();\n    var property = '';\n    var c = 0;\n    var slug = ''; // console.log('Total: '+tmp.length)\n\n    for (var i = 0; i < tmp.length; i++) {\n      property = tmp[i]; // if(property.slug){\n      //Format: (apartment-for-rent-in-area- // not this format as its for browse pages) (name and are apartment)\n      //Approved format: /rent/apartment-name-of-apt-AREA-CITY\n\n      if (property.type) slug = property.type;\n      if (property.address.address) slug += '-' + property.address.address;\n      if (property.address.area) slug += '-' + property.address.area;\n      if (property.address.county) slug += '-' + property.address.county;\n      Collections.Properties.update(property._id, {\n        $set: {\n          \"slug\": slugify(slug)\n        }\n      });\n      c++; // }\n    }\n\n    return 'Slug Added Count: ' + c;\n  },\n  SAdeactivateAuction: function (auctionCode) {\n    //Below is the code used on client to mass delete the objects.\n    // var props = Collections.Auctions.find({},{fields:{lettingAuctionCode:1}}).fetch()\n    // var excludes = ['TUK94','RR5DK','KZ6X9','RCWJG']\n    // var a=[];\n    // for(var i=0;i<props.length;i++){\n    //     if(excludes.indexOf(props[i].lettingAuctionCode)!=-1)continue;\n    //     a.push(props[i].lettingAuctionCode)\n    // }\n    // for(var i=0;i<a.length;i++){\n    //     Meteor.call('SAdeactivateAuction',a[i]);\n    // }\n    check(auctionCode, String);\n    console.log(\"server method Super Admin deactivateAuction called\");\n    console.log(auctionCode);\n    var user = Meteor.user();\n\n    if (!user) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    if (!user.isSA) {\n      //Only super admins can use this method.\n      throw new Meteor.Error('not-authorized');\n      return false;\n    }\n\n    const auction = Collections.Auctions.findOne({\n      lettingAuctionCode: auctionCode\n    });\n    if (!auction) throw new Meteor.Error('Invalid auction');\n    const property = Collections.Properties.findOne({\n      _id: auction.propertyId\n    });\n    if (!property) throw new Meteor.Error('Invalid property');\n    var userId = property.createdByAgent;\n    var auctionHistory = property.auctionHistory;\n    if (!auctionHistory) auctionHistory = [];\n    auctionHistory.push({\n      auctionId: property.auctionId,\n      deactivatedOn: new Date()\n    });\n    Collections.Properties.update(auction.propertyId, {\n      $set: {\n        \"auctionId\": \"\",\n        \"rent\": \"\",\n        \"auctionHistory\": auctionHistory\n      }\n    });\n    Collections.Auctions.update(auction._id, {\n      $set: {\n        \"isArchived\": true,\n        \"endDate\": new Date()\n      }\n    });\n    var bidCount = Collections.Bids.find({\n      auctionId: auction._id\n    }).count();\n\n    if (bidCount) {\n      //Non zero\n      Collections.Bids.update({\n        auctionId: auction._id\n      }, {\n        $set: {\n          \"isArchived\": true,\n          \"endDate\": new Date()\n        }\n      });\n    } // const user = Meteor.user();\n\n\n    user = Meteor.users.findOne(userId);\n    if (!auction.auctionBidProfit) auction.auctionBidProfit = 0;\n    if (!user.profile.bidProfitActive) user.profile.bidProfitActive = 0;\n    if (!user.profile.activeAuctions) user.profile.activeAuctions = 0;\n    if (!user.profile.bidsReceivedActiveAuctions) user.profile.bidsReceivedActiveAuctions = 0;\n    user.profile.activeAuctions--;\n    user.profile.bidsReceivedActiveAuctions -= bidCount;\n    user.profile.bidProfitActive -= auction.auctionBidProfit;\n    if (user.profile.activeAuctions < 0) user.profile.activeAuctions = 0;\n    if (user.profile.bidsReceivedActiveAuctions < 0) user.profile.bidsReceivedActiveAuctions = 0;\n    if (user.profile.bidProfitActive < 0) user.profile.bidProfitActive = 0;\n    Meteor.users.update(userId, {\n      $set: {\n        \"profile.activeAuctions\": user.profile.activeAuctions,\n        \"profile.bidsReceivedActiveAuctions\": user.profile.bidsReceivedActiveAuctions,\n        \"profile.bidProfitActive\": user.profile.bidProfitActive\n      }\n    });\n    return {\n      status: 'success'\n    };\n  },\n  FixAddRentToProperty: function () {\n    //Add rent field to all property records, take from auction table.\n    console.log(\"server method Super Admin FixAddRentToProperty called\");\n    var user = Meteor.user();\n\n    if (!user) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    if (!user.isSA) {\n      //Only super admins can use this method.\n      throw new Meteor.Error('not-authorized');\n      return false;\n    }\n\n    var auctions = Collections.Auctions.find({\n      isArchived: false\n    });\n    var tmp = auctions.fetch();\n    var auction = '';\n    var c = 0; // console.log('Total: '+tmp.length)\n\n    for (var i = 0; i < tmp.length; i++) {\n      auction = tmp[i]; // if(auction.propertyId=='JGhAi548Bfa3q7TEJ')console.log('found it')\n      // console.log(auction._id)\n\n      if (!auction.propertyId) continue;\n      Collections.Properties.update(auction.propertyId, {\n        $set: {\n          \"rent\": parseInt(auction.price)\n        }\n      });\n      c++;\n    }\n\n    return 'Fixed count: ' + c;\n  },\n  AddBedCountToAllProperty: function () {\n    //Add rent field to all property records, take from auction table.\n    console.log(\"server method Super Admin AddBedCountToAllProperty called\");\n    var user = Meteor.user();\n\n    if (!user) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    if (!user.isSA) {\n      //Only super admins can use this method.\n      throw new Meteor.Error('not-authorized');\n      return false;\n    }\n\n    var properties = Collections.Properties.find({\n      isArchived: false\n    });\n    var tmp = properties.fetch();\n    var property = '';\n    var c = 0;\n    var bedCount = 1;\n    console.log('Total: ' + tmp.length);\n\n    for (var i = 0; i < tmp.length; i++) {\n      property = tmp[i];\n      if (property.bedrooms) bedCount = property.bedrooms.length;\n      if (!bedCount) bedCount = 1;\n      Collections.Properties.update(property._id, {\n        $set: {\n          \"bedCount\": parseInt(bedCount)\n        }\n      });\n      c++;\n    }\n\n    console.log('bedCount Added Count: ' + c);\n    return 'bedCount Added Count: ' + c;\n  },\n  AddMonthlyRentOnAuctionProperty: function () {\n    //Add rent field to all property records, take from auction table.\n    console.log(\"server method Super Admin AddMonthlyRentOnAuctionProperty called\");\n    var user = Meteor.user();\n\n    if (!user) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    if (!user.isSA) {\n      //Only super admins can use this method.\n      throw new Meteor.Error('not-authorized');\n      return false;\n    }\n\n    var properties = Collections.Properties.find({\n      isArchived: false\n    });\n    var tmp = properties.fetch();\n    var property = '';\n    var c = 0;\n    var rentMonthly = 0;\n    var auction = {};\n    console.log('Total: ' + tmp.length);\n\n    for (var i = 0; i < tmp.length; i++) {\n      property = tmp[i];\n      if (!property.auctionId) continue;\n      auction = Collections.Auctions.findOne({\n        _id: property.auctionId\n      }); // if(auction.price==null)auction.price = Math.floor(Math.random() *10 +10) *10\n\n      rentMonthly = parseFloat(auction.price);\n      if (auction.rentType == 'weekly') rentMonthly = parseFloat(rentMonthly / 7 * 30); // Month has 30 days\n\n      if (!rentMonthly) continue;\n      if (!auction.price) continue;\n      Collections.Properties.update(property._id, {\n        $set: {\n          \"rent\": parseInt(auction.price),\n          \"rentMonthly\": rentMonthly\n        }\n      });\n      Collections.Auctions.update(property.auctionId, {\n        $set: {\n          \"price\": parseInt(auction.price),\n          \"rentMonthly\": rentMonthly\n        }\n      });\n      c++;\n    }\n\n    console.log('bedCount Added Count: ' + c);\n    return 'Fixed count: ' + c;\n  },\n  ////////////// TEMP - NOT IMP\n  FixRentDataTypeOnAuctionProperty: function () {\n    //Add rent field to all property records, take from auction table.\n    console.log(\"server method Super Admin FixRentFormatOnAuctionProperty called\");\n    var user = Meteor.user();\n\n    if (!user) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    if (!user.isSA) {\n      //Only super admins can use this method.\n      throw new Meteor.Error('not-authorized');\n      return false;\n    }\n\n    var auctions = Collections.Auctions.find({\n      isArchived: false\n    });\n    var tmp = auctions.fetch();\n    var auction = '';\n    var c = 0; // console.log('Total: '+tmp.length)\n\n    for (var i = 0; i < tmp.length; i++) {\n      auction = tmp[i];\n      if (!auction.propertyId) continue;\n      Collections.Auctions.update(auction._id, {\n        $set: {\n          \"price\": parseInt(auction.price)\n        }\n      });\n      Collections.Properties.update(auction.propertyId, {\n        $set: {\n          \"rent\": parseInt(auction.price)\n        }\n      });\n      c++;\n    }\n\n    return 'Fixed count: ' + c;\n  }\n}); // Meteor.call('FixAddRentToProperty',function(err, res){\n//     debugger;\n//     console.log(res);\n// })\n\nfunction slugify(text) {\n  if (!text) return '';\n  const a = 'àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/_,:;';\n  const b = 'aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return text.toString().toLowerCase().replace(/\\s+/g, '-') // Replace spaces with -\n  .replace(p, c => b.charAt(a.indexOf(c))) // Replace special chars\n  .replace(/&/g, '-and-') // Replace & with 'and'\n  .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n  .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n  .replace(/^-+/, '') // Trim - from start of text\n  .replace(/-+$/, ''); // Trim - from end of text\n}","map":{"version":3,"sources":["server/core/SA.js"],"names":["Meteor","methods","SAGenerateSlugsForMissingProperties","auctionCode","console","log","user","Error","isSA","properties","Collections","Properties","find","isArchived","tmp","fetch","property","c","slug","i","length","type","address","area","county","update","_id","$set","slugify","SAdeactivateAuction","check","String","auction","Auctions","findOne","lettingAuctionCode","propertyId","userId","createdByAgent","auctionHistory","push","auctionId","deactivatedOn","Date","bidCount","Bids","count","users","auctionBidProfit","profile","bidProfitActive","activeAuctions","bidsReceivedActiveAuctions","status","FixAddRentToProperty","auctions","parseInt","price","AddBedCountToAllProperty","bedCount","bedrooms","AddMonthlyRentOnAuctionProperty","rentMonthly","parseFloat","rentType","FixRentDataTypeOnAuctionProperty","text","a","b","p","RegExp","split","join","toString","toLowerCase","replace","charAt","indexOf"],"mappings":"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","sourcesContent":["/**\n * Created by njanjanam on 27/03/2018.\n */\nMeteor.methods({\n    SAGenerateSlugsForMissingProperties: function(auctionCode) {\n        //Will generate slugs to all auctions, missing ones\n        console.log(\"server method Super Admin SAGenerateSlugsForMissingProperties called\")\n\n        var user = Meteor.user();\n        if (!user) {\n            throw new Meteor.Error('not-authorized');\n        }\n        if(!user.isSA){//Only super admins can use this method.\n            throw new Meteor.Error('not-authorized');\n            return false;\n        }\n\n        var properties = Collections.Properties.find({isArchived:false})\n        var tmp = properties.fetch();var property = '';var c=0;var slug='';\n\n        // console.log('Total: '+tmp.length)\n        for(var i=0;i<tmp.length;i++){\n            property = tmp[i];\n            // if(property.slug){\n                //Format: (apartment-for-rent-in-area- // not this format as its for browse pages) (name and are apartment)\n                //Approved format: /rent/apartment-name-of-apt-AREA-CITY\n                if(property.type)slug = property.type\n                if(property.address.address)slug += '-'+property.address.address\n                if(property.address.area)slug += '-'+property.address.area\n                if(property.address.county)slug += '-'+property.address.county\n\n                Collections.Properties.update(property._id, {\n                    $set: {\n                        \"slug\": slugify(slug)\n                    }\n                });\n                c++;\n            // }\n        }\n        return 'Slug Added Count: '+c;\n    },\n    SAdeactivateAuction: function(auctionCode) {\n        //Below is the code used on client to mass delete the objects.\n        // var props = Collections.Auctions.find({},{fields:{lettingAuctionCode:1}}).fetch()\n        // var excludes = ['TUK94','RR5DK','KZ6X9','RCWJG']\n        // var a=[];\n        // for(var i=0;i<props.length;i++){\n        //     if(excludes.indexOf(props[i].lettingAuctionCode)!=-1)continue;\n        //     a.push(props[i].lettingAuctionCode)\n        // }\n        // for(var i=0;i<a.length;i++){\n        //     Meteor.call('SAdeactivateAuction',a[i]);\n        // }\n        check(auctionCode, String);\n        console.log(\"server method Super Admin deactivateAuction called\")\n\n        console.log(auctionCode);\n\n        var user = Meteor.user();\n        if (!user) {\n            throw new Meteor.Error('not-authorized');\n        }\n        if(!user.isSA){//Only super admins can use this method.\n            throw new Meteor.Error('not-authorized');\n            return false;\n        }\n\n        const auction = Collections.Auctions.findOne({lettingAuctionCode:auctionCode});\n        if (!auction)throw new Meteor.Error('Invalid auction');\n\n        const property = Collections.Properties.findOne({\n            _id: auction.propertyId\n        });\n        if (!property)throw new Meteor.Error('Invalid property');\n\n        var userId=property.createdByAgent;\n\n        var auctionHistory = property.auctionHistory;\n        if(!auctionHistory)auctionHistory = [];\n\n        auctionHistory.push({\n            auctionId:property.auctionId,\n            deactivatedOn: new Date()\n        })\n        Collections.Properties.update(auction.propertyId, {\n            $set: {\n                \"auctionId\": \"\",\n                \"rent\": \"\",\n                \"auctionHistory\":auctionHistory\n            }\n        });\n        Collections.Auctions.update(auction._id, {\n            $set: {\n                \"isArchived\": true,\n                \"endDate\":new Date()\n            }\n        });\n\n        var bidCount = Collections.Bids.find({auctionId:auction._id}).count();\n\n        if(bidCount){//Non zero\n            Collections.Bids.update({auctionId:auction._id}, {\n                $set: {\n                    \"isArchived\": true,\n                    \"endDate\":new Date()\n                }\n            });\n        }\n\n        // const user = Meteor.user();\n        user = Meteor.users.findOne(userId);\n\n\n\n        if(!auction.auctionBidProfit)auction.auctionBidProfit=0\n        if(!user.profile.bidProfitActive)user.profile.bidProfitActive=0\n        if(!user.profile.activeAuctions)user.profile.activeAuctions=0\n        if(!user.profile.bidsReceivedActiveAuctions)user.profile.bidsReceivedActiveAuctions=0\n        user.profile.activeAuctions--;\n        user.profile.bidsReceivedActiveAuctions-=bidCount;\n        user.profile.bidProfitActive -= auction.auctionBidProfit;\n\n        if(user.profile.activeAuctions<0)user.profile.activeAuctions=0\n        if(user.profile.bidsReceivedActiveAuctions<0)user.profile.bidsReceivedActiveAuctions=0\n        if(user.profile.bidProfitActive<0)user.profile.bidProfitActive=0\n        Meteor.users.update(userId,{\n            $set: {\n                \"profile.activeAuctions\" :user.profile.activeAuctions,\n                \"profile.bidsReceivedActiveAuctions\" :user.profile.bidsReceivedActiveAuctions,\n                \"profile.bidProfitActive\" :user.profile.bidProfitActive,\n            }\n        });\n\n\n        return {\n            status: 'success'\n        }\n\n    },\n    FixAddRentToProperty:function(){//Add rent field to all property records, take from auction table.\n        console.log(\"server method Super Admin FixAddRentToProperty called\")\n\n        var user = Meteor.user();\n        if (!user) {\n            throw new Meteor.Error('not-authorized');\n        }\n        if(!user.isSA){//Only super admins can use this method.\n            throw new Meteor.Error('not-authorized');\n            return false;\n        }\n\n        var auctions = Collections.Auctions.find({isArchived:false})\n        var tmp = auctions.fetch();var auction = '';var c=0;\n\n        // console.log('Total: '+tmp.length)\n        for(var i=0;i<tmp.length;i++){\n            auction = tmp[i];\n            // if(auction.propertyId=='JGhAi548Bfa3q7TEJ')console.log('found it')\n            // console.log(auction._id)\n            if(!auction.propertyId)continue;\n            Collections.Properties.update(auction.propertyId, {\n                $set: {\n                    \"rent\": parseInt(auction.price)\n                }\n            });\n            c++;\n        }\n        return 'Fixed count: '+c;\n\n    },\n    AddBedCountToAllProperty:function(){//Add rent field to all property records, take from auction table.\n        console.log(\"server method Super Admin AddBedCountToAllProperty called\")\n\n        var user = Meteor.user();\n        if (!user) {\n            throw new Meteor.Error('not-authorized');\n        }\n        if(!user.isSA){//Only super admins can use this method.\n            throw new Meteor.Error('not-authorized');\n            return false;\n        }\n\n        var properties = Collections.Properties.find({isArchived:false})\n        var tmp = properties.fetch();var property = '';var c=0;var bedCount=1;\n\n        console.log('Total: '+tmp.length)\n        for(var i=0;i<tmp.length;i++){\n            property = tmp[i];\n\n            if(property.bedrooms)bedCount = property.bedrooms.length;\n            if(!bedCount)bedCount = 1\n\n            Collections.Properties.update(property._id, {\n                $set: {\n                    \"bedCount\": parseInt(bedCount)\n                }\n            });\n            c++;\n        }\n        console.log('bedCount Added Count: '+c);\n        return 'bedCount Added Count: '+c;\n    },\n    AddMonthlyRentOnAuctionProperty:function(){//Add rent field to all property records, take from auction table.\n        console.log(\"server method Super Admin AddMonthlyRentOnAuctionProperty called\")\n\n        var user = Meteor.user();\n        if (!user) {\n            throw new Meteor.Error('not-authorized');\n        }\n        if(!user.isSA){//Only super admins can use this method.\n            throw new Meteor.Error('not-authorized');\n            return false;\n        }\n\n        var properties = Collections.Properties.find({isArchived:false})\n        var tmp = properties.fetch();var property = '';var c=0;var rentMonthly=0;var auction = {}\n\n        console.log('Total: '+tmp.length)\n        for(var i=0;i<tmp.length;i++){\n            property = tmp[i];\n            if(!property.auctionId)continue;\n\n            auction = Collections.Auctions.findOne({_id:property.auctionId})\n            // if(auction.price==null)auction.price = Math.floor(Math.random() *10 +10) *10\n            rentMonthly = parseFloat(auction.price)\n            if(auction.rentType=='weekly') rentMonthly = parseFloat((rentMonthly/7)*30) // Month has 30 days\n\n            if(!rentMonthly)continue;\n            if(!auction.price)continue;\n\n            Collections.Properties.update(property._id, {\n                $set: {\n                    \"rent\": parseInt(auction.price),\n                    \"rentMonthly\": rentMonthly\n                }\n            });\n            Collections.Auctions.update(property.auctionId, {\n                $set: {\n                    \"price\": parseInt(auction.price),\n                    \"rentMonthly\": rentMonthly\n                }\n            });\n            c++;\n        }\n        console.log('bedCount Added Count: '+c);\n        return 'Fixed count: '+c;\n\n    },\n\n\n\n\n\n\n    ////////////// TEMP - NOT IMP\n    FixRentDataTypeOnAuctionProperty:function(){//Add rent field to all property records, take from auction table.\n        console.log(\"server method Super Admin FixRentFormatOnAuctionProperty called\")\n\n        var user = Meteor.user();\n        if (!user) {\n            throw new Meteor.Error('not-authorized');\n        }\n        if(!user.isSA){//Only super admins can use this method.\n            throw new Meteor.Error('not-authorized');\n            return false;\n        }\n\n        var auctions = Collections.Auctions.find({isArchived:false})\n        var tmp = auctions.fetch();var auction = '';var c=0;\n\n        // console.log('Total: '+tmp.length)\n        for(var i=0;i<tmp.length;i++){\n            auction = tmp[i];\n            if(!auction.propertyId)continue;\n\n            Collections.Auctions.update(auction._id, {\n                $set: {\n                    \"price\": parseInt(auction.price)\n                }\n            });\n            Collections.Properties.update(auction.propertyId, {\n                $set: {\n                    \"rent\": parseInt(auction.price)\n                }\n            });\n            c++;\n        }\n        return 'Fixed count: '+c;\n\n    },\n\n})\n// Meteor.call('FixAddRentToProperty',function(err, res){\n//     debugger;\n//     console.log(res);\n// })\nfunction slugify (text) {\n    if(!text)return '';\n    const a = 'àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/_,:;'\n    const b = 'aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n\n    return text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')           // Replace spaces with -\n        .replace(p, c =>\n            b.charAt(a.indexOf(c)))     // Replace special chars\n        .replace(/&/g, '-and-')         // Replace & with 'and'\n        .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n        .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n        .replace(/^-+/, '')             // Trim - from start of text\n        .replace(/-+$/, '')             // Trim - from end of text\n}"]},"sourceType":"module","hash":"9dd8de21d0c2c18d233431322258ab3c6c559123"}
