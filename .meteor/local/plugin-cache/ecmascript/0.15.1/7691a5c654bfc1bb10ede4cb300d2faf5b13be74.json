{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/models/http.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/models/http.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/models/http.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/models/http.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/models/http.js"}},"code":"const {\n  DDSketch\n} = require('monti-apm-sketches-js');\n\nconst METHOD_METRICS_FIELDS = ['db', 'http', 'email', 'async', 'compute', 'total', 'fs'];\n\nconst HttpModel = function () {\n  this.metricsByMinute = Object.create(null);\n  this.tracerStore = new TracerStore({\n    interval: 1000 * 10,\n    maxTotalPoints: 30,\n    archiveEvery: 10\n  });\n  this.tracerStore.start();\n};\n\n_.extend(HttpModel.prototype, KadiraModel.prototype);\n\nHttpModel.prototype.processRequest = function (trace, req, res) {\n  const dateId = this._getDateId(trace.at);\n\n  this._appendMetrics(dateId, trace, res);\n\n  this.tracerStore.addTrace(trace);\n};\n\nHttpModel.prototype._getMetrics = function (timestamp, routeId) {\n  const dateId = this._getDateId(timestamp);\n\n  if (!this.metricsByMinute[dateId]) {\n    this.metricsByMinute[dateId] = {\n      routes: Object.create(null)\n    };\n  }\n\n  const routes = this.metricsByMinute[dateId].routes;\n\n  if (!routes[routeId]) {\n    routes[routeId] = {\n      histogram: new DDSketch({\n        alpha: 0.02\n      }),\n      count: 0,\n      errors: 0,\n      statusCodes: Object.create(null)\n    };\n    METHOD_METRICS_FIELDS.forEach(function (field) {\n      routes[routeId][field] = 0;\n    });\n  }\n\n  return this.metricsByMinute[dateId].routes[routeId];\n};\n\nHttpModel.prototype._appendMetrics = function (dateId, trace, res) {\n  var requestMetrics = this._getMetrics(dateId, trace.name);\n\n  if (!this.metricsByMinute[dateId].startTime) {\n    this.metricsByMinute[dateId].startTime = trace.at;\n  } // merge\n\n\n  METHOD_METRICS_FIELDS.forEach(field => {\n    var value = trace.metrics[field];\n\n    if (value > 0) {\n      requestMetrics[field] += value;\n    }\n  });\n  const statusCode = res.statusCode;\n  let statusMetric;\n\n  if (statusCode < 200) {\n    statusMetric = '1xx';\n  } else if (statusCode < 300) {\n    statusMetric = '2xx';\n  } else if (statusCode < 400) {\n    statusMetric = '3xx';\n  } else if (statusCode < 500) {\n    statusMetric = '4xx';\n  } else if (statusCode < 600) {\n    statusMetric = '5xx';\n  }\n\n  requestMetrics.statusCodes[statusMetric] = requestMetrics.statusCodes[statusMetric] || 0;\n  requestMetrics.statusCodes[statusMetric] += 1;\n  requestMetrics.count += 1;\n  requestMetrics.histogram.add(trace.metrics.total);\n  this.metricsByMinute[dateId].endTime = trace.metrics.at;\n};\n\nHttpModel.prototype.buildPayload = function () {\n  var payload = {\n    httpMetrics: [],\n    httpRequests: []\n  };\n  var metricsByMinute = this.metricsByMinute;\n  this.metricsByMinute = Object.create(null);\n\n  for (var key in metricsByMinute) {\n    var metrics = metricsByMinute[key]; // convert startTime into the actual serverTime\n\n    var startTime = metrics.startTime;\n    metrics.startTime = Kadira.syncedDate.syncTime(startTime);\n\n    for (var requestName in metrics.routes) {\n      METHOD_METRICS_FIELDS.forEach(function (field) {\n        metrics.routes[requestName][field] /= metrics.routes[requestName].count;\n      });\n    }\n\n    payload.httpMetrics.push(metricsByMinute[key]);\n  }\n\n  payload.httpRequests = this.tracerStore.collectTraces();\n  return payload;\n};\n\nmodule.exportDefault(HttpModel);","map":{"version":3,"sources":["packages/montiapm:agent/lib/models/http.js"],"names":["DDSketch","require","METHOD_METRICS_FIELDS","HttpModel","metricsByMinute","Object","create","tracerStore","TracerStore","interval","maxTotalPoints","archiveEvery","start","_","extend","prototype","KadiraModel","processRequest","trace","req","res","dateId","_getDateId","at","_appendMetrics","addTrace","_getMetrics","timestamp","routeId","routes","histogram","alpha","count","errors","statusCodes","forEach","field","requestMetrics","name","startTime","value","metrics","statusCode","statusMetric","add","total","endTime","buildPayload","payload","httpMetrics","httpRequests","key","Kadira","syncedDate","syncTime","requestName","push","collectTraces","module","exportDefault"],"mappings":"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","sourcesContent":["const { DDSketch } = require('monti-apm-sketches-js');\n\nconst METHOD_METRICS_FIELDS = ['db', 'http', 'email', 'async', 'compute', 'total', 'fs'];\n\n\nconst HttpModel = function () {\n  this.metricsByMinute = Object.create(null);\n  this.tracerStore = new TracerStore({\n    interval: 1000 * 10,\n    maxTotalPoints: 30,\n    archiveEvery: 10\n  });\n\n  this.tracerStore.start();\n}\n\n_.extend(HttpModel.prototype, KadiraModel.prototype);\n\nHttpModel.prototype.processRequest = function (trace, req, res) {\n  const dateId = this._getDateId(trace.at);\n  this._appendMetrics(dateId, trace, res);\n  this.tracerStore.addTrace(trace);\n}\n\nHttpModel.prototype._getMetrics = function (timestamp, routeId) {\n  const dateId = this._getDateId(timestamp);\n\n  if (!this.metricsByMinute[dateId]) {\n    this.metricsByMinute[dateId] = {\n      routes: Object.create(null)\n    };\n  }\n\n  const routes = this.metricsByMinute[dateId].routes;\n\n  if (!routes[routeId]) {\n    routes[routeId] = {\n      histogram: new DDSketch({\n        alpha: 0.02,\n      }),\n      count: 0,\n      errors: 0,\n      statusCodes: Object.create(null)\n    };\n\n    METHOD_METRICS_FIELDS.forEach(function (field) {\n      routes[routeId][field] = 0;\n    });\n  }\n\n  return this.metricsByMinute[dateId].routes[routeId];\n}\n\nHttpModel.prototype._appendMetrics = function (dateId, trace, res) {\n  var requestMetrics = this._getMetrics(dateId, trace.name);\n\n  if (!this.metricsByMinute[dateId].startTime) {\n    this.metricsByMinute[dateId].startTime = trace.at;\n  }\n\n  // merge\n  METHOD_METRICS_FIELDS.forEach(field => {\n    var value = trace.metrics[field];\n    if (value > 0) {\n      requestMetrics[field] += value;\n    }\n  });\n\n  const statusCode = res.statusCode;\n  let statusMetric;\n\n  if (statusCode < 200) {\n    statusMetric = '1xx';\n  } else if (statusCode < 300) {\n    statusMetric = '2xx';\n  } else if (statusCode < 400) {\n    statusMetric = '3xx';\n  } else if (statusCode < 500) {\n    statusMetric = '4xx';\n  } else if (statusCode < 600) {\n    statusMetric = '5xx';\n  }\n\n  requestMetrics.statusCodes[statusMetric] = requestMetrics.statusCodes[statusMetric] || 0;\n  requestMetrics.statusCodes[statusMetric] += 1;\n\n  requestMetrics.count += 1;\n  requestMetrics.histogram.add(trace.metrics.total);\n  this.metricsByMinute[dateId].endTime = trace.metrics.at;\n}\n\nHttpModel.prototype.buildPayload = function() {\n  var payload = {\n    httpMetrics: [],\n    httpRequests: []\n  };\n\n  var metricsByMinute = this.metricsByMinute;\n  this.metricsByMinute = Object.create(null);\n\n  for(var key in metricsByMinute) {\n    var metrics = metricsByMinute[key];\n    // convert startTime into the actual serverTime\n    var startTime = metrics.startTime;\n    metrics.startTime = Kadira.syncedDate.syncTime(startTime);\n\n    for(var requestName in metrics.routes) {\n      METHOD_METRICS_FIELDS.forEach(function (field) {\n        metrics.routes[requestName][field] /= metrics.routes[requestName].count;\n      });\n    }\n\n    payload.httpMetrics.push(metricsByMinute[key]);\n  }\n\n  payload.httpRequests = this.tracerStore.collectTraces();\n\n  return payload;\n}\n\nexport default HttpModel;\n"]},"sourceType":"module","hash":"7691a5c654bfc1bb10ede4cb300d2faf5b13be74"}
