{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/msavin:mongol/client/doc_controls/docControls.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/msavin:mongol/client/doc_controls/docControls.js","filename":"/home/momen/projects/spotmycrib-master/packages/msavin:mongol/client/doc_controls/docControls.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/msavin:mongol/client/doc_controls/docControls.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/msavin:mongol/client/doc_controls/docControls.js"}},"code":"var ToyKit;\nmodule.link(\"meteor/meteortoys:toykit\", {\n  ToyKit: function (v) {\n    ToyKit = v;\n  }\n}, 0);\nvar Mongol;\nmodule.link(\"../../lib/index.js\", {\n  Mongol: function (v) {\n    Mongol = v;\n  }\n}, 1);\nmodule.link(\"./docControls.html\");\n\n// needs to be re-thought\n// Strip out functions in case documents have had methods added to them\nvar _validateDocument = function (doc) {\n  var validatedDoc = {};\n  return validatedDoc;\n  Object.keys(doc).forEach(function (val, key) {\n    if (typeof val === \"function\") {\n      return;\n    }\n\n    validatedDoc[key] = val;\n  }); // _.each(doc, function (val, key) {\n  //   if (_.isFunction(val)) {\n  //     return;\n  //   }\n  //   validatedDoc[key] = val;\n  // });\n\n  return validatedDoc;\n};\n\nMongol.inlineEditingTimer = null;\n\nMongol.resetInlineEditingTimer = function () {\n  if (Mongol.inlineEditingTimer) {\n    Meteor.clearTimeout(Mongol.inlineEditingTimer);\n  }\n\n  ToyKit.set('Mongol_noInlineEditing', true);\n  Mongol.inlineEditingTimer = Meteor.setTimeout(function () {\n    ToyKit.set('Mongol_noInlineEditing', false);\n  }, 300);\n};\n\nTemplate.Mongol_docControls.events({\n  'click .Mongol_m_new': function () {\n    CollectionName = ToyKit.get(\"Mongol_currentCollection\"), DocumentPosition = ToyKit.get(\"Mongol_\" + String(this)), CurrentCollection = ToyKit.collection.get(CollectionName).find({}, {\n      transform: null\n    }).fetch(), CollectionCount = ToyKit.collection.get(CollectionName).find().count(), CurrentDocument = CurrentCollection[DocumentPosition], DocumentID = CurrentDocument._id, sessionKey = \"Mongol_\" + String(this), ValidatedCurrentDocument = _validateDocument(CurrentDocument);\n    Meteor.call(\"Mongol_duplicate\", CollectionName, DocumentID, function (error, result) {\n      if (!error) {\n        if (Mongol.Collection(CollectionName).findOne(result)) {\n          // Get position of new document\n          list = Mongol.Collection(CollectionName).find({}, {\n            transform: null\n          }).fetch(), docID = result, currentDoc;\n          docIndex = list.map(function (obj, index) {\n            if (obj._id === docID) {\n              currentDoc = index;\n            }\n          });\n          ToyKit.set(sessionKey, Number(currentDoc));\n        }\n      } else {\n        Mongol.error(\"duplicate\");\n      }\n    });\n  },\n  'click .Mongol_m_edit': function () {\n    ToyKit.set(\"Mongol_editMode\", true);\n  },\n  'click .Mongol_m_delete': function () {\n    var CollectionName = ToyKit.get(\"Mongol_currentCollection\"),\n        sessionKey = \"Mongol_\" + String(this);\n    DocumentPosition = ToyKit.get(sessionKey), CurrentCollection = Mongol.Collection(CollectionName).find({}, {\n      transform: null\n    }).fetch(), CollectionCount = Mongol.Collection(CollectionName).find().count();\n    var CurrentDocument = CurrentCollection[DocumentPosition],\n        DocumentID = CurrentDocument._id;\n    Meteor.call('Mongol_remove', CollectionName, DocumentID, function (error, result) {\n      if (!error) {\n        // Log the action\n        if (ToyKit.shouldLog()) {\n          console.log(\"Removed \" + DocumentID + \" from \" + CollectionName + \". Back-up below:\");\n          console.log(CurrentDocument);\n        } // Adjust the position\n\n\n        if (DocumentPosition >= CollectionCount - 1) {\n          newPosition = DocumentPosition - 1;\n          ToyKit.set(sessionKey, newPosition);\n        }\n\n        if (ToyKit.get(sessionKey) === -1) {\n          ToyKit.set(sessionKey, 0);\n        }\n      } else {\n        Mongol.error(\"remove\");\n      }\n    });\n  },\n  'click .Mongol_m_right': function (e, t) {\n    // Disable inline editing for 0.3s for quick flick to next doc\n    Mongol.resetInlineEditingTimer();\n    var sessionKey = \"Mongol_\" + String(this);\n    var CurrentDocument = ToyKit.get(sessionKey);\n    var collectionName = String(this);\n    var collectionVar = Mongol.Collection(collectionName);\n    var collectionCount = collectionVar.find().count() - 1;\n\n    if (CurrentDocument > collectionCount) {\n      ToyKit.set(sessionKey, 0);\n      return;\n    }\n\n    if (collectionCount === CurrentDocument) {\n      // Go back to document 1 \n      ToyKit.set(sessionKey, 0);\n    } else {\n      // Go to next document\n      var MongolDocNumber = ToyKit.get(sessionKey) + 1;\n      ToyKit.set(sessionKey, MongolDocNumber);\n    }\n  },\n  'click .Mongol_m_left': function (e, t) {\n    // Disable inline editing for 0.3s for quick flick to next doc\n    Mongol.resetInlineEditingTimer();\n    sessionKey = \"Mongol_\" + String(this);\n    var CurrentDocument = ToyKit.get(sessionKey);\n    var collectionName = String(this);\n    var collectionVar = Mongol.Collection(collectionName);\n    var collectionCount = collectionVar.find().count() - 1;\n\n    if (CurrentDocument > collectionCount) {\n      ToyKit.set(sessionKey, collectionCount);\n      return;\n    }\n\n    if (ToyKit.get(sessionKey) === 0) {\n      ToyKit.set(sessionKey, collectionCount);\n    } else {\n      var MongolDocNumber = ToyKit.get(sessionKey) - 1;\n      ToyKit.set(sessionKey, MongolDocNumber);\n    }\n  },\n  'click .Mongol_edit_save': function () {\n    // Get current document to get its current state\n    // We need to send this to the server so we know which fields are up for change\n    // when applying the diffing algorithm\n    var collectionName = ToyKit.equals(\"Mongol_currentCollection\", \"account_618\") ? \"users\" : String(this);\n\n    if (ToyKit.equals(\"Mongol_currentCollection\", \"account_618\")) {\n      var newData = Mongol.getDocumentUpdate(\"account_618\");\n      var newObject = Mongol.parse(newData);\n      var oldObject = Meteor.user();\n    } else {\n      var sessionKey = \"Mongol_\" + collectionName;\n      DocumentPosition = ToyKit.get(sessionKey), CurrentCollection = Mongol.Collection(collectionName).find({}, {\n        transform: null\n      }).fetch();\n      var newData = Mongol.getDocumentUpdate(collectionName);\n      var newObject = Mongol.parse(newData);\n      var oldObject = CurrentCollection[DocumentPosition];\n    }\n\n    if (newObject) {\n      Meteor.call(\"Mongol_update\", collectionName, newObject, _validateDocument(oldObject), function (error, result) {\n        if (!error) {\n          ToyKit.set('Mongol_editMode', null);\n        } else {\n          Mongol.error('update');\n        }\n      });\n    }\n  },\n  'click .Mongol_edit_cancel': function () {\n    ToyKit.set('Mongol_editMode', null);\n  },\n  'click .Mongol_m_signout': function () {\n    Meteor.logout();\n    ToyKit.set(\"Mongol_currentCollection\", null);\n  }\n});\nTemplate.Mongol_docControls.helpers({\n  disable: function () {\n    var sessionKey = \"Mongol_\" + String(this);\n    var CurrentDocument = ToyKit.get(sessionKey);\n    var collectionName = String(this);\n    var collectionVar = Mongol.Collection(collectionName);\n    var collectionCount = collectionVar.find().count();\n\n    if (CurrentDocument >= 1) {\n      return;\n    }\n\n    if (collectionCount === 1) {\n      return \"MeteorToys_disabled\";\n    }\n  },\n  editing: function () {\n    var editing = ToyKit.get('Mongol_editMode');\n    return editing;\n  },\n  editing_class: function () {\n    var edit = ToyKit.get('Mongol_editMode');\n\n    if (edit) {\n      return \"Mongol_m_wrapper_expand\";\n    }\n  },\n  Mongol_docMenu_editing: function () {\n    var editMode = ToyKit.get(\"Mongol_editMode\");\n\n    if (editMode) {\n      return \"Mongol_docMenu_editing\";\n    }\n  },\n  active: function () {\n    var current = ToyKit.get(\"Mongol_currentCollection\"); // return true if collection name matches\n\n    if (current === String(this)) {\n      return true;\n    } // return true if it's a user account\n\n\n    if (current === \"account_618\") {\n      return true;\n    }\n  },\n  account: function () {\n    var currentCollection = ToyKit.get(\"Mongol_currentCollection\");\n\n    if (currentCollection === \"account_618\") {\n      return true;\n    } else {\n      return false;\n    }\n  }\n});","map":{"version":3,"sources":["packages/msavin:mongol/client/doc_controls/docControls.js"],"names":["ToyKit","module","link","v","Mongol","_validateDocument","doc","validatedDoc","Object","keys","forEach","val","key","inlineEditingTimer","resetInlineEditingTimer","Meteor","clearTimeout","set","setTimeout","Template","Mongol_docControls","events","CollectionName","get","DocumentPosition","String","CurrentCollection","collection","find","transform","fetch","CollectionCount","count","CurrentDocument","DocumentID","_id","sessionKey","ValidatedCurrentDocument","call","error","result","Collection","findOne","list","docID","currentDoc","docIndex","map","obj","index","Number","shouldLog","console","log","newPosition","e","t","collectionName","collectionVar","collectionCount","MongolDocNumber","equals","newData","getDocumentUpdate","newObject","parse","oldObject","user","logout","helpers","disable","editing","editing_class","edit","Mongol_docMenu_editing","editMode","active","current","account","currentCollection"],"mappings":"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","sourcesContent":["import { ToyKit } from \"meteor/meteortoys:toykit\"\nimport { Mongol } from \"../../lib/index.js\"\nimport \"./docControls.html\"\n\n// needs to be re-thought\n\n// Strip out functions in case documents have had methods added to them\n\nvar _validateDocument = function (doc) {\n\tvar validatedDoc = {};\n\treturn validatedDoc;\n\tObject.keys(doc).forEach(function (val, key) {\n\t\tif (typeof val === \"function\") {\n\t\t\treturn\n\t\t}\n\n\t\tvalidatedDoc[key] = val;\n\t})\n\t// _.each(doc, function (val, key) {\n\t//   if (_.isFunction(val)) {\n\t//     return;\n\t//   }\n\t//   validatedDoc[key] = val;\n\t// });\n\treturn validatedDoc;\n}\n\nMongol.inlineEditingTimer = null;\n\nMongol.resetInlineEditingTimer = function() {\n\tif (Mongol.inlineEditingTimer) {\n\tMeteor.clearTimeout(Mongol.inlineEditingTimer);\n\t}\n\tToyKit.set('Mongol_noInlineEditing', true);\n\tMongol.inlineEditingTimer = Meteor.setTimeout(function () {\n\t\tToyKit.set('Mongol_noInlineEditing', false);  \n\t},300);\n}\n\nTemplate.Mongol_docControls.events({\n\t'click .Mongol_m_new': function() {\n\n\t\tCollectionName    = ToyKit.get(\"Mongol_currentCollection\"),\n\t\tDocumentPosition  = ToyKit.get(\"Mongol_\" + String(this)),\n\t\tCurrentCollection = ToyKit.collection.get(CollectionName).find({}, {transform: null}).fetch(),\n\t\tCollectionCount   = ToyKit.collection.get(CollectionName).find().count(),\n\t\tCurrentDocument   = CurrentCollection[DocumentPosition],\n\t\tDocumentID        = CurrentDocument._id,\n\t\tsessionKey        = \"Mongol_\" + String(this),\n\t\tValidatedCurrentDocument = _validateDocument(CurrentDocument);\n\n\t\tMeteor.call(\"Mongol_duplicate\", CollectionName, DocumentID, function(error, result) {\n\t\t\tif (!error) {\n\n\t\t\t\tif (Mongol.Collection(CollectionName).findOne(result)) {\n\n\t\t\t\t\t// Get position of new document\n\t\t\t\t\tlist  = Mongol.Collection(CollectionName).find({}, {transform: null}).fetch(),\n\t\t\t\t\tdocID = result,\n\t\t\t\t\tcurrentDoc;\n\n\t\t\t\t\tdocIndex = list.map(function(obj, index) {\n\t\t\t\t\t\tif (obj._id === docID) {\n\t\t\t\t\t\t\tcurrentDoc = index;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\n\t\t\t\t\tToyKit.set(sessionKey, Number(currentDoc));\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tMongol.error(\"duplicate\");\n\t\t\t}\n\t\t});\n\n\n\n\t},\n\t'click .Mongol_m_edit': function() {\n\t\tToyKit.set(\"Mongol_editMode\", true);\n\t},\n\t'click .Mongol_m_delete': function() {\n\n\t\tvar CollectionName = ToyKit.get(\"Mongol_currentCollection\"),\n\t\t\tsessionKey = \"Mongol_\" + String(this);\n\t\tDocumentPosition = ToyKit.get(sessionKey),\n\t\t\tCurrentCollection = Mongol.Collection(CollectionName).find({}, {transform: null}).fetch(),\n\t\t\tCollectionCount = Mongol.Collection(CollectionName).find().count();\n\n\t\tvar CurrentDocument = CurrentCollection[DocumentPosition],\n\t\t\tDocumentID = CurrentDocument._id;\n\n\n\n\t\tMeteor.call('Mongol_remove', CollectionName, DocumentID, function(error, result) {\n\n\t\t\tif (!error) {\n\t\t\t\t// Log the action\n\t\t\t\tif (ToyKit.shouldLog()) {\n\t\t\t\t\tconsole.log(\"Removed \" + DocumentID + \" from \" + CollectionName + \". Back-up below:\");\n\t\t\t\t\tconsole.log(CurrentDocument);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t// Adjust the position\n\t\t\t\tif (DocumentPosition >= CollectionCount - 1) {\n\t\t\t\t\tnewPosition = DocumentPosition - 1;\n\t\t\t\t\tToyKit.set(sessionKey, newPosition);\n\t\t\t\t}\n\n\t\t\t\tif (ToyKit.get(sessionKey) === -1) {\n\t\t\t\t\tToyKit.set(sessionKey, 0);\n\t\t\t\t}\n\n\n\t\t\t} else {\n\t\t\t\tMongol.error(\"remove\");\n\t\t\t}\n\n\t\t});\n\n\n\n\t},\n\t'click .Mongol_m_right': function(e,t) {\n\t\t// Disable inline editing for 0.3s for quick flick to next doc\n\t\tMongol.resetInlineEditingTimer();\n\t\n\t\tvar sessionKey = \"Mongol_\" + String(this);\n\t\tvar CurrentDocument = ToyKit.get(sessionKey);\n\t\tvar collectionName = String(this);\n\t\tvar collectionVar = Mongol.Collection(collectionName);\n\t\tvar collectionCount = collectionVar.find().count() - 1;\n\n\t\tif (CurrentDocument > collectionCount) {\n\t\t\tToyKit.set(sessionKey, 0)\n\t\t\treturn;\n\t\t}\n\n\t\tif (collectionCount === CurrentDocument) {\n\t\t\t// Go back to document 1 \n\t\t\tToyKit.set(sessionKey, 0);\n\t\t} else {\n\t\t\t// Go to next document\n\t\t\tvar MongolDocNumber = ToyKit.get(sessionKey) + 1;\n\t\t\tToyKit.set(sessionKey, MongolDocNumber);\n\t\t}\n\t},\n\t'click .Mongol_m_left': function(e,t) {\n\t\t// Disable inline editing for 0.3s for quick flick to next doc\n\t\tMongol.resetInlineEditingTimer();\n\t\t\n\t\tsessionKey = \"Mongol_\" + String(this);\n\n\t\tvar CurrentDocument = ToyKit.get(sessionKey);\n\t\tvar collectionName  = String(this);\n\t\tvar collectionVar   = Mongol.Collection(collectionName);\n\t\tvar collectionCount = collectionVar.find().count() - 1;\n\n\t\tif (CurrentDocument > collectionCount) {\n\t\t\tToyKit.set(sessionKey, collectionCount)\n\t\t\treturn;\n\t\t}\n\n\t\tif (ToyKit.get(sessionKey) === 0) {\n\t\t\tToyKit.set(sessionKey, collectionCount)\n\t\t} else {\n\t\t\tvar MongolDocNumber = ToyKit.get(sessionKey) - 1;\n\t\t\tToyKit.set(sessionKey, MongolDocNumber);\n\t\t}\n\t},\n\t'click .Mongol_edit_save': function() {\n\n\t\t// Get current document to get its current state\n\t\t// We need to send this to the server so we know which fields are up for change\n\t\t// when applying the diffing algorithm\n\n\t\tvar collectionName = (ToyKit.equals(\"Mongol_currentCollection\", \"account_618\")) ? \"users\" : String(this);\n\n\t\tif (ToyKit.equals(\"Mongol_currentCollection\", \"account_618\")) {\n\t\t\tvar newData = Mongol.getDocumentUpdate(\"account_618\");\n\t\t\tvar newObject = Mongol.parse(newData);\n\t\t\tvar oldObject = Meteor.user();\n\t\t} else {\n\t\t\tvar sessionKey = \"Mongol_\" + collectionName;\n\t\t\tDocumentPosition = ToyKit.get(sessionKey),\n\t\t\tCurrentCollection = Mongol.Collection(collectionName).find({}, {transform: null}).fetch();\n\t\t\tvar newData =   Mongol.getDocumentUpdate(collectionName);\n\t\t\tvar newObject = Mongol.parse(newData);\n\t\t\tvar oldObject = CurrentCollection[DocumentPosition];\n\t\t}\n\t\t\n\t\tif (newObject) {\n\t\t\tMeteor.call(\"Mongol_update\", collectionName, newObject, _validateDocument(oldObject), function(error, result) {\n\t\t\t\tif (!error) {\n\t\t\t\t\tToyKit.set('Mongol_editMode', null);\n\t\t\t\t} else {\n\t\t\t\t\tMongol.error('update')\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t},\n\t'click .Mongol_edit_cancel': function() {\n\t\tToyKit.set('Mongol_editMode', null);\n\t},\n\t'click .Mongol_m_signout': function() {\n\t\tMeteor.logout();\n\t\tToyKit.set(\"Mongol_currentCollection\", null);\n\t},\n});\n\n\nTemplate.Mongol_docControls.helpers({\n\tdisable: function() {\n\t\tvar sessionKey = \"Mongol_\" + String(this);\n\t\tvar CurrentDocument = ToyKit.get(sessionKey);\n\t\tvar collectionName = String(this);\n\t\tvar collectionVar = Mongol.Collection(collectionName);\n\t\tvar collectionCount = collectionVar.find().count();\n\n\t\tif (CurrentDocument >= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (collectionCount === 1) {\n\t\t\treturn \"MeteorToys_disabled\";\n\t\t}\n\t},\n\tediting: function() {\n\t\tvar editing = ToyKit.get('Mongol_editMode');\n\t\treturn editing;\n\t},\n\tediting_class: function() {\n\t\tvar edit = ToyKit.get('Mongol_editMode');\n\t\tif (edit) {\n\t\t\treturn \"Mongol_m_wrapper_expand\"\n\t\t}\n\t},\n\tMongol_docMenu_editing: function() {\n\t\tvar editMode = ToyKit.get(\"Mongol_editMode\");\n\n\t\tif (editMode) {\n\t\t\treturn \"Mongol_docMenu_editing\";\n\t\t}\n\n\t},\n\tactive: function() {\n\t\tvar current = ToyKit.get(\"Mongol_currentCollection\");\n\n\t\t// return true if collection name matches\n\t\tif (current === String(this)) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// return true if it's a user account\n\t\tif (current === \"account_618\") {\n\t\t\treturn true;\n\t\t}\n\t},\n\taccount: function() {\n\t\tvar currentCollection = ToyKit.get(\"Mongol_currentCollection\");\n\n\t\tif (currentCollection === \"account_618\") {\n\t\t\treturn true\n\t\t} else {\n\t\t\treturn false\n\t\t}\n\t},\n});"]},"sourceType":"module","hash":"8c1bb20d38d6d1dcec030540233f43a66b585735"}
