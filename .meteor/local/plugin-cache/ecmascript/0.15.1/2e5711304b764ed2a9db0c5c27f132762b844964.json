{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/server/core/properties.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"server/core/properties.js","filename":"/home/momen/projects/spotmycrib-master/server/core/properties.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/server/core/properties.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/core/properties.js"}},"code":"let check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\n// import TokenGen from 'token-gen';\nMeteor.methods({\n  archiveProperty: function (propertyId) {\n    check(propertyId, String);\n    console.log(\"server method archiveProperty called\");\n    console.log(propertyId);\n    const userId = Meteor.userId();\n    console.log(userId);\n    if (!userId) throw new Meteor.Error('not-authorized');\n    const property = Collections.Properties.findOne({\n      _id: propertyId\n    });\n    if (!property) throw new Meteor.Error('Invalid property');\n    if (property.createdByAgent != userId) throw new Meteor.Error('Invalid user'); //PROPERTY BELONGS TO THIS AGENT\n\n    if (property.auctionId) {\n      //if it has an active auction\n      Meteor.call('deactivateAuction', property.auctionId, function (error, result) {\n        if (error) {\n          throw new Meteor.Error(400, \"Deactivation Failed\");\n        }\n      });\n    }\n\n    Collections.Properties.update(propertyId, {\n      $set: {\n        \"isArchived\": true\n      }\n    });\n  },\n  editProperty: function (propertyId, data) {\n    console.log(\"common method editProperty called\");\n    const userId = Meteor.userId();\n    console.log(userId);\n    if (!userId) throw new Meteor.Error('not-authorized');\n    var property = Collections.Properties.findOne(propertyId);\n    if (property.createdByAgent != userId) throw new Meteor.Error('not-authorized'); // Its not your property\n\n    var price = getA(data, 'price');\n\n    if (price) {\n      var tmpP = price.split('.');\n      tmpP = tmpP[0]; //No decimals\n\n      price = tmpP.trim().match(/\\d+/g).join('');\n    }\n\n    if (!price) price = 0; // console.log('price is: '+price)\n    // console.log('parsed price is: '+parseInt(price))\n\n    var rentMonthly = parseFloat(price);\n    if (getA(data, 'type') == 'weekly') rentMonthly = parseFloat(rentMonthly / 7 * 30); // Month has 30 days\n\n    var doc = {\n      \"address\": {\n        \"address\": getA(data, 'address.address'),\n        \"county\": getA(data, 'address.county'),\n        \"area\": getA(data, 'address.area'),\n        \"country\": \"Ireland\"\n      },\n      \"rent\": parseInt(price),\n      \"rentMonthly\": rentMonthly,\n      \"type\": getA(data, 'type'),\n      \"baths\": parseInt(getA(data, 'baths')),\n      \"furnished\": getA(data, 'furnished') == \"true\" ? true : false,\n      \"contacts\": [{\n        \"name\": getA(data, 'contacts.0.name'),\n        \"phone\": getA(data, 'contacts.0.phone'),\n        \"email\": getA(data, 'contacts.0.email')\n      }],\n      \"about\": getA(data, 'about'),\n      \"amenities\": getA(data, 'amenities'),\n      \"createdByAgent\": userId,\n      \"updatedAt\": new Date()\n    }; // {name: \"bedrooms.0.ensuite\", value: \"on\"}\n    // 8\n    // :\n    // {name: \"bedrooms.0.bedType\", value: \"single\"}\n    // \"bedrooms\" : [\n    //     {\n    //         \"bedType\" : \"double\",\n    //         \"ensuite\" : true\n    //     },\n    //     {\n    //         \"bedType\" : \"single\",\n    //         \"ensuite\" : false\n    //     }\n    // ],\n\n    var numBedRoomCount = getA(data, 'numBedRoomCount');\n\n    if (numBedRoomCount) {\n      var bedrooms = [];\n\n      for (var i = 0; i < numBedRoomCount; i++) {\n        var bne = \"bedrooms.\" + i + \".ensuite\";\n        var bnt = \"bedrooms.\" + i + \".bedType\";\n        var tmp = {};\n        if (getA(data, bne)) tmp.ensuite = true;else tmp.ensuite = false;\n        tmp.bedType = getA(data, bnt);\n        bedrooms.push(tmp);\n      }\n\n      doc['bedrooms'] = bedrooms;\n      doc['bedCount'] = bedrooms.length;\n    } else {\n      doc['bedrooms'] = [];\n      doc['bedCount'] = '1'; //default 1\n    } // console.log('before');\n    // console.log(doc);\n    // console.log('after');\n    // debugger;\n    // Collections.Properties.update(propertyId,{\n    //     $set:{\n    //         contacts:[],\n    //         bedrooms:[]\n    //     }\n    // });//commeted due to point: editProperty server method has 2 updates one after another - not needed, below code will replace anyways.\n\n\n    Collections.Properties.update(propertyId, {\n      $set: doc\n    }); ////////ADVERTISE FORM DATA\n\n    var advertiseFormActive = getA(data, 'advertiseFormActive');\n\n    if (advertiseFormActive == 'yes') {\n      console.log(\"common method editProperty - editAdvertisement section\");\n      var lease = getA(data, 'lease');\n      var allowedLease = ['1 month', '2 months', '3 months', '4 months', '5  months', '6 months', '7 months', '8 months', '9 months', '10 months', '11 months', '1 year', 'More than a year'];\n      if (!lease || allowedLease.indexOf(lease) == -1) lease = 'More than a year';\n      var rentType = getA(data, 'rentType');\n      var allowedRentType = ['weekly', 'monthly', 'other'];\n      if (!rentType || allowedRentType.indexOf(rentType) == -1) rentType = 'monthly';\n      var currency = getA(data, 'currency');\n      var allowedCurrencies = [\"EUR\", \"POUND\", \"USD\"];\n      if (!currency || allowedCurrencies.indexOf(currency) == -1) currency = \"EUR\";\n      var readyFrom = getA(data, 'readyFrom');\n      if (!readyFrom) readyFrom = new Date(moment().add(1, 'days').startOf('day'));\n      if (readyFrom < new Date(moment().add(1, 'days').startOf('day'))) readyFrom = new Date(moment().add(1, 'days').startOf('day'));\n      var adDoc = {\n        \"price\": parseInt(price),\n        \"currency\": currency,\n        \"readyFrom\": readyFrom,\n        \"lease\": lease,\n        \"rentType\": rentType,\n        \"updatedAt\": new Date()\n      };\n\n      if (getA(data, 'advertContacts.0.name') || getA(data, 'advertContacts.0.phone') || getA(data, 'advertContacts.0.email')) {\n        adDoc['contacts'] = [{\n          \"name\": getA(data, 'advertContacts.0.name'),\n          \"phone\": getA(data, 'advertContacts.0.phone'),\n          \"email\": getA(data, 'advertContacts.0.email')\n        }];\n      }\n\n      Collections.Auctions.update(property.auctionId, {\n        $set: adDoc\n      });\n    } //End of auctions\n\n  },\n  updateGalleries: function (args) {\n    console.log(args); // check(args, [String, [null]]);\n\n    var propertyId = args[0];\n    var galleries = args[1];\n    console.log(\"server method updateGalleries called\");\n\n    if (!Meteor.userId()) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    const property = Collections.Properties.findOne({\n      _id: propertyId\n    });\n    const userId = Meteor.userId(); // console.log(userId)\n    //console.log(bidId)\n\n    if (!property) throw new Meteor.Error('Invalid property');\n    if (property.createdByAgent != userId) throw new Meteor.Error('Invalid user'); //PROPERTY BELONGS TO THIS AGENT\n\n    console.log(galleries);\n    Collections.Properties.update(propertyId, {\n      $set: {\n        \"gallery\": galleries\n      }\n    });\n    return {\n      status: 'success'\n    };\n  },\n  updateGalleriesInUserProfile: function (galleries) {\n    // console.log(galleries);\n    console.log(\"server method updateGalleriesInUserProfile called\");\n    const userId = Meteor.userId();\n    if (!userId) throw new Meteor.Error('not-authorized'); // console.log(galleries);\n\n    Meteor.users.update(userId, {\n      $set: {\n        \"profile.session.addproperty.gallery\": galleries\n      }\n    });\n    return {\n      status: 'success'\n    };\n  },\n  addAuction: function (auctionId) {\n    check(auctionId, String);\n    console.log(\"server method addAuction called\");\n    console.log(auctionId);\n    const userId = Meteor.userId();\n    console.log(userId);\n\n    if (!userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    const auction = Collections.Auctions.findOne(auctionId);\n    if (!auction) throw new Meteor.Error('Invalid auction');\n    const property = Collections.Properties.findOne({\n      _id: auction.propertyId\n    });\n    if (!property) throw new Meteor.Error('Invalid property'); // if(property.auctionId)throw new Meteor.Error('Property already has an auction ID');//NOT NEEDED, LET IT REWRITE\n\n    if (property.createdByAgent != userId) throw new Meteor.Error('Invalid user'); //PROPERTY BELONGS TO THIS AGENT\n\n    var rentMonthly = parseFloat(auction.price);\n    if (auction.rentType == 'weekly') rentMonthly = parseFloat(rentMonthly / 7 * 30); // Month has 30 days\n\n    Collections.Properties.update(auction.propertyId, {\n      $set: {\n        \"auctionId\": auction._id,\n        \"rent\": parseInt(auction.price),\n        \"rentMonthly\": rentMonthly\n      }\n    }); // var TokenGen = require('token-gen');\n    // var auctionCode = TokenGen();\n    // console.log(auctionCode);\n    // auctionCode = auctionCode.toString()\n    // console.log(auctionCode);\n    //\n    // Collections.Auctions.update(auctionId, {\n    //     $set: {\n    //         \"lettingAuctionCode\": auctionCode\n    //     }\n    // });\n\n    const user = Meteor.user();\n    if (!user.profile.activeAuctions) user.profile.activeAuctions = 0;\n    if (!user.profile.totalAuctions) user.profile.totalAuctions = 0;\n    user.profile.activeAuctions++;\n    user.profile.totalAuctions++;\n    Meteor.users.update(userId, {\n      $set: {\n        \"profile.activeAuctions\": user.profile.activeAuctions,\n        \"profile.totalAuctions\": user.profile.totalAuctions\n      }\n    });\n    Meteor.call('addActivityHistory', {\n      propertyId: auction.propertyId,\n      auctionId: auction._id,\n      type: 'prop_activation',\n      activated: true\n    });\n    return {\n      status: 'success'\n    };\n  },\n  addAdvertisement: function (data, pid) {\n    let TokenGen;\n    module.link(\"token-gen\", {\n      default(v) {\n        TokenGen = v;\n      }\n\n    }, 1);\n    // check(auctionId, String);\n    console.log(\"server method addAdvertisement called\");\n    const userId = Meteor.userId();\n    console.log(userId);\n\n    if (!userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    var propertyId = getA(data, 'propertyId');\n    if (!propertyId && pid) propertyId = pid;\n\n    if (!propertyId) {\n      throw new Meteor.Error('Invalid property ID key. Aborting.');\n      return;\n    }\n\n    const property = Collections.Properties.findOne({\n      _id: propertyId\n    });\n    if (!property) throw new Meteor.Error('Invalid property');\n    if (property.createdByAgent != userId) throw new Meteor.Error('Invalid user'); //PROPERTY BELONGS TO THIS AGENT\n\n    var price = getA(data, 'price');\n\n    if (price) {\n      var tmpP = price.split('.');\n      tmpP = tmpP[0]; //No decimals\n\n      price = tmpP.trim().match(/\\d+/g).join('');\n    }\n\n    if (!price) price = 0;\n    var lease = getA(data, 'lease');\n    var allowedLease = ['1 month', '2 months', '3 months', '4 months', '5  months', '6 months', '7 months', '8 months', '9 months', '10 months', '11 months', '1 year', 'More than a year'];\n    if (!lease || allowedLease.indexOf(lease) == -1) lease = 'More than a year';\n    var rentType = getA(data, 'rentType');\n    var allowedRentType = ['weekly', 'monthly', 'other'];\n    if (!rentType || allowedRentType.indexOf(rentType) == -1) rentType = 'monthly';\n    var currency = getA(data, 'currency');\n    var allowedCurrencies = [\"EUR\", \"POUND\", \"USD\"];\n    if (!currency || allowedCurrencies.indexOf(currency) == -1) currency = \"EUR\";\n    var readyFrom = getA(data, 'readyFrom');\n    if (!readyFrom) readyFrom = new Date(moment().add(1, 'days').startOf('day'));\n    if (readyFrom < new Date(moment().add(1, 'days').startOf('day'))) readyFrom = new Date(moment().add(1, 'days').startOf('day'));\n    var rentMonthly = parseFloat(price);\n    if (rentType == 'weekly') rentMonthly = parseFloat(rentMonthly / 7 * 30); // Month has 30 days\n\n    var doc = {\n      \"propertyId\": propertyId,\n      \"price\": parseInt(price),\n      \"rentMonthly\": rentMonthly,\n      \"createdByAgent\": userId,\n      \"isArchived\": false,\n      \"auctionBidProfit\": 0,\n      \"currency\": currency,\n      \"readyFrom\": readyFrom,\n      \"lease\": lease,\n      \"rentType\": rentType,\n      \"views\": 0,\n      \"bids\": 0,\n      \"enquiryCount\": 0,\n      \"createdByAgent\": userId,\n      \"createdAt\": new Date(),\n      \"updatedAt\": new Date()\n    };\n\n    if (getA(data, 'contacts.0.name') || getA(data, 'contacts.0.phone') || getA(data, 'contacts.0.email')) {\n      doc['contacts'] = [{\n        \"name\": getA(data, 'contacts.0.name'),\n        \"phone\": getA(data, 'contacts.0.phone'),\n        \"email\": getA(data, 'contacts.0.email')\n      }];\n    }\n\n    var auctionCode = TokenGen();\n    var key = auctionCode.toString();\n    var auc = Collections.Auctions.findOne({\n      \"lettingAuctionCode\": key\n    });\n    var i = 0;\n\n    while (auc) {\n      // it should be undefined, else loop\n      auctionCode = TokenGen();\n      key = auctionCode.toString();\n      auc = Collections.Auctions.findOne({\n        \"lettingAuctionCode\": key\n      });\n\n      if (1 > 10000) {\n        throw new Meteor.Error('Couldnt generate property key. Aborting.');\n        return;\n      }\n\n      i++;\n    }\n\n    if (auctionCode) {\n      doc['lettingAuctionCode'] = key;\n    } // console.log(doc);\n\n\n    var auctionId = Collections.Auctions.insert(doc); // return 'as';\n    // const auction = Collections.Auctions.findOne(auctionId);\n\n    const auction = doc;\n    Collections.Properties.update(propertyId, {\n      $set: {\n        \"auctionId\": auctionId,\n        \"rent\": parseInt(price),\n        \"rentMonthly\": rentMonthly\n      }\n    });\n    const user = Meteor.user();\n    if (!user.profile.activeAuctions) user.profile.activeAuctions = 0;\n    if (!user.profile.totalAuctions) user.profile.totalAuctions = 0;\n    user.profile.activeAuctions++;\n    user.profile.totalAuctions++;\n    Meteor.users.update(userId, {\n      $set: {\n        \"profile.activeAuctions\": user.profile.activeAuctions,\n        \"profile.totalAuctions\": user.profile.totalAuctions\n      }\n    });\n    Meteor.call('addActivityHistory', {\n      propertyId: auction.propertyId,\n      auctionId: auction._id,\n      type: 'prop_activation',\n      activated: true\n    });\n    var sub = 'Property added: ' + user.profile.name;\n    var desc = \"\\nProperty ID: \" + auction.propertyId + \"<br/>\\nProperty Key: \" + auction.lettingAuctionCode + \"<br/>\\nProperty Link: <a href=\\\"https://www.spotmycrib.ie/letting/\" + auction.lettingAuctionCode + \"\\\">Link</a><br/>\\nProperty Link New: <a href=\\\"https://www.spotmycrib.ie/rent/\" + property.slug + '/' + auction.lettingAuctionCode + \"\\\">Link New</a><br/>\\n\";\n    Meteor.call('notifyAdmin', sub, desc);\n    return auctionId;\n  },\n  chooseWinning: function (args) {\n    auctionId = args[0];\n    bidId = args[1];\n    check(auctionId, String);\n    check(bidId, String);\n    console.log(\"server method chooseWinning called\");\n    const agent = Meteor.user(); // console.log(agent._id);\n\n    if (!agent._id) throw new Meteor.Error('not-authorized');\n    const auction = Collections.Auctions.findOne(auctionId);\n    if (!auction) throw new Meteor.Error('Invalid auction');\n    const bid = Collections.Bids.findOne(bidId, {\n      transform: function (doc) {\n        doc.user = Meteor.users.findOne(doc.userId);\n        return doc;\n      }\n    });\n    if (!bid) throw new Meteor.Error('Invalid bid');\n    if (bid.isArchived) throw new Meteor.Error('This application is withdrawn by the user. Please choose another application.');\n    const user = bid.user;\n    if (!user._id) throw new Meteor.Error('User not found');\n    const property = Collections.Properties.findOne({\n      _id: auction.propertyId\n    });\n    if (!property) throw new Meteor.Error('Invalid property');\n    if (property.createdByAgent != agent._id) throw new Meteor.Error('Invalid user'); //PROPERTY BELONGS TO THIS AGENT CHECK\n    ///////DONE WITH ALL THE CHECKS\n\n    var chosenBids = [];\n    var formattedBid = {};\n\n    if (auction.chosenBids) {\n      chosenBids = auction.chosenBids;\n\n      for (var a = 0; a < auction.chosenBids.length; a++) {\n        if (auction.chosenBids[a].bidId == bid._id) {\n          throw new Meteor.Error('This application is already chosen');\n        } //Already in chosen\n\n      }\n    }\n\n    formattedBid = {\n      bidId: bid._id,\n      chosenOn: new Date()\n    };\n    chosenBids.unshift(formattedBid);\n    console.log('chosenBids');\n    console.log(chosenBids);\n    Collections.Auctions.update(auction._id, {\n      $set: {\n        chosenBids: chosenBids\n      }\n    });\n    Collections.Bids.update(bid._id, {\n      $set: {\n        chosen: true\n      }\n    }); //////////// CODE TO COPY ALL REFERENCES\n\n    var bids = Collections.Bids.find({\n      auctionId: auction._id,\n      isArchived: false\n    }, {\n      transform: function (doc) {\n        doc.user = Meteor.users.findOne(doc.userId);\n        return doc;\n      }\n    }).fetch();\n\n    for (var i = 0; i < bids.length; i++) {\n      //Everytime you click on choose, this field gets refreshed.\n      Collections.Bids.update(bids[i]._id, {\n        $set: {\n          references: bids[i].user.profile.references // isArchived: true//Bid archive is used for bid deletion, so don't archive\n\n        }\n      });\n    } //////////// SEND MAIL to winning user\n\n\n    property.type = titleCase(property.type);\n    property.address.address = titleCase(property.address.address);\n    property.address.area = titleCase(property.address.area);\n    property.address.county = titleCase(property.address.county);\n    var mailData = {\n      template: 'applicationWon',\n      subject: \"Application Won\",\n      mailTo: bid.user.profile.email,\n      replyTo: agent.profile.email,\n      //mailTo: 'srikanth681@gmail.com',\n      homepage: Meteor.absoluteUrl(),\n      application: bid,\n      auction: auction,\n      project: property,\n      user: user,\n      agentName: agent.profile.name,\n      agentEmail: agent.profile.email,\n      bedsCount: property.bedrooms.length,\n      offerFormated: numDifferentiation(bid.yourBid),\n      rentFormated: numDifferentiation(auction.price)\n    };\n    Meteor.call('sendNotificationEmail', mailData); // Meteor.call('deactivateAuction', auctionId);\n  },\n  unChooseWinning: function (args) {\n    auctionId = args[0];\n    bidId = args[1];\n    check(auctionId, String);\n    check(bidId, String);\n    console.log(\"server method unChooseWinning called\");\n    const agent = Meteor.user(); // console.log(agent._id);\n\n    if (!agent._id) throw new Meteor.Error('not-authorized');\n    const auction = Collections.Auctions.findOne(auctionId);\n    if (!auction) throw new Meteor.Error('Invalid auction');\n    const bid = Collections.Bids.findOne(bidId, {\n      transform: function (doc) {\n        doc.user = Meteor.users.findOne(doc.userId);\n        return doc;\n      }\n    });\n    if (!bid) throw new Meteor.Error('Invalid bid');\n    if (bid.isArchived) throw new Meteor.Error('This application is withdrawn by the user. Please choose another application.');\n    const user = bid.user;\n    if (!user._id) throw new Meteor.Error('User not found');\n    const property = Collections.Properties.findOne({\n      _id: auction.propertyId\n    });\n    if (!property) throw new Meteor.Error('Invalid property');\n    if (property.createdByAgent != agent._id) throw new Meteor.Error('Invalid user'); //PROPERTY BELONGS TO THIS AGENT CHECK\n    ///////DONE WITH ALL THE CHECKS\n\n    var chosenBids = [];\n    var formattedBid = {};\n    if (!auction.chosenBids) throw new Meteor.Error('You need to chose an application first.');\n    if (!auction.chosenBids.length) throw new Meteor.Error('You need to chose an application first.');\n    chosenBids = auction.chosenBids;\n    var found = false;\n\n    for (var a = 0; a < chosenBids.length; a++) {\n      if (chosenBids[a].bidId == bid._id) {\n        found = true;\n        chosenBids.splice(a, 1);\n      } //Already in chosen\n\n    }\n\n    if (!found) throw new Meteor.Error('You need to chose an application first.'); // console.log('chosenBids');\n    // console.log(chosenBids);\n\n    Collections.Auctions.update(auction._id, {\n      $set: {\n        chosenBids: chosenBids\n      }\n    });\n    Collections.Bids.update(bid._id, {\n      $set: {\n        chosen: false\n      }\n    }); //////////// CODE TO COPY ALL REFERENCES\n\n    var bids = Collections.Bids.find({\n      auctionId: auction._id,\n      isArchived: false\n    }, {\n      transform: function (doc) {\n        doc.user = Meteor.users.findOne(doc.userId);\n        return doc;\n      }\n    }).fetch();\n\n    for (var i = 0; i < bids.length; i++) {\n      //Everytime you click on choose, this field gets refreshed.\n      Collections.Bids.update(bids[i]._id, {\n        $set: {\n          references: bids[i].user.profile.references // isArchived: true//Bid archive is used for bid deletion, so don't archive\n\n        }\n      });\n    } //////////// SEND MAIL to winning user\n\n\n    property.type = titleCase(property.type);\n    property.address.address = titleCase(property.address.address);\n    property.address.area = titleCase(property.address.area);\n    property.address.county = titleCase(property.address.county);\n    var mailData = {\n      template: 'applicationPending',\n      subject: \"Application Pending\",\n      mailTo: bid.user.profile.email,\n      replyTo: agent.profile.email,\n      //mailTo: 'srikanth681@gmail.com',\n      homepage: Meteor.absoluteUrl(),\n      application: bid,\n      auction: auction,\n      project: property,\n      user: user,\n      agentName: agent.profile.name,\n      agentEmail: agent.profile.email,\n      bedsCount: property.bedrooms.length,\n      offerFormated: numDifferentiation(bid.yourBid),\n      rentFormated: numDifferentiation(auction.price)\n    };\n    Meteor.call('sendNotificationEmail', mailData); // Meteor.call('deactivateAuction', auctionId);\n  },\n  markChosen: function (args) {\n    bidId = args[0];\n    check(bidId, String);\n    console.log(\"server method markChosen called\");\n    const agent = Meteor.user(); // console.log(agent._id);\n\n    if (!agent._id) throw new Meteor.Error('not-authorized');\n    const bid = Collections.Bids.findOne(bidId, {\n      transform: function (doc) {\n        doc.auction = Collections.Auctions.findOne(doc.auctionId);\n        return doc;\n      }\n    });\n    if (!bid) throw new Meteor.Error('Invalid bid');\n    if (bid.isArchived) throw new Meteor.Error('This application is withdrawn by the user. Please choose another application.');\n    var auction = bid.auction;\n    if (!bid.auction) throw new Meteor.Error('Invalid auction');\n    if (bid.auction.createdByAgent != agent._id) throw new Meteor.Error('Invalid property owner. '); //PROPERTY BELONGS TO THIS AGENT CHECK\n\n    Collections.Bids.update(bidId, {\n      $set: {\n        chosen: false\n      }\n    });\n  },\n  unMarkChosen: function (args) {\n    bidId = args[0];\n    check(bidId, String);\n    console.log(\"server method unMarkChosen called\");\n    const agent = Meteor.user(); // console.log(agent._id);\n\n    if (!agent._id) throw new Meteor.Error('not-authorized');\n    const bid = Collections.Bids.findOne(bidId, {\n      transform: function (doc) {\n        doc.auction = Collections.Auctions.findOne(doc.auctionId);\n        return doc;\n      }\n    });\n    if (!bid) throw new Meteor.Error('Invalid bid');\n    if (bid.isArchived) throw new Meteor.Error('This application is withdrawn by the user. Please choose another application.');\n    var auction = bid.auction;\n    if (!bid.auction) throw new Meteor.Error('Invalid auction');\n    if (bid.auction.createdByAgent != agent._id) throw new Meteor.Error('Invalid property owner. '); //PROPERTY BELONGS TO THIS AGENT CHECK\n\n    Collections.Bids.update(bidId, {\n      $set: {\n        chosen: false\n      }\n    });\n  },\n  deactivateAuction: function (auctionId) {\n    check(auctionId, String);\n    console.log(\"server method deactivateAuction called\");\n    console.log(auctionId);\n    const userId = Meteor.userId();\n    console.log(userId);\n\n    if (!userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    const auction = Collections.Auctions.findOne(auctionId);\n    if (!auction) throw new Meteor.Error('Invalid auction');\n    const property = Collections.Properties.findOne({\n      _id: auction.propertyId\n    });\n    if (!property) throw new Meteor.Error('Invalid property');\n    if (property.createdByAgent != userId) throw new Meteor.Error('Invalid user'); //PROPERTY BELONGS TO THIS AGENT\n\n    var auctionHistory = property.auctionHistory;\n    if (!auctionHistory) auctionHistory = [];\n    auctionHistory.push({\n      auctionId: property.auctionId,\n      deactivatedOn: new Date()\n    });\n    Collections.Properties.update(auction.propertyId, {\n      $set: {\n        \"auctionId\": \"\",\n        \"rent\": \"\",\n        \"auctionHistory\": auctionHistory\n      }\n    });\n    Collections.Auctions.update(auction._id, {\n      $set: {\n        \"isArchived\": true,\n        \"endDate\": new Date()\n      }\n    });\n    var bidCount = Collections.Bids.find({\n      auctionId: auction._id\n    }).count();\n\n    if (bidCount) {\n      //Non zero\n      Collections.Bids.update({\n        auctionId: auction._id\n      }, {\n        $set: {\n          \"isArchived\": true,\n          \"endDate\": new Date()\n        }\n      });\n    }\n\n    const user = Meteor.user();\n    if (!auction.auctionBidProfit) auction.auctionBidProfit = 0;\n    if (!user.profile.bidProfitActive) user.profile.bidProfitActive = 0;\n    if (!user.profile.activeAuctions) user.profile.activeAuctions = 0;\n    if (!user.profile.bidsReceivedActiveAuctions) user.profile.bidsReceivedActiveAuctions = 0;\n    user.profile.activeAuctions--;\n    user.profile.bidsReceivedActiveAuctions -= bidCount;\n    user.profile.bidProfitActive -= auction.auctionBidProfit;\n    if (user.profile.activeAuctions < 0) user.profile.activeAuctions = 0;\n    if (user.profile.bidsReceivedActiveAuctions < 0) user.profile.bidsReceivedActiveAuctions = 0;\n    if (user.profile.bidProfitActive < 0) user.profile.bidProfitActive = 0;\n    Meteor.users.update(userId, {\n      $set: {\n        \"profile.activeAuctions\": user.profile.activeAuctions,\n        \"profile.bidsReceivedActiveAuctions\": user.profile.bidsReceivedActiveAuctions,\n        \"profile.bidProfitActive\": user.profile.bidProfitActive\n      }\n    });\n    Meteor.call('addActivityHistory', {\n      propertyId: auction.propertyId,\n      auctionId: auction._id,\n      type: 'prop_deactivation',\n      activated: false\n    });\n    return {\n      status: 'success'\n    };\n  },\n  deactivateAuctionMulti: function (propIds) {\n    // check(auctionId, String);\n    console.log(\"server method deactivateAuctionMulti called\");\n    let propId = '',\n        successCount = 0,\n        deactivatedProps = [];\n\n    for (let i = 0; i < propIds.length; i++) {\n      propId = propIds[i];\n      console.log('propId is: ' + propId);\n      const auction = Collections.Auctions.findOne({\n        propertyId: propId,\n        isArchived: false\n      }); //Dont get already archived props\n\n      if (!auction) continue;\n      const property = Collections.Properties.findOne(propId);\n      if (!property) continue;\n      var auctionHistory = property.auctionHistory;\n      if (!auctionHistory) auctionHistory = [];\n      auctionHistory.push({\n        auctionId: property.auctionId,\n        deactivatedOn: new Date()\n      });\n      console.log('auctionHistory done ' + auction._id);\n      Collections.Properties.update(auction.propertyId, {\n        $set: {\n          \"auctionId\": \"\",\n          \"rent\": \"\",\n          \"auctionHistory\": auctionHistory\n        }\n      });\n      console.log('Properties update done ' + auction.propertyId);\n      Collections.Auctions.update(auction._id, {\n        $set: {\n          \"isArchived\": true,\n          \"endDate\": new Date()\n        }\n      });\n      var bidCount = Collections.Bids.find({\n        auctionId: auction._id\n      }).count();\n\n      if (bidCount) {\n        //Non zero\n        Collections.Bids.update({\n          auctionId: auction._id\n        }, {\n          $set: {\n            \"isArchived\": true,\n            \"endDate\": new Date()\n          }\n        });\n      }\n\n      console.log('bidCount done ' + bidCount);\n      const userId = property.createdByAgent;\n      const user = Meteor.users.findOne({\n        _id: userId\n      });\n      if (!auction.auctionBidProfit) auction.auctionBidProfit = 0;\n\n      if (user) {\n        // in Dev with all users deleted, below code would fail, so adding this if condition. \n        if (!user.profile.bidProfitActive) user.profile.bidProfitActive = 0;\n        if (!user.profile.activeAuctions) user.profile.activeAuctions = 0;\n        if (!user.profile.bidsReceivedActiveAuctions) user.profile.bidsReceivedActiveAuctions = 0;\n        user.profile.activeAuctions--;\n        user.profile.bidsReceivedActiveAuctions -= bidCount;\n        user.profile.bidProfitActive -= auction.auctionBidProfit;\n        if (user.profile.activeAuctions < 0) user.profile.activeAuctions = 0;\n        if (user.profile.bidsReceivedActiveAuctions < 0) user.profile.bidsReceivedActiveAuctions = 0;\n        if (user.profile.bidProfitActive < 0) user.profile.bidProfitActive = 0;\n        Meteor.users.update(userId, {\n          $set: {\n            \"profile.activeAuctions\": user.profile.activeAuctions,\n            \"profile.bidsReceivedActiveAuctions\": user.profile.bidsReceivedActiveAuctions,\n            \"profile.bidProfitActive\": user.profile.bidProfitActive\n          }\n        });\n      }\n\n      data = {\n        propertyId: auction.propertyId,\n        auctionId: auction._id,\n        type: 'prop_deactivation',\n        activated: false,\n        createdAt: new Date()\n      };\n      Collections.ActivityHistory.insert(data);\n      successCount++;\n      deactivatedProps.push({\n        slug: property.slug,\n        lettingAuctionCode: auction.lettingAuctionCode,\n        address: property.address.address + ', ' + property.address.county + ', ' + property.address.area\n      });\n    }\n\n    if (successCount > 0) {\n      var sub = 'Multi Auctions Deactivated';\n      let tableHtml = '',\n          deactivatedProp = {};\n\n      for (i = 0; i < deactivatedProps.length; i++) {\n        deactivatedProp = deactivatedProps[i];\n        tableHtml += \"<tr>\\n                <td>\" + deactivatedProps[i].address + \"</td>\\n                <td><a href=\\\"https://www.spotmycrib.ie/rent/\" + deactivatedProps[i].slug + \"/\" + deactivatedProps[i].lettingAuctionCode + \"\\\">Link1</a></td>\\n                <td><a href=\\\"https://www.spotmycrib.ie/letting/\" + deactivatedProps[i].lettingAuctionCode + \"\\\">Link2</a></td>\\n                </tr>\";\n      }\n\n      var desc = \"\\n\\n    Deactivate Count: \" + successCount + \"<br/><br/>\\n\\n    <table>\\n    \" + tableHtml + \"\\n    </table>\\n    \";\n      Meteor.call('notifyAdmin', sub, desc);\n    }\n\n    return {\n      status: 'success'\n    };\n  }\n});\n\nArray.prototype.pushUnique = function (item) {\n  if (this.indexOf(item) == -1) {\n    //if(jQuery.inArray(item, this) == -1) {\n    this.push(item);\n    return true;\n  }\n\n  return false;\n};\n\nfunction numDifferentiation(val) {\n  if (val >= 1000000000) val = (val / 1000000000).toFixed(2) + ' Billion';else if (val >= 1000000) val = (val / 1000000).toFixed(2) + ' Million';\n  return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nfunction titleCase(str) {\n  if (!str) return;\n  return str.charAt(0).toUpperCase() + str.toLowerCase().substring(1);\n}\n\nfunction getA(arr, find) {\n  if (!Array.isArray(arr)) return;\n  var eles = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]['name'] == find) eles.push(arr[i]['value']);\n  }\n\n  if (find == 'amenities') return eles;\n  if (eles.lenght > 1) return eles;\n  if (eles.lenght == 0) return false;\n  return eles[0];\n}","map":{"version":3,"sources":["server/core/properties.js"],"names":["check","module","link","v","Meteor","methods","archiveProperty","propertyId","String","console","log","userId","Error","property","Collections","Properties","findOne","_id","createdByAgent","auctionId","call","error","result","update","$set","editProperty","data","price","getA","tmpP","split","trim","match","join","rentMonthly","parseFloat","doc","parseInt","Date","numBedRoomCount","bedrooms","i","bne","bnt","tmp","ensuite","bedType","push","length","advertiseFormActive","lease","allowedLease","indexOf","rentType","allowedRentType","currency","allowedCurrencies","readyFrom","moment","add","startOf","adDoc","Auctions","updateGalleries","args","galleries","status","updateGalleriesInUserProfile","users","addAuction","auction","user","profile","activeAuctions","totalAuctions","type","activated","addAdvertisement","pid","TokenGen","default","auctionCode","key","toString","auc","insert","sub","name","desc","lettingAuctionCode","slug","chooseWinning","bidId","agent","bid","Bids","transform","isArchived","chosenBids","formattedBid","a","chosenOn","unshift","chosen","bids","find","fetch","references","titleCase","address","area","county","mailData","template","subject","mailTo","email","replyTo","homepage","absoluteUrl","application","project","agentName","agentEmail","bedsCount","offerFormated","numDifferentiation","yourBid","rentFormated","unChooseWinning","found","splice","markChosen","unMarkChosen","deactivateAuction","auctionHistory","deactivatedOn","bidCount","count","auctionBidProfit","bidProfitActive","bidsReceivedActiveAuctions","deactivateAuctionMulti","propIds","propId","successCount","deactivatedProps","createdAt","ActivityHistory","tableHtml","deactivatedProp","Array","prototype","pushUnique","item","val","toFixed","replace","str","charAt","toUpperCase","toLowerCase","substring","arr","isArray","eles","lenght"],"mappings":"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","sourcesContent":["\nimport {check} from \"meteor/check\";\n// import TokenGen from 'token-gen';\n\nMeteor.methods({\n    archiveProperty:function (propertyId) {\n        check(propertyId, String);\n        console.log(\"server method archiveProperty called\")\n\n        console.log(propertyId);\n        const userId = Meteor.userId();\n        console.log(userId)\n\n        if (!userId) throw new Meteor.Error('not-authorized');\n        const property = Collections.Properties.findOne({\n            _id: propertyId\n        });\n\n        if (!property)throw new Meteor.Error('Invalid property');\n\n        if (property.createdByAgent != userId)throw new Meteor.Error('Invalid user');\n        //PROPERTY BELONGS TO THIS AGENT\n\n        if(property.auctionId) {//if it has an active auction\n            Meteor.call('deactivateAuction', property.auctionId, function (error, result) {\n                if (error) {\n                    throw new Meteor.Error(400, \"Deactivation Failed\");\n                }\n\n            });\n        }\n\n        Collections.Properties.update(propertyId, {\n            $set: {\n                \"isArchived\": true\n            }\n        });\n    },\n    editProperty: function(propertyId, data) {\n        console.log(\"common method editProperty called\")\n\n        const userId = Meteor.userId();\n        console.log(userId)\n        if (!userId) throw new Meteor.Error('not-authorized');\n\n        var property = Collections.Properties.findOne(propertyId);\n        if (property.createdByAgent != userId)throw new Meteor.Error('not-authorized');// Its not your property\n\n        var price = getA(data, 'price');\n\n        if(price) {\n            var tmpP = price.split('.');\n            tmpP = tmpP[0]//No decimals\n            price = tmpP.trim().match(/\\d+/g).join('');\n        }\n        if (!price) price = 0;\n\n        // console.log('price is: '+price)\n        // console.log('parsed price is: '+parseInt(price))\n\n        var rentMonthly=parseFloat(price);\n        if(getA(data,'type')=='weekly') rentMonthly = parseFloat((rentMonthly/7)*30) // Month has 30 days\n\n        var doc = {\n            \"address\" : {\n                \"address\" : getA(data,'address.address'),\n                \"county\" : getA(data,'address.county'),\n                \"area\" : getA(data,'address.area'),\n                \"country\" : \"Ireland\"\n            },\n            \"rent\" : parseInt(price),\n            \"rentMonthly\" : rentMonthly,\n            \"type\" : getA(data,'type'),\n            \"baths\" : parseInt(getA(data,'baths')),\n            \"furnished\" : getA(data,'furnished')==\"true\" ? true : false,\n            \"contacts\" : [\n                {\n                    \"name\" : getA(data,'contacts.0.name'),\n                    \"phone\" : getA(data,'contacts.0.phone'),\n                    \"email\" : getA(data,'contacts.0.email')\n                }\n            ],\n            \"about\" : getA(data,'about'),\n            \"amenities\" : getA(data,'amenities'),\n            \"createdByAgent\":userId,\n            \"updatedAt\":new Date()\n        }\n        // {name: \"bedrooms.0.ensuite\", value: \"on\"}\n        // 8\n        // :\n        // {name: \"bedrooms.0.bedType\", value: \"single\"}\n        // \"bedrooms\" : [\n        //     {\n        //         \"bedType\" : \"double\",\n        //         \"ensuite\" : true\n        //     },\n        //     {\n        //         \"bedType\" : \"single\",\n        //         \"ensuite\" : false\n        //     }\n        // ],\n\n        var numBedRoomCount = getA(data,'numBedRoomCount')\n        if( numBedRoomCount ){\n            var bedrooms = [];\n            for(var i=0; i<numBedRoomCount; i++){\n                var bne = \"bedrooms.\"+i+\".ensuite\"\n                var bnt = \"bedrooms.\"+i+\".bedType\"\n                var tmp = {}\n\n                if(getA(data,bne)) tmp.ensuite = true;\n                else tmp.ensuite = false;\n                tmp.bedType = getA(data,bnt);\n\n                bedrooms.push(tmp)\n            }\n            doc['bedrooms'] = bedrooms;\n            doc['bedCount'] = bedrooms.length;\n        }else {\n            doc['bedrooms'] = [];\n            doc['bedCount'] = '1';//default 1\n        }\n\n        // console.log('before');\n        // console.log(doc);\n        // console.log('after');\n\n        // debugger;\n\n        // Collections.Properties.update(propertyId,{\n        //     $set:{\n        //         contacts:[],\n        //         bedrooms:[]\n        //     }\n        // });//commeted due to point: editProperty server method has 2 updates one after another - not needed, below code will replace anyways.\n        Collections.Properties.update(propertyId,{\n            $set:doc\n        });\n\n        ////////ADVERTISE FORM DATA\n        var advertiseFormActive = getA(data,'advertiseFormActive'); if(advertiseFormActive=='yes') {\n            console.log(\"common method editProperty - editAdvertisement section\")\n\n            var lease = getA(data, 'lease')\n            var allowedLease = ['1 month', '2 months', '3 months', '4 months', '5  months', '6 months', '7 months', '8 months', '9 months', '10 months', '11 months', '1 year', 'More than a year'];\n            if (!lease || allowedLease.indexOf(lease) == -1) lease = 'More than a year'\n\n            var rentType = getA(data, 'rentType')\n            var allowedRentType = ['weekly', 'monthly', 'other'];\n            if (!rentType || allowedRentType.indexOf(rentType) == -1) rentType = 'monthly'\n\n            var currency = getA(data, 'currency')\n            var allowedCurrencies = [\"EUR\", \"POUND\", \"USD\"];\n            if (!currency || allowedCurrencies.indexOf(currency) == -1) currency = \"EUR\"\n\n            var readyFrom = getA(data, 'readyFrom')\n            if (!readyFrom) readyFrom = new Date(moment().add(1, 'days').startOf('day'))\n            if (readyFrom < new Date(moment().add(1, 'days').startOf('day'))) readyFrom = new Date(moment().add(1, 'days').startOf('day'))\n\n\n            var adDoc = {\n                \"price\": parseInt(price),\n                \"currency\": currency,\n                \"readyFrom\": readyFrom,\n                \"lease\": lease,\n                \"rentType\": rentType,\n                \"updatedAt\": new Date()\n            }\n\n            if (getA(data, 'advertContacts.0.name') || getA(data, 'advertContacts.0.phone') || getA(data, 'advertContacts.0.email')) {\n                adDoc['contacts'] = [{\n                    \"name\": getA(data, 'advertContacts.0.name'),\n                    \"phone\": getA(data, 'advertContacts.0.phone'),\n                    \"email\": getA(data, 'advertContacts.0.email')\n                }]\n            }\n            Collections.Auctions.update(property.auctionId,{\n                $set:adDoc\n            });\n        }//End of auctions\n\n    },\n    updateGalleries: function(args) {\n        console.log(args);\n        // check(args, [String, [null]]);\n        var propertyId = args[0];\n        var galleries = args[1];\n        console.log(\"server method updateGalleries called\")\n\n        if (!Meteor.userId()) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        const property = Collections.Properties.findOne({\n            _id: propertyId\n        });\n\n        const userId = Meteor.userId();\n        // console.log(userId)\n        //console.log(bidId)\n\n        if (!property)throw new Meteor.Error('Invalid property');\n\n        if (property.createdByAgent != userId)throw new Meteor.Error('Invalid user');\n        //PROPERTY BELONGS TO THIS AGENT\n        console.log(galleries);\n        Collections.Properties.update(propertyId, {\n            $set: {\n                \"gallery\": galleries\n            }\n        });\n\n        return {\n            status: 'success'\n        }\n\n    },\n    updateGalleriesInUserProfile: function(galleries) {\n        // console.log(galleries);\n        console.log(\"server method updateGalleriesInUserProfile called\")\n\n        const userId = Meteor.userId();\n        if (!userId) throw new Meteor.Error('not-authorized');\n\n\n        // console.log(galleries);\n        Meteor.users.update(userId, {\n            $set: {\n                \"profile.session.addproperty.gallery\": galleries\n            }\n        });\n\n        return {\n            status: 'success'\n        }\n\n    },\n    addAuction: function(auctionId) {\n        check(auctionId, String);\n        console.log(\"server method addAuction called\")\n\n        console.log(auctionId);\n        const userId = Meteor.userId();\n        console.log(userId)\n\n        if (!userId) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        const auction = Collections.Auctions.findOne(auctionId);\n        if (!auction)throw new Meteor.Error('Invalid auction');\n\n        const property = Collections.Properties.findOne({\n            _id: auction.propertyId\n        });\n\n        if (!property)throw new Meteor.Error('Invalid property');\n\n        // if(property.auctionId)throw new Meteor.Error('Property already has an auction ID');//NOT NEEDED, LET IT REWRITE\n\n        if (property.createdByAgent != userId)throw new Meteor.Error('Invalid user');\n        //PROPERTY BELONGS TO THIS AGENT\n\n        var rentMonthly=parseFloat(auction.price);\n        if(auction.rentType=='weekly') rentMonthly = parseFloat((rentMonthly/7)*30) // Month has 30 days\n\n        Collections.Properties.update(auction.propertyId, {\n            $set: {\n                \"auctionId\": auction._id,\n                \"rent\": parseInt(auction.price),\n                \"rentMonthly\":rentMonthly\n            }\n        });\n\n        // var TokenGen = require('token-gen');\n        // var auctionCode = TokenGen();\n        // console.log(auctionCode);\n        // auctionCode = auctionCode.toString()\n        // console.log(auctionCode);\n        //\n        // Collections.Auctions.update(auctionId, {\n        //     $set: {\n        //         \"lettingAuctionCode\": auctionCode\n        //     }\n        // });\n\n        const user = Meteor.user();\n        if(!user.profile.activeAuctions)user.profile.activeAuctions=0\n        if(!user.profile.totalAuctions)user.profile.totalAuctions=0\n        user.profile.activeAuctions++;\n        user.profile.totalAuctions++;\n\n\n        Meteor.users.update(userId,{\n            $set: {\n                \"profile.activeAuctions\" :user.profile.activeAuctions,\n                \"profile.totalAuctions\" :user.profile.totalAuctions\n            }\n        });\n\n        Meteor.call('addActivityHistory', {propertyId:auction.propertyId,auctionId:auction._id,type:'prop_activation',activated:true});\n\n\n        return {\n            status: 'success'\n        }\n\n    },\n    addAdvertisement: function(data,pid) {\n        // check(auctionId, String);\n        console.log(\"server method addAdvertisement called\")\n\n        const userId = Meteor.userId();\n        console.log(userId)\n\n        if (!userId) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        var propertyId = getA(data,'propertyId');\n        if(!propertyId && pid)propertyId = pid;\n        if(!propertyId){throw  new Meteor.Error('Invalid property ID key. Aborting.');return;}\n\n        const property = Collections.Properties.findOne({\n            _id: propertyId\n        });\n\n        if (!property)throw new Meteor.Error('Invalid property');\n\n        if (property.createdByAgent != userId)throw new Meteor.Error('Invalid user');\n        //PROPERTY BELONGS TO THIS AGENT\n\n\n        var price = getA(data,'price');\n\n        if(price) {\n            var tmpP = price.split('.');\n            tmpP = tmpP[0]//No decimals\n            price = tmpP.trim().match(/\\d+/g).join('');\n        }\n        if(!price)price=0;\n\n        var lease = getA(data,'lease')\n        var allowedLease = ['1 month', '2 months', '3 months', '4 months', '5  months', '6 months', '7 months', '8 months', '9 months', '10 months', '11 months', '1 year', 'More than a year'];\n        if(!lease || allowedLease.indexOf(lease) == -1 ) lease= 'More than a year'\n\n        var rentType = getA(data,'rentType')\n        var allowedRentType = ['weekly', 'monthly', 'other'];\n        if(!rentType || allowedRentType.indexOf(rentType) == -1 ) rentType= 'monthly'\n\n        var currency = getA(data,'currency')\n        var allowedCurrencies = [\"EUR\", \"POUND\", \"USD\"];\n        if(!currency || allowedCurrencies.indexOf(currency) == -1 ) currency= \"EUR\"\n\n        var readyFrom = getA(data,'readyFrom')\n        if(!readyFrom) readyFrom= new Date(moment().add(1, 'days').startOf('day'))\n        if(readyFrom<new Date(moment().add(1, 'days').startOf('day'))) readyFrom= new Date(moment().add(1, 'days').startOf('day'))\n\n        var rentMonthly=parseFloat(price);\n        if(rentType=='weekly') rentMonthly = parseFloat((rentMonthly/7)*30) // Month has 30 days\n\n        var doc = {\n            \"propertyId\" : propertyId,\n            \"price\" : parseInt(price),\n            \"rentMonthly\" : rentMonthly,\n            \"createdByAgent\" : userId,\n            \"isArchived\" : false,\n            \"auctionBidProfit\" : 0,\n            \"currency\" : currency,\n            \"readyFrom\" : readyFrom,\n            \"lease\" : lease,\n            \"rentType\" : rentType,\n            \"views\" : 0,\n            \"bids\" : 0,\n            \"enquiryCount\" : 0,\n            \"createdByAgent\":userId,\n            \"createdAt\":new Date(),\n            \"updatedAt\":new Date()\n        }\n\n        if(getA(data,'contacts.0.name') || getA(data,'contacts.0.phone') || getA(data,'contacts.0.email')){\n            doc['contacts'] = [{\n                \"name\" : getA(data,'contacts.0.name'),\n                \"phone\" : getA(data,'contacts.0.phone'),\n                \"email\" : getA(data,'contacts.0.email')\n            }]\n        }\n\n\n        import TokenGen from 'token-gen';\n        var auctionCode = TokenGen();\n        var key = auctionCode.toString();\n        var auc = Collections.Auctions.findOne({\"lettingAuctionCode\" : key})\n        var i=0;\n        while(auc){// it should be undefined, else loop\n            auctionCode = TokenGen();\n            key = auctionCode.toString();\n            auc = Collections.Auctions.findOne({\"lettingAuctionCode\" : key})\n            if(1>10000){throw  new Meteor.Error('Couldnt generate property key. Aborting.');return;}\n            i++;\n        }\n\n        if(auctionCode){\n            doc['lettingAuctionCode'] = key;\n        }\n\n        // console.log(doc);\n        var auctionId = Collections.Auctions.insert(doc);\n// return 'as';\n        // const auction = Collections.Auctions.findOne(auctionId);\n        const auction = doc;\n\n        Collections.Properties.update(propertyId, {\n            $set: {\n                \"auctionId\": auctionId,\n                \"rent\": parseInt(price),\n                \"rentMonthly\": rentMonthly,\n            }\n        });\n\n\n        const user = Meteor.user();\n        if(!user.profile.activeAuctions)user.profile.activeAuctions=0\n        if(!user.profile.totalAuctions)user.profile.totalAuctions=0\n        user.profile.activeAuctions++;\n        user.profile.totalAuctions++;\n\n\n        Meteor.users.update(userId,{\n            $set: {\n                \"profile.activeAuctions\" :user.profile.activeAuctions,\n                \"profile.totalAuctions\" :user.profile.totalAuctions\n            }\n        });\n\n        Meteor.call('addActivityHistory', {propertyId:auction.propertyId,auctionId:auction._id,type:'prop_activation',activated:true});\n\n        var sub = 'Property added: '+user.profile.name;\n        var desc = `\nProperty ID: `+auction.propertyId+`<br/>\nProperty Key: `+auction.lettingAuctionCode+`<br/>\nProperty Link: <a href=\"https://www.spotmycrib.ie/letting/`+auction.lettingAuctionCode+`\">Link</a><br/>\nProperty Link New: <a href=\"https://www.spotmycrib.ie/rent/`+property.slug+'/'+auction.lettingAuctionCode+`\">Link New</a><br/>\n`\n        Meteor.call('notifyAdmin', sub, desc);\n\n\n        return auctionId;\n\n    },\n    chooseWinning: function (args) {\n        auctionId = args[0]\n        bidId = args[1]\n        check(auctionId, String);\n        check(bidId, String);\n        console.log(\"server method chooseWinning called\")\n\n        const agent = Meteor.user();\n        // console.log(agent._id);\n\n        if (!agent._id)throw new Meteor.Error('not-authorized');\n\n\n        const auction = Collections.Auctions.findOne(auctionId);\n        if (!auction)throw new Meteor.Error('Invalid auction');\n\n        const bid = Collections.Bids.findOne(bidId,{\n            transform: function(doc) {\n                doc.user = Meteor.users.findOne(doc.userId);\n                return doc;\n            }\n        });\n        if (!bid)throw new Meteor.Error('Invalid bid');\n        if (bid.isArchived)throw new Meteor.Error('This application is withdrawn by the user. Please choose another application.');\n\n        const user = bid.user;\n        if (!user._id)throw new Meteor.Error('User not found');\n\n        const property = Collections.Properties.findOne({\n            _id: auction.propertyId\n        });\n        if (!property)throw new Meteor.Error('Invalid property');\n\n        if (property.createdByAgent != agent._id)throw new Meteor.Error('Invalid user');\n        //PROPERTY BELONGS TO THIS AGENT CHECK\n\n\n        ///////DONE WITH ALL THE CHECKS\n        var chosenBids = []; var formattedBid = {} ;\n        if(auction.chosenBids){\n            chosenBids = auction.chosenBids;\n            for(var a=0;a<auction.chosenBids.length;a++){\n                if(auction.chosenBids[a].bidId == bid._id ){throw new Meteor.Error('This application is already chosen');}//Already in chosen\n            }\n        }\n        formattedBid = {bidId : bid._id , chosenOn: new Date()}\n        chosenBids.unshift(formattedBid);\n\n        console.log('chosenBids');\n        console.log(chosenBids);\n        Collections.Auctions.update(auction._id,{\n            $set:{\n                chosenBids: chosenBids\n            }\n        })\n\n        Collections.Bids.update(bid._id,{\n            $set:{\n                chosen: true\n            }\n        })\n\n\n        //////////// CODE TO COPY ALL REFERENCES\n        var bids = Collections.Bids.find({auctionId:auction._id,isArchived:false},{\n            transform: function(doc) {\n                doc.user = Meteor.users.findOne(doc.userId);\n                return doc;\n            },\n        }).fetch();\n        for(var i=0;i<bids.length;i++){//Everytime you click on choose, this field gets refreshed.\n            Collections.Bids.update(bids[i]._id,{\n                $set:{\n                    references: bids[i].user.profile.references,\n                    // isArchived: true//Bid archive is used for bid deletion, so don't archive\n                }\n            })\n        }\n        //////////// SEND MAIL to winning user\n        property.type = titleCase(property.type);\n        property.address.address = titleCase(property.address.address);\n        property.address.area = titleCase(property.address.area);\n        property.address.county = titleCase(property.address.county);\n        var mailData     = {\n            template    : 'applicationWon',\n            subject     : \"Application Won\",\n            mailTo      : bid.user.profile.email,\n            replyTo      : agent.profile.email,\n            //mailTo: 'srikanth681@gmail.com',\n            homepage    : Meteor.absoluteUrl(),\n            application : bid,\n            auction     : auction,\n            project     : property,\n            user        : user,\n            agentName        : agent.profile.name,\n            agentEmail        : agent.profile.email,\n            bedsCount   : property.bedrooms.length,\n            offerFormated: numDifferentiation(bid.yourBid),\n            rentFormated: numDifferentiation(auction.price)\n        };\n        Meteor.call('sendNotificationEmail', mailData);\n\n\n\n        // Meteor.call('deactivateAuction', auctionId);\n\n    },\n    unChooseWinning: function (args) {\n        auctionId = args[0]\n        bidId = args[1]\n        check(auctionId, String);\n        check(bidId, String);\n        console.log(\"server method unChooseWinning called\")\n\n        const agent = Meteor.user();\n        // console.log(agent._id);\n\n        if (!agent._id)throw new Meteor.Error('not-authorized');\n\n\n        const auction = Collections.Auctions.findOne(auctionId);\n        if (!auction)throw new Meteor.Error('Invalid auction');\n\n        const bid = Collections.Bids.findOne(bidId,{\n            transform: function(doc) {\n                doc.user = Meteor.users.findOne(doc.userId);\n                return doc;\n            }\n        });\n        if (!bid)throw new Meteor.Error('Invalid bid');\n        if (bid.isArchived)throw new Meteor.Error('This application is withdrawn by the user. Please choose another application.');\n\n        const user = bid.user;\n        if (!user._id)throw new Meteor.Error('User not found');\n\n        const property = Collections.Properties.findOne({\n            _id: auction.propertyId\n        });\n        if (!property)throw new Meteor.Error('Invalid property');\n\n        if (property.createdByAgent != agent._id)throw new Meteor.Error('Invalid user');\n        //PROPERTY BELONGS TO THIS AGENT CHECK\n\n\n        ///////DONE WITH ALL THE CHECKS\n        var chosenBids = []; var formattedBid = {} ;\n        if(!auction.chosenBids)throw new Meteor.Error('You need to chose an application first.');\n        if(!auction.chosenBids.length)throw new Meteor.Error('You need to chose an application first.');\n\n        chosenBids = auction.chosenBids;\n        var found = false;\n        for(var a=0;a<chosenBids.length;a++){\n            if(chosenBids[a].bidId == bid._id ){found=true;chosenBids.splice(a,1);}//Already in chosen\n        }\n        if(!found)throw new Meteor.Error('You need to chose an application first.');\n\n        // console.log('chosenBids');\n        // console.log(chosenBids);\n        Collections.Auctions.update(auction._id,{\n            $set:{\n                chosenBids: chosenBids\n            }\n        })\n\n        Collections.Bids.update(bid._id,{\n            $set:{\n                chosen: false\n            }\n        })\n\n\n        //////////// CODE TO COPY ALL REFERENCES\n        var bids = Collections.Bids.find({auctionId:auction._id,isArchived:false},{\n            transform: function(doc) {\n                doc.user = Meteor.users.findOne(doc.userId);\n                return doc;\n            },\n        }).fetch();\n        for(var i=0;i<bids.length;i++){//Everytime you click on choose, this field gets refreshed.\n            Collections.Bids.update(bids[i]._id,{\n                $set:{\n                    references: bids[i].user.profile.references,\n                    // isArchived: true//Bid archive is used for bid deletion, so don't archive\n                }\n            })\n        }\n        //////////// SEND MAIL to winning user\n        property.type = titleCase(property.type);\n        property.address.address = titleCase(property.address.address);\n        property.address.area = titleCase(property.address.area);\n        property.address.county = titleCase(property.address.county);\n        var mailData     = {\n            template    : 'applicationPending',\n            subject     : \"Application Pending\",\n            mailTo      : bid.user.profile.email,\n            replyTo      : agent.profile.email,\n            //mailTo: 'srikanth681@gmail.com',\n            homepage    : Meteor.absoluteUrl(),\n            application : bid,\n            auction     : auction,\n            project     : property,\n            user        : user,\n            agentName        : agent.profile.name,\n            agentEmail        : agent.profile.email,\n            bedsCount   : property.bedrooms.length,\n            offerFormated: numDifferentiation(bid.yourBid),\n            rentFormated: numDifferentiation(auction.price)\n        };\n        Meteor.call('sendNotificationEmail', mailData);\n\n\n\n        // Meteor.call('deactivateAuction', auctionId);\n\n    },\n    markChosen: function (args) {\n        bidId = args[0]\n        check(bidId, String);\n        console.log(\"server method markChosen called\")\n\n        const agent = Meteor.user();\n        // console.log(agent._id);\n\n        if (!agent._id)throw new Meteor.Error('not-authorized');\n\n        const bid = Collections.Bids.findOne(bidId,{\n            transform: function(doc) {\n                doc.auction = Collections.Auctions.findOne(doc.auctionId);\n                return doc;\n            }\n        });\n        if (!bid)throw new Meteor.Error('Invalid bid');\n        if (bid.isArchived)throw new Meteor.Error('This application is withdrawn by the user. Please choose another application.');\n        var auction = bid.auction;\n\n        if (!bid.auction)throw new Meteor.Error('Invalid auction');\n\n        if (bid.auction.createdByAgent != agent._id)throw new Meteor.Error('Invalid property owner. '); //PROPERTY BELONGS TO THIS AGENT CHECK\n\n        Collections.Bids.update(bidId,{\n            $set:{\n                chosen: false\n            }\n        })\n    },\n    unMarkChosen: function (args) {\n        bidId = args[0]\n        check(bidId, String);\n        console.log(\"server method unMarkChosen called\")\n\n        const agent = Meteor.user();\n        // console.log(agent._id);\n\n        if (!agent._id)throw new Meteor.Error('not-authorized');\n\n        const bid = Collections.Bids.findOne(bidId,{\n            transform: function(doc) {\n                doc.auction = Collections.Auctions.findOne(doc.auctionId);\n                return doc;\n            }\n        });\n        if (!bid)throw new Meteor.Error('Invalid bid');\n        if (bid.isArchived)throw new Meteor.Error('This application is withdrawn by the user. Please choose another application.');\n        var auction = bid.auction;\n\n        if (!bid.auction)throw new Meteor.Error('Invalid auction');\n\n        if (bid.auction.createdByAgent != agent._id)throw new Meteor.Error('Invalid property owner. '); //PROPERTY BELONGS TO THIS AGENT CHECK\n\n        Collections.Bids.update(bidId,{\n            $set:{\n                chosen: false\n            }\n        })\n    },\n    deactivateAuction: function(auctionId) {\n        check(auctionId, String);\n        console.log(\"server method deactivateAuction called\")\n\n        console.log(auctionId);\n        const userId = Meteor.userId();\n        console.log(userId)\n\n        if (!userId) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        const auction = Collections.Auctions.findOne(auctionId);\n        if (!auction)throw new Meteor.Error('Invalid auction');\n\n        const property = Collections.Properties.findOne({\n            _id: auction.propertyId\n        });\n        if (!property)throw new Meteor.Error('Invalid property');\n\n        if (property.createdByAgent != userId)throw new Meteor.Error('Invalid user');\n        //PROPERTY BELONGS TO THIS AGENT\n\n        var auctionHistory = property.auctionHistory;\n        if(!auctionHistory)auctionHistory = [];\n\n        auctionHistory.push({\n            auctionId:property.auctionId,\n            deactivatedOn: new Date()\n        })\n        Collections.Properties.update(auction.propertyId, {\n            $set: {\n                \"auctionId\": \"\",\n                \"rent\": \"\",\n                \"auctionHistory\":auctionHistory\n            }\n        });\n        Collections.Auctions.update(auction._id, {\n            $set: {\n                \"isArchived\": true,\n                \"endDate\":new Date()\n            }\n        });\n\n        var bidCount = Collections.Bids.find({auctionId:auction._id}).count();\n\n        if(bidCount){//Non zero\n            Collections.Bids.update({auctionId:auction._id}, {\n                $set: {\n                    \"isArchived\": true,\n                    \"endDate\":new Date()\n                }\n            });\n        }\n\n        const user = Meteor.user();\n\n\n\n\n        if(!auction.auctionBidProfit)auction.auctionBidProfit=0\n        if(!user.profile.bidProfitActive)user.profile.bidProfitActive=0\n        if(!user.profile.activeAuctions)user.profile.activeAuctions=0\n        if(!user.profile.bidsReceivedActiveAuctions)user.profile.bidsReceivedActiveAuctions=0\n        user.profile.activeAuctions--;\n        user.profile.bidsReceivedActiveAuctions-=bidCount;\n        user.profile.bidProfitActive -= auction.auctionBidProfit;\n\n        if(user.profile.activeAuctions<0)user.profile.activeAuctions=0\n        if(user.profile.bidsReceivedActiveAuctions<0)user.profile.bidsReceivedActiveAuctions=0\n        if(user.profile.bidProfitActive<0)user.profile.bidProfitActive=0\n        Meteor.users.update(userId,{\n            $set: {\n                \"profile.activeAuctions\" :user.profile.activeAuctions,\n                \"profile.bidsReceivedActiveAuctions\" :user.profile.bidsReceivedActiveAuctions,\n                \"profile.bidProfitActive\" :user.profile.bidProfitActive,\n            }\n        });\n\n        Meteor.call('addActivityHistory', {propertyId:auction.propertyId,auctionId:auction._id,type:'prop_deactivation',activated:false});\n\n        return {\n            status: 'success'\n        }\n\n    },\n    deactivateAuctionMulti: function(propIds) {\n        // check(auctionId, String);\n        console.log(\"server method deactivateAuctionMulti called\")\n\n        let propId = '', successCount = 0, deactivatedProps = [];\n        for(let i=0;i<propIds.length;i++){\n            propId = propIds[i];\n            console.log('propId is: '+propId);\n            const auction = Collections.Auctions.findOne({propertyId:propId,isArchived:false});//Dont get already archived props\n            if (!auction)continue;\n\n            const property = Collections.Properties.findOne(propId);\n            if (!property)continue;\n\n            var auctionHistory = property.auctionHistory;\n            if(!auctionHistory)auctionHistory = [];\n\n            auctionHistory.push({\n                auctionId:property.auctionId,\n                deactivatedOn: new Date()\n            })\n            console.log('auctionHistory done '+auction._id);\n            Collections.Properties.update(auction.propertyId, {\n                $set: {\n                    \"auctionId\": \"\",\n                    \"rent\": \"\",\n                    \"auctionHistory\":auctionHistory\n                }\n            });\n            console.log('Properties update done '+auction.propertyId);\n            \n            Collections.Auctions.update(auction._id, {\n                $set: {\n                    \"isArchived\": true,\n                    \"endDate\":new Date()\n                }\n            });\n\n            var bidCount = Collections.Bids.find({auctionId:auction._id}).count();\n            if(bidCount){//Non zero\n                Collections.Bids.update({auctionId:auction._id}, {\n                    $set: {\n                        \"isArchived\": true,\n                        \"endDate\":new Date()\n                    }\n                });\n            }\n            console.log('bidCount done '+bidCount);\n\n            const userId = property.createdByAgent;\n            const user = Meteor.users.findOne({_id:userId});\n\n\n            if(!auction.auctionBidProfit)auction.auctionBidProfit=0\n            if(user){ // in Dev with all users deleted, below code would fail, so adding this if condition. \n                if(!user.profile.bidProfitActive)user.profile.bidProfitActive=0\n                if(!user.profile.activeAuctions)user.profile.activeAuctions=0\n                if(!user.profile.bidsReceivedActiveAuctions)user.profile.bidsReceivedActiveAuctions=0\n                user.profile.activeAuctions--;\n                user.profile.bidsReceivedActiveAuctions-=bidCount;\n                user.profile.bidProfitActive -= auction.auctionBidProfit;\n    \n                if(user.profile.activeAuctions<0)user.profile.activeAuctions=0\n                if(user.profile.bidsReceivedActiveAuctions<0)user.profile.bidsReceivedActiveAuctions=0\n                if(user.profile.bidProfitActive<0)user.profile.bidProfitActive=0\n                Meteor.users.update(userId,{\n                    $set: {\n                        \"profile.activeAuctions\" :user.profile.activeAuctions,\n                        \"profile.bidsReceivedActiveAuctions\" :user.profile.bidsReceivedActiveAuctions,\n                        \"profile.bidProfitActive\" :user.profile.bidProfitActive,\n                    }\n                });\n            }\n\n            data = {propertyId:auction.propertyId,auctionId:auction._id,type:'prop_deactivation',activated:false,createdAt : new Date()}\n            \n            Collections.ActivityHistory.insert(data);\n            successCount++;\n            deactivatedProps.push({slug:property.slug,lettingAuctionCode:auction.lettingAuctionCode, address:property.address.address +', '+property.address.county+', '+property.address.area})\n        }\n\n        if(successCount>0){\n            var sub = 'Multi Auctions Deactivated'\n            let tableHtml = '',deactivatedProp={};\n            for(i=0;i<deactivatedProps.length;i++){\n                deactivatedProp = deactivatedProps[i];\n                tableHtml += `<tr>\n                <td>`+deactivatedProps[i].address+`</td>\n                <td><a href=\"https://www.spotmycrib.ie/rent/`+deactivatedProps[i].slug+`/`+deactivatedProps[i].lettingAuctionCode+`\">Link1</a></td>\n                <td><a href=\"https://www.spotmycrib.ie/letting/`+deactivatedProps[i].lettingAuctionCode+`\">Link2</a></td>\n                </tr>`;\n            }\n            var desc = `\n\n    Deactivate Count: `+successCount+`<br/><br/>\n\n    <table>\n    `+tableHtml+`\n    </table>\n    `\n            Meteor.call('notifyAdmin', sub, desc);\n        } \n\n        return {\n            status: 'success'\n        }\n\n    }\n})\nArray.prototype.pushUnique = function (item){\n    if(this.indexOf(item) == -1) {\n        //if(jQuery.inArray(item, this) == -1) {\n        this.push(item);\n        return true;\n    }\n    return false;\n}\nfunction numDifferentiation(val) {\n    if(val >= 1000000000) val = (val/1000000000).toFixed(2) + ' Billion';\n    else if(val >= 1000000) val = (val/1000000).toFixed(2) + ' Million';\n    return val.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nfunction titleCase(str){\n    if(!str)return;\n    return str.charAt(0).toUpperCase() + str.toLowerCase().substring(1);\n}\nfunction getA(arr,find){\n    if(!Array.isArray(arr))return;\n    var eles = [];\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]['name']==find)eles.push(arr[i]['value'])\n    }\n    if(find=='amenities')return eles;\n    if(eles.lenght>1)return eles;\n    if(eles.lenght==0)return false;\n    return eles[0];\n}\n"]},"sourceType":"module","hash":"2e5711304b764ed2a9db0c5c27f132762b844964"}
