{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/utils.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/montiapm:agent/lib/client/utils.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/utils.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/utils.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/client/utils.js"}},"code":"getBrowserInfo = function () {\n  return {\n    browser: window.navigator.userAgent,\n    userId: Meteor.userId && Meteor.userId(),\n    url: location.href,\n    resolution: getResolution(),\n    clientArch: getClientArch()\n  };\n};\n\ngetResolution = function () {\n  if (screen && screen.width && screen.height) {\n    var resolution = screen.width + 'x' + screen.height;\n    return resolution;\n  }\n};\n\nconst toArray = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args;\n};\n\ngetErrorStack = function (zone, callback) {\n  var trace = [];\n  var eventMap = zone.eventMap || {};\n  var infoMap = zone.infoMap || {};\n  trace.push({\n    at: new Date().getTime(),\n    stack: zone.erroredStack.get()\n  });\n  processZone();\n\n  function processZone() {\n    // we assume, first two zones are not interesting\n    // bacause, they are some internal meteor loading stuffs\n    if (zone && zone.depth > 2) {\n      var stack = \"\";\n\n      if (zone.currentStack) {\n        stack = zone.currentStack.get();\n      }\n\n      var events = eventMap[zone.id] || [];\n      var info = getInfoArray(infoMap[zone.id]);\n      var ownerArgsEvent = events && events[0] && events[0].type == 'owner-args' && events.shift();\n      var runAt = ownerArgsEvent ? ownerArgsEvent.at : zone.runAt;\n      var ownerArgs = ownerArgsEvent ? toArray.apply(null, ownerArgsEvent.args) : []; // limiting\n\n      events = events.slice(-5).map(checkSizeAndPickFields(100));\n      info = info.slice(-5).map(checkSizeAndPickFields(100));\n      ownerArgs = checkSizeAndPickFields(200)(ownerArgs.slice(0, 5));\n      zone.owner && delete zone.owner.zoneId;\n      trace.push({\n        createdAt: zone.createdAt,\n        runAt: runAt,\n        stack: stack,\n        owner: zone.owner,\n        ownerArgs: ownerArgs,\n        events: events,\n        info: info,\n        zoneId: zone.id\n      });\n      zone = zone.parent;\n      setTimeout(processZone, 0);\n    } else {\n      callback(trace);\n    }\n  }\n};\n\ngetInfoArray = function () {\n  let info = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return Object.keys(info).map(function (key, type) {\n    const value = info[key];\n    value.type = type;\n    return value;\n  });\n};\n\ngetTime = function () {\n  if (Kadira && Kadira.syncedDate) {\n    return Kadira.syncedDate.getTime();\n  } else {\n    return new Date().getTime();\n  }\n};\n\ngetClientArch = function () {\n  if (Meteor.isCordova) {\n    return 'cordova.web';\n  } else if (typeof Meteor.isModern === 'undefined' || Meteor.isModern) {\n    return 'web.browser';\n  } else {\n    return 'web.browser.legacy';\n  }\n};\n\ncheckSizeAndPickFields = function (maxFieldSize) {\n  return function (obj) {\n    maxFieldSize = maxFieldSize || 100;\n\n    for (var key in obj) {\n      var value = obj[key];\n\n      try {\n        var valueStringified = JSON.stringify(value);\n\n        if (valueStringified.length > maxFieldSize) {\n          obj[key] = valueStringified.substr(0, maxFieldSize) + \" ...\";\n        } else {\n          obj[key] = value;\n        }\n      } catch (ex) {\n        obj[key] = 'Error: cannot stringify value';\n      }\n    }\n\n    return obj;\n  };\n};\n\nhttpRequest = function (method, url, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  /**\n   * IE8 and IE9 does not support CORS with the usual XMLHttpRequest object\n   * If XDomainRequest exists, use it to send errors.\n   * XDR can POST data to HTTPS endpoints only if current page uses HTTPS\n   */\n\n\n  if (window.XDomainRequest) {\n    var xdr = new XDomainRequest();\n    url = matchPageProtocol(url);\n\n    xdr.onload = function () {\n      var headers = {\n        'Content-Type': xdr.contentType\n      };\n      var data = {};\n\n      try {\n        data = JSON.parse(xdr.responseText);\n      } catch (e) {}\n\n      callback(null, {\n        content: xdr.responseText,\n        data: data,\n        headers: headers,\n        statusCode: 200\n      });\n    };\n\n    xdr.onerror = function () {\n      callback({\n        statusCode: 404\n      });\n    };\n\n    xdr.onprogress = function () {// onprogress must be set. Otherwise, ie doesn't handle duplicate requests\n      // correctly.\n    };\n\n    xdr.open(method, url);\n    setTimeout(() => {\n      var content = options.content;\n\n      if (typeof content === 'object') {\n        content = JSON.stringify(content);\n      } // delaying send fixes issues when multiple xdr requests are made\n      // at the same time.\n\n\n      xdr.send(options.content || null);\n    }, 0);\n\n    function matchPageProtocol(endpoint) {\n      var withoutProtocol = endpoint.substr(endpoint.indexOf(':') + 1);\n      return window.location.protocol + withoutProtocol;\n    }\n  } else {\n    // Based on Meteor's HTTP package. Uses XMLHttpRequest\n    var content = options.content; // wrap callback to add a 'response' property on an error, in case\n    // we have both (http 4xx/5xx error, which has a response payload)\n\n    callback = function (callback) {\n      var called = false;\n      return function (error, response) {\n        if (!called) {\n          called = true;\n\n          if (error && response) {\n            error.response = response;\n          }\n\n          callback(error, response);\n        }\n      };\n    }(callback);\n\n    try {\n      if (typeof XMLHttpRequest === \"undefined\") {\n        throw new Error(\"Can't create XMLHttpRequest\");\n      }\n\n      var xhr = new XMLHttpRequest();\n      xhr.open(method, url, true);\n\n      if (options.headers) {\n        Object.keys(options.headers).forEach(function (key) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        });\n      }\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          // COMPLETE\n          if (!xhr.status) {\n            // no HTTP response\n            callback(new Error(\"Connection lost\"));\n          } else {\n            var response = {};\n            response.statusCode = xhr.status;\n            response.content = xhr.responseText; // Read Content-Type header, up to a ';' if there is one.\n            // A typical header might be \"application/json; charset=utf-8\"\n            // or just \"application/json\".\n\n            var contentType = (xhr.getResponseHeader('content-type') || ';').split(';')[0]; // Only try to parse data as JSON if server sets correct content type.\n\n            if (['application/json', 'text/javascript', 'application/javascript', 'application/x-javascript'].indexOf(contentType) >= 0) {\n              try {\n                response.data = JSON.parse(response.content);\n              } catch (err) {\n                response.data = null;\n              }\n            } else {\n              response.data = null;\n            }\n\n            var error = null;\n\n            if (response.statusCode >= 400) {\n              var message = \"failed [\" + response.statusCode + \"]\";\n\n              if (response.content) {\n                var stringContent = typeof response.content == \"string\" ? response.content : response.content.toString();\n                stringContent = stringContent.replace(/\\n/g, ' ');\n                stringContent = stringContent.length > 500 ? stringContent.slice(0, length) + '...' : stringContent;\n                message += ' ' + stringContent;\n              }\n\n              error = new Error(message);\n            }\n\n            callback(error, response);\n          }\n        }\n      };\n\n      xhr.send(content);\n    } catch (err) {\n      callback(err);\n    }\n  }\n};","map":{"version":3,"sources":["packages/montiapm:agent/lib/client/utils.js"],"names":["getBrowserInfo","browser","window","navigator","userAgent","userId","Meteor","url","location","href","resolution","getResolution","clientArch","getClientArch","screen","width","height","toArray","args","getErrorStack","zone","callback","trace","eventMap","infoMap","push","at","Date","getTime","stack","erroredStack","get","processZone","depth","currentStack","events","id","info","getInfoArray","ownerArgsEvent","type","shift","runAt","ownerArgs","apply","slice","map","checkSizeAndPickFields","owner","zoneId","createdAt","parent","setTimeout","Object","keys","key","value","Kadira","syncedDate","isCordova","isModern","maxFieldSize","obj","valueStringified","JSON","stringify","length","substr","ex","httpRequest","method","options","XDomainRequest","xdr","matchPageProtocol","onload","headers","contentType","data","parse","responseText","e","content","statusCode","onerror","onprogress","open","send","endpoint","withoutProtocol","indexOf","protocol","called","error","response","XMLHttpRequest","Error","xhr","forEach","setRequestHeader","onreadystatechange","readyState","status","getResponseHeader","split","err","message","stringContent","toString","replace"],"mappings":"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","sourcesContent":["getBrowserInfo = function () {\n  return {\n    browser: window.navigator.userAgent,\n    userId: Meteor.userId && Meteor.userId(),\n    url: location.href,\n    resolution: getResolution(),\n    clientArch: getClientArch(),\n  };\n}\n\ngetResolution = function () {\n  if(screen && screen.width && screen.height) {\n    var resolution = screen.width + 'x' + screen.height;\n    return resolution;\n  }\n}\n\nconst toArray = (...args) => args;\n\ngetErrorStack = function (zone, callback) {\n  var trace = [];\n  var eventMap = zone.eventMap || {};\n  var infoMap = zone.infoMap || {};\n\n  trace.push({\n    at: (new Date().getTime()),\n    stack: zone.erroredStack.get()\n  });\n\n  processZone();\n  function processZone() {\n    // we assume, first two zones are not interesting\n    // bacause, they are some internal meteor loading stuffs\n    if(zone && zone.depth > 2) {\n      var stack = \"\";\n      if(zone.currentStack) {\n        stack = zone.currentStack.get();\n      }\n\n      var events = eventMap[zone.id] || [];\n      var info = getInfoArray(infoMap[zone.id]);\n      var ownerArgsEvent = events && events[0] && events[0].type == 'owner-args' && events.shift();\n      var runAt = (ownerArgsEvent)? ownerArgsEvent.at : zone.runAt;\n      var ownerArgs = (ownerArgsEvent)? toArray.apply(null, ownerArgsEvent.args) : [];\n\n      // limiting\n      events = events.slice(-5).map(checkSizeAndPickFields(100));\n      info = info.slice(-5).map(checkSizeAndPickFields(100));\n      ownerArgs = checkSizeAndPickFields(200)(ownerArgs.slice(0,5));\n\n      zone.owner && delete zone.owner.zoneId;\n\n      trace.push({\n        createdAt: zone.createdAt,\n        runAt: runAt,\n        stack: stack,\n        owner: zone.owner,\n        ownerArgs: ownerArgs,\n        events: events,\n        info: info,\n        zoneId: zone.id\n      });\n      zone = zone.parent;\n\n      setTimeout(processZone, 0);\n    } else {\n      callback(trace);\n    }\n  }\n}\n\ngetInfoArray = function (info = {}) {\n  return Object.keys(info)\n    .map(function (key, type) {\n      const value = info[key];\n      value.type = type;\n      return value;\n    });\n}\n\ngetTime = function () {\n  if(Kadira && Kadira.syncedDate) {\n    return Kadira.syncedDate.getTime();\n  } else {\n    return (new Date().getTime());\n  }\n}\n\ngetClientArch = function () {\n  if (Meteor.isCordova) {\n    return 'cordova.web';\n  } else if (typeof Meteor.isModern === 'undefined' || Meteor.isModern) {\n    return 'web.browser'\n  } else {\n    return 'web.browser.legacy'\n  }\n}\n\ncheckSizeAndPickFields = function(maxFieldSize) {\n  return function(obj) {\n    maxFieldSize = maxFieldSize || 100;\n    for(var key in obj) {\n      var value = obj[key];\n      try {\n        var valueStringified = JSON.stringify(value);\n        if(valueStringified.length > maxFieldSize) {\n          obj[key] = valueStringified.substr(0, maxFieldSize) + \" ...\";\n        } else {\n          obj[key] = value;\n        }\n      } catch(ex) {\n        obj[key] = 'Error: cannot stringify value';\n      }\n    }\n    return obj;\n  }\n}\n\nhttpRequest = function (method, url, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  /**\n   * IE8 and IE9 does not support CORS with the usual XMLHttpRequest object\n   * If XDomainRequest exists, use it to send errors.\n   * XDR can POST data to HTTPS endpoints only if current page uses HTTPS\n   */\n  if (window.XDomainRequest) {\n    var xdr = new XDomainRequest();\n    url = matchPageProtocol(url);\n\n    xdr.onload = function () {\n      var headers = { 'Content-Type': xdr.contentType };\n      var data = {};\n      try {\n        data = JSON.parse(xdr.responseText);\n      } catch (e) {}\n\n      callback(null, { content: xdr.responseText, data: data, headers: headers, statusCode: 200 });\n    }\n\n    xdr.onerror = function () {\n      callback({ statusCode: 404 });\n    };\n    xdr.onprogress = function () {\n      // onprogress must be set. Otherwise, ie doesn't handle duplicate requests\n      // correctly.\n    };\n\n    xdr.open(method, url);\n\n    setTimeout(() => {\n      var content = options.content;\n      if (typeof content === 'object') {\n        content = JSON.stringify(content);\n      }\n      // delaying send fixes issues when multiple xdr requests are made\n      // at the same time.\n      xdr.send(options.content || null);\n    }, 0)\n\n    function matchPageProtocol (endpoint) {\n      var withoutProtocol = endpoint.substr(endpoint.indexOf(':') + 1);\n      return window.location.protocol + withoutProtocol;\n    }\n  } else {\n    // Based on Meteor's HTTP package. Uses XMLHttpRequest\n    var content = options.content;\n\n    // wrap callback to add a 'response' property on an error, in case\n    // we have both (http 4xx/5xx error, which has a response payload)\n    callback = (function (callback) {\n      var called = false;\n      return function (error, response) {\n        if (!called) {\n          called = true;\n          if (error && response) {\n            error.response = response;\n          }\n          callback(error, response);\n        }\n      };\n    })(callback);\n\n    try {\n      if (typeof XMLHttpRequest === \"undefined\") {\n        throw new Error(\"Can't create XMLHttpRequest\");\n      }\n      \n      var xhr = new XMLHttpRequest();\n\n      xhr.open(method, url, true);\n\n      if (options.headers) {\n        Object.keys(options.headers).forEach(function (key) {\n          xhr.setRequestHeader(key, options.headers[key]);\n        });\n      }\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) { // COMPLETE\n          if (!xhr.status) {\n            // no HTTP response\n            callback(new Error(\"Connection lost\"));\n          } else {\n            var response = {};\n            response.statusCode = xhr.status;\n            response.content = xhr.responseText;\n\n            // Read Content-Type header, up to a ';' if there is one.\n            // A typical header might be \"application/json; charset=utf-8\"\n            // or just \"application/json\".\n            var contentType = (xhr.getResponseHeader('content-type') || ';').split(';')[0];\n\n            // Only try to parse data as JSON if server sets correct content type.\n            if (['application/json',\n              'text/javascript',\n              'application/javascript',\n              'application/x-javascript',\n            ].indexOf(contentType) >= 0) {\n              try {\n                response.data = JSON.parse(response.content);\n              } catch (err) {\n                response.data = null;\n              }\n            } else {\n              response.data = null;\n            }\n\n            var error = null;\n            if (response.statusCode >= 400) {\n              var message = \"failed [\" + response.statusCode + \"]\";\n\n              if (response.content) {\n                var stringContent = typeof response.content == \"string\" ?\n                  response.content : response.content.toString();\n                stringContent = stringContent.replace(/\\n/g, ' ');\n                stringContent = stringContent.length > 500 ? stringContent.slice(0, length) + '...' : stringContent;\n                message += ' ' + stringContent;\n              }\n\n              error = new Error(message);\n            }\n\n            callback(error, response);\n          }\n        }\n      };\n\n      xhr.send(content);\n\n    } catch (err) {\n      callback(err);\n    }\n  }\n};\n"]},"sourceType":"module","hash":"7b7358c7196d1d357c0d71d1b2c1c05025945425"}
