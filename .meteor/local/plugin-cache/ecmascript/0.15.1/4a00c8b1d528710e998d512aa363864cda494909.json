{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/kadira.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/montiapm:agent/lib/kadira.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/kadira.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/kadira.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/kadira.js"}},"code":"let HttpModel;\nmodule.link(\"./models/http\", {\n  default(v) {\n    HttpModel = v;\n  }\n\n}, 0);\nlet packageMap;\nmodule.link(\"./.meteor-package-versions\", {\n  default(v) {\n    packageMap = v;\n  }\n\n}, 1);\n\nvar hostname = Npm.require('os').hostname();\n\nvar logger = Npm.require('debug')('kadira:apm');\n\nvar Fibers = Npm.require('fibers');\n\nvar KadiraCore = Npm.require('monti-apm-core').Kadira;\n\nKadira.models = {};\nKadira.options = {};\nKadira.env = {\n  currentSub: null,\n  // keep current subscription inside ddp\n  kadiraInfo: new Meteor.EnvironmentVariable()\n};\nKadira.waitTimeBuilder = new WaitTimeBuilder();\nKadira.errors = [];\nKadira.errors.addFilter = Kadira.errors.push.bind(Kadira.errors);\nKadira.models.methods = new MethodsModel();\nKadira.models.pubsub = new PubsubModel();\nKadira.models.system = new SystemModel();\nKadira.models.http = new HttpModel();\nKadira.docSzCache = new DocSzCache(100000, 10);\n\nKadira.connect = function (appId, appSecret, options) {\n  options = options || {};\n  options.appId = appId;\n  options.appSecret = appSecret;\n  options.payloadTimeout = options.payloadTimeout || 1000 * 20;\n  options.endpoint = options.endpoint || \"https://engine.montiapm.com\";\n  options.clientEngineSyncDelay = options.clientEngineSyncDelay || 10000;\n  options.thresholds = options.thresholds || {};\n  options.isHostNameSet = !!options.hostname;\n  options.hostname = options.hostname || hostname;\n  options.proxy = options.proxy || null;\n  options.recordIPAddress = options.recordIPAddress || 'full';\n  options.eventStackTrace = options.eventStackTrace || false;\n\n  if (options.documentSizeCacheSize) {\n    Kadira.docSzCache = new DocSzCache(options.documentSizeCacheSize, 10);\n  } // remove trailing slash from endpoint url (if any)\n\n\n  if (_.last(options.endpoint) === '/') {\n    options.endpoint = options.endpoint.substr(0, options.endpoint.length - 1);\n  } // error tracking is enabled by default\n\n\n  if (options.enableErrorTracking === undefined) {\n    options.enableErrorTracking = true;\n  } // uploading sourcemaps is enabled by default in production\n\n\n  if (options.uploadSourceMaps === undefined && Meteor.isProduction) {\n    options.uploadSourceMaps = true;\n  }\n\n  Kadira.options = options;\n  Kadira.options.authHeaders = {\n    'KADIRA-APP-ID': Kadira.options.appId,\n    'KADIRA-APP-SECRET': Kadira.options.appSecret\n  };\n\n  if (appId && appSecret) {\n    options.appId = options.appId.trim();\n    options.appSecret = options.appSecret.trim();\n    Kadira.coreApi = new KadiraCore({\n      appId: options.appId,\n      appSecret: options.appSecret,\n      endpoint: options.endpoint,\n      hostname: options.hostname,\n      agentVersion: packageMap['montiapm:agent'] || '<unknown>'\n    });\n\n    Kadira.coreApi._checkAuth().then(function () {\n      logger('connected to app: ', appId);\n      console.log('Monti APM: Successfully connected');\n\n      Kadira._sendAppStats();\n\n      Kadira._schedulePayloadSend();\n    }).catch(function (err) {\n      if (err.message === \"Unauthorized\") {\n        console.log('Monti APM: authentication failed - check your appId & appSecret');\n      } else {\n        console.log('Monti APM: unable to connect. ' + err.message);\n      }\n    });\n  } else {\n    throw new Error('Monti APM: required appId and appSecret');\n  }\n\n  Kadira.syncedDate = new Ntp(options.endpoint);\n  Kadira.syncedDate.sync();\n  Kadira.models.error = new ErrorModel(appId); // handle pre-added filters\n\n  var addFilterFn = Kadira.models.error.addFilter.bind(Kadira.models.error);\n  Kadira.errors.forEach(addFilterFn);\n  Kadira.errors = Kadira.models.error; // setting runtime info, which will be sent to kadira\n\n  __meteor_runtime_config__.kadira = {\n    appId: appId,\n    endpoint: options.endpoint,\n    clientEngineSyncDelay: options.clientEngineSyncDelay,\n    recordIPAddress: options.recordIPAddress\n  };\n\n  if (options.enableErrorTracking) {\n    Kadira.enableErrorTracking();\n  } else {\n    Kadira.disableErrorTracking();\n  } // start tracking errors\n\n\n  Meteor.startup(function () {\n    TrackUncaughtExceptions();\n    TrackUnhandledRejections();\n    TrackMeteorDebug();\n  });\n  Meteor.publish(null, function () {\n    var options = __meteor_runtime_config__.kadira;\n    this.added('kadira_settings', Random.id(), options);\n    this.ready();\n  }); // notify we've connected\n\n  Kadira.connected = true;\n}; //track how many times we've sent the data (once per minute)\n\n\nKadira._buildPayload = function () {\n  var payload = {\n    host: Kadira.options.hostname,\n    clientVersions: getClientVersions()\n  };\n\n  var buildDetailedInfo = Kadira._isDetailedInfo();\n\n  _.extend(payload, Kadira.models.methods.buildPayload(buildDetailedInfo));\n\n  _.extend(payload, Kadira.models.pubsub.buildPayload(buildDetailedInfo));\n\n  _.extend(payload, Kadira.models.system.buildPayload());\n\n  _.extend(payload, Kadira.models.http.buildPayload());\n\n  if (Kadira.options.enableErrorTracking) {\n    _.extend(payload, Kadira.models.error.buildPayload());\n  }\n\n  return payload;\n};\n\nKadira._countDataSent = 0;\nKadira._detailInfoSentInterval = Math.ceil(1000 * 60 / Kadira.options.payloadTimeout);\n\nKadira._isDetailedInfo = function () {\n  return Kadira._countDataSent++ % Kadira._detailInfoSentInterval == 0;\n};\n\nKadira._sendAppStats = function () {\n  var appStats = {};\n  appStats.release = Meteor.release;\n  appStats.protocolVersion = '1.0.0';\n  appStats.packageVersions = [];\n  appStats.clientVersions = getClientVersions();\n\n  _.each(Package, function (v, name) {\n    appStats.packageVersions.push({\n      name: name,\n      version: packageMap[name] || null\n    });\n  });\n\n  Kadira.coreApi.sendData({\n    startTime: new Date(),\n    appStats: appStats\n  }).then(function (body) {\n    handleApiResponse(body);\n  }).catch(function (err) {\n    console.error('Monti APM Error on sending appStats:', err.message);\n  });\n};\n\nKadira._schedulePayloadSend = function () {\n  setTimeout(function () {\n    Kadira._schedulePayloadSend();\n\n    Kadira._sendPayload();\n  }, Kadira.options.payloadTimeout);\n};\n\nKadira._sendPayload = function () {\n  new Fibers(function () {\n    var payload = Kadira._buildPayload();\n\n    Kadira.coreApi.sendData(payload).then(function (body) {\n      handleApiResponse(body);\n    }).catch(function (err) {\n      console.log('Monti APM Error:', err.message);\n    });\n  }).run();\n}; // this return the __kadiraInfo from the current Fiber by default\n// if called with 2nd argument as true, it will get the kadira info from\n// Meteor.EnvironmentVariable\n//\n// WARNNING: returned info object is the reference object.\n//  Changing it might cause issues when building traces. So use with care\n\n\nKadira._getInfo = function (currentFiber, useEnvironmentVariable) {\n  currentFiber = currentFiber || Fibers.current;\n\n  if (currentFiber) {\n    if (useEnvironmentVariable) {\n      return Kadira.env.kadiraInfo.get();\n    }\n\n    return currentFiber.__kadiraInfo;\n  }\n}; // this does not clone the info object. So, use with care\n\n\nKadira._setInfo = function (info) {\n  Fibers.current.__kadiraInfo = info;\n};\n\nKadira.startContinuousProfiling = function () {\n  MontiProfiler.startContinuous(function onProfile(_ref) {\n    let {\n      profile,\n      startTime,\n      endTime\n    } = _ref;\n\n    if (!Kadira.connected) {\n      return;\n    }\n\n    Kadira.coreApi.sendData({\n      profiles: [{\n        profile,\n        startTime,\n        endTime\n      }]\n    }).catch(e => console.log('Monti: err sending cpu profile', e));\n  });\n};\n\nKadira.enableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = true;\n  Kadira.options.enableErrorTracking = true;\n};\n\nKadira.disableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = false;\n  Kadira.options.enableErrorTracking = false;\n};\n\nKadira.trackError = function (type, message, options) {\n  if (Kadira.options.enableErrorTracking && type && message) {\n    options = options || {};\n    options.subType = options.subType || 'server';\n    options.stacks = options.stacks || '';\n    var error = {\n      message: message,\n      stack: options.stacks\n    };\n    var trace = {\n      type: type,\n      subType: options.subType,\n      name: message,\n      errored: true,\n      at: Kadira.syncedDate.getTime(),\n      events: [['start', 0, {}], ['error', 0, {\n        error: error\n      }]],\n      metrics: {\n        total: 0\n      }\n    };\n    Kadira.models.error.trackError(error, trace);\n  }\n};\n\nKadira.ignoreErrorTracking = function (err) {\n  err._skipKadira = true;\n};\n\nKadira.startEvent = function (name) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var kadiraInfo = Kadira._getInfo();\n\n  if (kadiraInfo) {\n    return Kadira.tracer.event(kadiraInfo.trace, 'custom', data, {\n      name\n    });\n  }\n\n  return false;\n};\n\nKadira.endEvent = function (event, data) {\n  var kadiraInfo = Kadira._getInfo(); // The event could be false if it could not be started.\n  // Handle it here instead of requiring the app to.\n\n\n  if (kadiraInfo && event) {\n    Kadira.tracer.eventEnd(kadiraInfo.trace, event, data);\n  }\n};","map":{"version":3,"sources":["packages/montiapm:agent/lib/kadira.js"],"names":["HttpModel","module","link","default","v","packageMap","hostname","Npm","require","logger","Fibers","KadiraCore","Kadira","models","options","env","currentSub","kadiraInfo","Meteor","EnvironmentVariable","waitTimeBuilder","WaitTimeBuilder","errors","addFilter","push","bind","methods","MethodsModel","pubsub","PubsubModel","system","SystemModel","http","docSzCache","DocSzCache","connect","appId","appSecret","payloadTimeout","endpoint","clientEngineSyncDelay","thresholds","isHostNameSet","proxy","recordIPAddress","eventStackTrace","documentSizeCacheSize","_","last","substr","length","enableErrorTracking","undefined","uploadSourceMaps","isProduction","authHeaders","trim","coreApi","agentVersion","_checkAuth","then","console","log","_sendAppStats","_schedulePayloadSend","catch","err","message","Error","syncedDate","Ntp","sync","error","ErrorModel","addFilterFn","forEach","__meteor_runtime_config__","kadira","disableErrorTracking","startup","TrackUncaughtExceptions","TrackUnhandledRejections","TrackMeteorDebug","publish","added","Random","id","ready","connected","_buildPayload","payload","host","clientVersions","getClientVersions","buildDetailedInfo","_isDetailedInfo","extend","buildPayload","_countDataSent","_detailInfoSentInterval","Math","ceil","appStats","release","protocolVersion","packageVersions","each","Package","name","version","sendData","startTime","Date","body","handleApiResponse","setTimeout","_sendPayload","run","_getInfo","currentFiber","useEnvironmentVariable","current","get","__kadiraInfo","_setInfo","info","startContinuousProfiling","MontiProfiler","startContinuous","onProfile","profile","endTime","profiles","e","trackError","type","subType","stacks","stack","trace","errored","at","getTime","events","metrics","total","ignoreErrorTracking","_skipKadira","startEvent","data","tracer","event","endEvent","eventEnd"],"mappings":"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","sourcesContent":["import HttpModel from \"./models/http\";\nimport packageMap from './.meteor-package-versions';\n\nvar hostname = Npm.require('os').hostname();\nvar logger = Npm.require('debug')('kadira:apm');\nvar Fibers = Npm.require('fibers');\n\nvar KadiraCore = Npm.require('monti-apm-core').Kadira;\n\nKadira.models = {};\nKadira.options = {};\nKadira.env = {\n  currentSub: null, // keep current subscription inside ddp\n  kadiraInfo: new Meteor.EnvironmentVariable(),\n};\nKadira.waitTimeBuilder = new WaitTimeBuilder();\nKadira.errors = [];\nKadira.errors.addFilter = Kadira.errors.push.bind(Kadira.errors);\n\nKadira.models.methods = new MethodsModel();\nKadira.models.pubsub = new PubsubModel();\nKadira.models.system = new SystemModel();\nKadira.models.http = new HttpModel();\nKadira.docSzCache = new DocSzCache(100000, 10);\n\n\nKadira.connect = function(appId, appSecret, options) {\n  options = options || {};\n  options.appId = appId;\n  options.appSecret = appSecret;\n  options.payloadTimeout = options.payloadTimeout || 1000 * 20;\n  options.endpoint = options.endpoint || \"https://engine.montiapm.com\";\n  options.clientEngineSyncDelay = options.clientEngineSyncDelay || 10000;\n  options.thresholds = options.thresholds || {};\n  options.isHostNameSet = !!options.hostname;\n  options.hostname = options.hostname || hostname;\n  options.proxy = options.proxy || null;\n  options.recordIPAddress = options.recordIPAddress || 'full';\n  options.eventStackTrace = options.eventStackTrace || false;\n\n  if(options.documentSizeCacheSize) {\n    Kadira.docSzCache = new DocSzCache(options.documentSizeCacheSize, 10);\n  }\n\n  // remove trailing slash from endpoint url (if any)\n  if(_.last(options.endpoint) === '/') {\n    options.endpoint = options.endpoint.substr(0, options.endpoint.length - 1);\n  }\n\n  // error tracking is enabled by default\n  if(options.enableErrorTracking === undefined) {\n    options.enableErrorTracking = true;\n  }\n\n  // uploading sourcemaps is enabled by default in production\n  if (options.uploadSourceMaps === undefined && Meteor.isProduction) {\n    options.uploadSourceMaps = true;\n  }\n\n  Kadira.options = options;\n  Kadira.options.authHeaders = {\n    'KADIRA-APP-ID': Kadira.options.appId,\n    'KADIRA-APP-SECRET': Kadira.options.appSecret\n  };\n\n  if (appId && appSecret) {\n    options.appId = options.appId.trim();\n    options.appSecret = options.appSecret.trim();\n\n    Kadira.coreApi = new KadiraCore({\n      appId: options.appId,\n      appSecret: options.appSecret,\n      endpoint: options.endpoint,\n      hostname: options.hostname,\n      agentVersion: packageMap['montiapm:agent'] || '<unknown>'\n    });\n\n    Kadira.coreApi._checkAuth()\n      .then(function () {\n        logger('connected to app: ', appId);\n        console.log('Monti APM: Successfully connected');\n        Kadira._sendAppStats();\n        Kadira._schedulePayloadSend();\n      })\n      .catch(function (err) {\n        if (err.message === \"Unauthorized\") {\n          console.log('Monti APM: authentication failed - check your appId & appSecret')\n        } else {\n          console.log('Monti APM: unable to connect. ' + err.message);\n        }\n      });\n  } else {\n    throw new Error('Monti APM: required appId and appSecret');\n  }\n\n  Kadira.syncedDate = new Ntp(options.endpoint);\n  Kadira.syncedDate.sync();\n  Kadira.models.error = new ErrorModel(appId);\n\n  // handle pre-added filters\n  var addFilterFn = Kadira.models.error.addFilter.bind(Kadira.models.error);\n  Kadira.errors.forEach(addFilterFn);\n  Kadira.errors = Kadira.models.error;\n\n  // setting runtime info, which will be sent to kadira\n  __meteor_runtime_config__.kadira = {\n    appId: appId,\n    endpoint: options.endpoint,\n    clientEngineSyncDelay: options.clientEngineSyncDelay,\n    recordIPAddress: options.recordIPAddress,\n  };\n\n  if(options.enableErrorTracking) {\n    Kadira.enableErrorTracking();\n  } else {\n    Kadira.disableErrorTracking();\n  }\n\n  // start tracking errors\n  Meteor.startup(function () {\n    TrackUncaughtExceptions();\n    TrackUnhandledRejections();\n    TrackMeteorDebug();\n  })\n\n  Meteor.publish(null, function () {\n    var options = __meteor_runtime_config__.kadira;\n    this.added('kadira_settings', Random.id(), options);\n    this.ready();\n  });\n\n  // notify we've connected\n  Kadira.connected = true;\n};\n\n//track how many times we've sent the data (once per minute)\nKadira._buildPayload = function () {\n  var payload = {host: Kadira.options.hostname, clientVersions: getClientVersions()};\n  var buildDetailedInfo = Kadira._isDetailedInfo();\n  _.extend(payload, Kadira.models.methods.buildPayload(buildDetailedInfo));\n  _.extend(payload, Kadira.models.pubsub.buildPayload(buildDetailedInfo));\n  _.extend(payload, Kadira.models.system.buildPayload());\n  _.extend(payload, Kadira.models.http.buildPayload());\n\n  if(Kadira.options.enableErrorTracking) {\n    _.extend(payload, Kadira.models.error.buildPayload());\n  }\n\n  return payload;\n}\n\nKadira._countDataSent = 0;\nKadira._detailInfoSentInterval = Math.ceil((1000*60) / Kadira.options.payloadTimeout);\nKadira._isDetailedInfo = function () {\n  return (Kadira._countDataSent++ % Kadira._detailInfoSentInterval) == 0;\n}\n\nKadira._sendAppStats = function () {\n  var appStats = {};\n  appStats.release = Meteor.release;\n  appStats.protocolVersion = '1.0.0';\n  appStats.packageVersions = [];\n  appStats.clientVersions = getClientVersions();\n\n  _.each(Package, function (v, name) {\n    appStats.packageVersions.push({\n      name: name,\n      version: packageMap[name] || null\n    });\n  });\n\n  Kadira.coreApi.sendData({\n    startTime: new Date(),\n    appStats: appStats\n  }).then(function(body) {\n    handleApiResponse(body);\n  }).catch(function(err) {\n    console.error('Monti APM Error on sending appStats:', err.message);\n  });\n}\n\nKadira._schedulePayloadSend = function () {\n  setTimeout(function () {\n    Kadira._schedulePayloadSend();\n    Kadira._sendPayload();\n  }, Kadira.options.payloadTimeout);\n}\n\nKadira._sendPayload = function () {\n  new Fibers(function() {\n    var payload = Kadira._buildPayload();\n    Kadira.coreApi.sendData(payload)\n    .then(function (body) {\n      handleApiResponse(body);\n    })\n    .catch(function(err) {\n      console.log('Monti APM Error:', err.message);\n    });\n  }).run();\n}\n\n// this return the __kadiraInfo from the current Fiber by default\n// if called with 2nd argument as true, it will get the kadira info from\n// Meteor.EnvironmentVariable\n//\n// WARNNING: returned info object is the reference object.\n//  Changing it might cause issues when building traces. So use with care\nKadira._getInfo = function(currentFiber, useEnvironmentVariable) {\n  currentFiber = currentFiber || Fibers.current;\n  if(currentFiber) {\n    if(useEnvironmentVariable) {\n      return Kadira.env.kadiraInfo.get();\n    }\n    return currentFiber.__kadiraInfo;\n  }\n};\n\n// this does not clone the info object. So, use with care\nKadira._setInfo = function(info) {\n  Fibers.current.__kadiraInfo = info;\n};\n\nKadira.startContinuousProfiling = function () {\n  MontiProfiler.startContinuous(function onProfile({ profile, startTime, endTime }) {\n    if (!Kadira.connected) {\n      return;\n    }\n\n    Kadira.coreApi.sendData({ profiles: [{profile, startTime, endTime }]})\n      .catch(e => console.log('Monti: err sending cpu profile', e));\n  });\n}\n\nKadira.enableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = true;\n  Kadira.options.enableErrorTracking = true;\n};\n\nKadira.disableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = false;\n  Kadira.options.enableErrorTracking = false;\n};\n\nKadira.trackError = function (type, message, options) {\n  if(Kadira.options.enableErrorTracking && type && message) {\n    options = options || {};\n    options.subType = options.subType || 'server';\n    options.stacks = options.stacks || '';\n    var error = {message: message, stack: options.stacks};\n    var trace = {\n      type: type,\n      subType: options.subType,\n      name: message,\n      errored: true,\n      at: Kadira.syncedDate.getTime(),\n      events: [['start', 0, {}], ['error', 0, {error: error}]],\n      metrics: {total: 0}\n    };\n    Kadira.models.error.trackError(error, trace);\n  }\n}\n\nKadira.ignoreErrorTracking = function (err) {\n  err._skipKadira = true;\n}\n\nKadira.startEvent = function (name, data = {}) {\n  var kadiraInfo = Kadira._getInfo();\n  if(kadiraInfo) {\n    return Kadira.tracer.event(kadiraInfo.trace, 'custom', data, { name });\n  }\n\n  return false\n}\n\nKadira.endEvent = function (event, data) {\n  var kadiraInfo = Kadira._getInfo();\n\n  // The event could be false if it could not be started.\n  // Handle it here instead of requiring the app to.\n  if (kadiraInfo && event) {\n    Kadira.tracer.eventEnd(kadiraInfo.trace, event, data);\n  }\n}\n"]},"sourceType":"module","hash":"4a00c8b1d528710e998d512aa363864cda494909"}
