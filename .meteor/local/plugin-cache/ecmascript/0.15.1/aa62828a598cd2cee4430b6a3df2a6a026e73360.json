{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/imports/reactui/layout/LoginFormViews.jsx","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"imports/reactui/layout/LoginFormViews.jsx","filename":"/home/momen/projects/spotmycrib-master/imports/reactui/layout/LoginFormViews.jsx","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/imports/reactui/layout/LoginFormViews.jsx","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/reactui/layout/LoginFormViews.jsx"}},"code":"var _assertThisInitialized;\n\nmodule.link(\"@babel/runtime/helpers/assertThisInitialized\", {\n  default: function (v) {\n    _assertThisInitialized = v;\n  }\n}, 0);\n\nvar _inheritsLoose;\n\nmodule.link(\"@babel/runtime/helpers/inheritsLoose\", {\n  default: function (v) {\n    _inheritsLoose = v;\n  }\n}, 1);\nmodule.export({\n  LoginFormSignInView: function () {\n    return LoginFormSignInView;\n  },\n  LoginFormSignUpView: function () {\n    return LoginFormSignUpView;\n  },\n  LoginFormSignUpViewLandlord: function () {\n    return LoginFormSignUpViewLandlord;\n  },\n  LoginFormResetPasswordView: function () {\n    return LoginFormResetPasswordView;\n  }\n});\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar React, Component;\nmodule.link(\"react\", {\n  \"default\": function (v) {\n    React = v;\n  },\n  Component: function (v) {\n    Component = v;\n  }\n}, 1);\nvar withTracker;\nmodule.link(\"meteor/react-meteor-data\", {\n  withTracker: function (v) {\n    withTracker = v;\n  }\n}, 2);\nvar LoginFormMessages, SocialLoginButtonsT;\nmodule.link(\"./MainLayoutHeader\", {\n  LoginFormMessages: function (v) {\n    LoginFormMessages = v;\n  },\n  SocialLoginButtonsT: function (v) {\n    SocialLoginButtonsT = v;\n  }\n}, 3);\n\nvar LoginFormSignInView = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoginFormSignInView, _Component);\n\n  function LoginFormSignInView(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    if (!props.onPage) props.onPage = false;\n    _this.state = {\n      isLoading: true,\n      formMessages: {\n        errors: []\n      }\n    }; // this.forgotPwdHandler = this.forgotPwdHandler.bind(this)\n\n    _this.signInHandler = _this.signInHandler.bind(_assertThisInitialized(_this)); // this.signUpHandler = this.signUpHandler.bind(this)\n\n    return _this;\n  }\n\n  var _proto = LoginFormSignInView.prototype;\n\n  _proto.componentDidMount = function () {\n    function componentDidMount() {\n      $('#signin-div').find('#email').focus();\n      $('.new-focus').click(function () {\n        $('#signin-div').find('#email').focus();\n      });\n      this.setState({\n        isLoading: false\n      });\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto.signInHandler = function () {\n    function signInHandler(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var usernameInput = $(\".login-input-email-LoginFormSignInView\");\n      var passwordInput = $(\".login-input-password-LoginFormSignInView\");\n      var username = usernameInput.val().trim();\n      var password = passwordInput.val().trim();\n      var validatedEmail = LoginFormValidation.email(username);\n      var validatedPassword = LoginFormValidation.password(password, {\n        validationLevel: \"exists\"\n      });\n      var errors = [];\n      this.setState({\n        formMessages: {}\n      });\n      this.setState({\n        isLoading: true\n      });\n\n      if (validatedEmail !== true) {\n        errors.push(validatedEmail);\n      }\n\n      if (validatedPassword !== true) {\n        errors.push(validatedPassword);\n      }\n\n      if (errors.length) {\n        this.setState({\n          formMessages: {\n            errors: errors\n          }\n        });\n        this.setState({\n          isLoading: false\n        });\n        return;\n      }\n\n      this.loginCallBack = function (error) {\n        fbq('track', 'EmailUserLogin' + (error ? \"Failed\" : \"Successful\"));\n        ga('send', 'event', 'General', 'userLoginSignup', 'Email Login ' + (error ? \"Failed\" : \"Successful\"));\n\n        _this2.setState({\n          isLoading: false\n        });\n\n        if (error) {\n          console.log(error);\n\n          if (error.reason == 'User has no password set' || error.reason == 'User not found') {\n            _this2.isSocialAccountCallback = function (err1, result) {\n              if (err1) this.setState({\n                formMessages: {\n                  errors: [err1]\n                }\n              });else this.setState({\n                formMessages: {\n                  info: [result]\n                }\n              });\n            };\n\n            _this2.isSocialAccountCallback = _this2.isSocialAccountCallback.bind(_this2);\n            Meteor.call('isSocialAccount', username, _this2.isSocialAccountCallback);\n          } // Show some error messages above the form fields\n\n\n          _this2.setState({\n            formMessages: {\n              errors: [error]\n            }\n          });\n        } else {\n          var isOnPage = false;\n          if (_this2.props.onPage) isOnPage = true;\n\n          if (!isOnPage) {\n            $('#signin-div , .fancybox-overlay').hide();\n            Session.set('showLoginDialog', false);\n            Session.set('showSignupDialog', false);\n            Session.set('showLoginSignupFancyBoxDialog', false);\n          }\n\n          Session.set('loginFlowComplete', true);\n          Session.set('loginFlowStart', undefined);\n          delete Session.keys.loginFlowStart;\n          Meteor.call(\"userLoggedIn\");\n        }\n      };\n\n      this.loginCallBack = this.loginCallBack.bind(this);\n      Meteor.loginWithPassword(username, password, this.loginCallBack);\n    }\n\n    return signInHandler;\n  }() // signUpHandler(){\n  //     Session.set('showForgotForm',false)\n  //     Session.set('showSignupForm',true)\n  //     Session.set('showLoginSignupFancyBoxDialog',true)\n  //     Session.set('showLoginDialog',true)\n  // }\n  // forgotPwdHandler(){\n  //     var isOnPage = false;\n  //     if(this.props.onPage)isOnPage = true;\n  //     if( !isOnPage ){\n  //         Session.set('showForgotForm',true)\n  //         Session.set('showSignupForm',false)\n  //         Session.set('showLoginSignupFancyBoxDialog',true)\n  //         Session.set('showLoginDialog',true)\n  //     }else{\n  //         Session.set('showForgotForm',true)\n  //     }\n  // }\n  ;\n\n  _proto.render = function () {\n    function render() {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"refund-div\"\n      }, /*#__PURE__*/React.createElement(\"h2\", null, \"Sign In \", this.props.loginFromApplyNowBtn ? \"Required\" : \"\")), this.props.loginFromApplyNowBtn ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"color-text info-msg-text\"\n      }, \"Login is required to apply for this property. Quickly use the options below to Login or Create yourself an account.\") : \"\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-text\",\n        style: {\n          paddingTop: '20px'\n        }\n      }, this.props.onPage ? \"\" : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SocialLoginButtonsT, {\n        buttonFor: \"login\",\n        usedInDlg: true\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"seperator\",\n        style: {\n          margin: '0 0 30px 0px'\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", null))), /*#__PURE__*/React.createElement(\"h5\", null, \"Enter your email and password below\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"signin-form\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-border\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input  \" + (this.state.formMessages.errors ? this.state.formMessages.errors.email ? \"has-error has-feedback\" : \"\" : \"\")\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"email\",\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        htmlFor: \"email-loginFormSignInView\",\n        className: \"login-input-email-LoginFormSignInView\"\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email-loginFormSignInView\"\n      }, \"EMAIL ID\"), /*#__PURE__*/React.createElement(\"span\", null)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input underline \" + (this.state.formMessages.errors ? this.state.formMessages.errors.password ? \"has-error has-feedback\" : \"\" : \"\")\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"current-password\",\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input-password-LoginFormSignInView\",\n        required: true,\n        htmlFor: \"password-loginFormSignInView\"\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password-loginFormSignInView\"\n      }, \"PASSWORD\"), /*#__PURE__*/React.createElement(\"span\", null))), /*#__PURE__*/React.createElement(LoginFormMessages, {\n        messages: this.state.formMessages\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"signup-btn\"\n      }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"transparent-btn btns\"\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(\"button\", {\n        className: \"blue-btn btns\",\n        type: \"submit\",\n        \"data-event-action\": \"submitSignInForm\",\n        onClick: this.signInHandler\n      }, \"SIGN IN\"), /*#__PURE__*/React.createElement(\"h5\", {\n        \"data-event-action\": \"forgotPassword\",\n        onClick: this.props.showForgotFormHandler\n      }, \"Forgot password?\"), this.props.onPage ? \"\" : /*#__PURE__*/React.createElement(\"h6\", null, \"Not registered? \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: '#0c68a7'\n        },\n        \"data-event-action\": \"signUp\",\n        onClick: this.props.showSignupFormHandler\n      }, \"Sign Up now\"))))));\n    }\n\n    return render;\n  }();\n\n  return LoginFormSignInView;\n}(Component);\n\n;\n\nvar LoginFormSignUpView = /*#__PURE__*/function (_Component2) {\n  _inheritsLoose(LoginFormSignUpView, _Component2);\n\n  function LoginFormSignUpView(props) {\n    var _this3;\n\n    _this3 = _Component2.call(this, props) || this;\n    _this3.state = {\n      isLoading: true,\n      formMessages: {\n        errors: []\n      }\n    };\n    _this3.forgotPwdHandler = _this3.forgotPwdHandler.bind(_assertThisInitialized(_this3)); // this.signInHandler = this.signInHandler.bind(this)\n\n    _this3.signUpHandler = _this3.signUpHandler.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  var _proto2 = LoginFormSignUpView.prototype;\n\n  _proto2.componentDidMount = function () {\n    function componentDidMount() {\n      $(\".SignupFormMobileField\").intlTelInput({\n        preferredCountries: [\"ie\", \"gb\", 'in']\n      });\n      $('#signin-div').find('#name').focus();\n      $('.new-focus').click(function () {\n        $('#signin-div').find('#name').focus();\n      });\n      this.setState({\n        isLoading: false\n      });\n    }\n\n    return componentDidMount;\n  }() // signInHandler(){\n  //     Session.set('showForgotForm',false)\n  //     Session.set('showSignupForm',false)\n  //     Session.set('showLoginSignupFancyBoxDialog',true)\n  //     Session.set('showLoginDialog',true)\n  // }\n  ;\n\n  _proto2.signUpHandler = function () {\n    function signUpHandler(event) {\n      event.preventDefault(); // var usernameInput = $(\".login-input--username\");\n\n      var emailInput = $(\".login-input-email-LoginFormSignUpView\");\n      var passwordInput = $(\".login-input-password-LoginFormSignUpView\");\n      var fullNameInput = $(\".login-input-fullName-LoginFormSignUpView\");\n      var mobileInput = $(\".login-input-mobile-LoginFormSignUpView\");\n      var email = emailInput.val().trim();\n      var password = passwordInput.val().trim();\n      var fullName = fullNameInput.val().trim();\n      var mobile = mobileInput.val().trim();\n      var validatedEmail = LoginFormValidation.email(email);\n      var validatedFullName = LoginFormValidation.username(fullName);\n      var validatedPassword = LoginFormValidation.password(password, {\n        validationLevel: \"length\"\n      });\n      var validatedMobile = LoginFormValidation.mobile(mobile);\n      var errors = [];\n      this.setState({\n        formMessages: {}\n      });\n      this.setState({\n        isLoading: true\n      });\n\n      if (validatedEmail !== true) {\n        errors.push(validatedEmail);\n      }\n\n      if (validatedFullName !== true) {\n        errors.push(validatedFullName);\n      }\n\n      if (validatedMobile !== true) {\n        errors.push(validatedMobile);\n      }\n\n      if (validatedPassword !== true) {\n        errors.push(validatedPassword);\n      }\n\n      if (errors.length) {\n        this.setState({\n          formMessages: {\n            errors: errors\n          }\n        });\n        this.setState({\n          isLoading: false\n        });\n        return;\n      }\n\n      var newUserData = {\n        // username: username,\n        email: email,\n        password: password,\n        profile: {\n          name: fullName,\n          email: email,\n          mobile: mobile\n        }\n      };\n\n      this.createUserCallback = function (error, result) {\n        fbq('track', 'EmailUserSignup' + (error ? \"Failed\" : \"Successful\"));\n        ga('send', 'event', 'General', 'userLoginSignup', 'Email Signup ' + (error ? \"Failed\" : \"Successful\"));\n        this.setState({\n          isLoading: false\n        });\n\n        if (error) {\n          // Show some error message\n          this.setState({\n            formMessages: {\n              errors: [error]\n            }\n          });\n        } else {\n          var isOnPage = false;\n          if (this.props.onPage) isOnPage = true;\n\n          if (!isOnPage) {\n            $('#signin-div , .fancybox-overlay').hide();\n            Session.set('showLoginDialog', false);\n            Session.set('showSignupDialog', false);\n            Session.set('showLoginSignupFancyBoxDialog', false);\n          }\n\n          Session.set('loginFlowComplete', true);\n          Session.set('loginFlowStart', undefined);\n          delete Session.keys.loginFlowStart;\n        }\n      };\n\n      this.createUserCallback = this.createUserCallback.bind(this);\n      Accounts.createUser(newUserData, this.createUserCallback);\n    }\n\n    return signUpHandler;\n  }();\n\n  _proto2.forgotPwdHandler = function () {\n    function forgotPwdHandler() {\n      var isOnPage = false;\n      if (this.props.onPage) isOnPage = true;\n\n      if (!isOnPage) {\n        Session.set('showForgotForm', true);\n        Session.set('showSignupForm', false);\n        Session.set('showLoginSignupFancyBoxDialog', true);\n        Session.set('showLoginDialog', true);\n      } else {\n        Session.set('showForgotForm', true);\n      }\n    }\n\n    return forgotPwdHandler;\n  }();\n\n  _proto2.render = function () {\n    function render() {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"refund-div\"\n      }, /*#__PURE__*/React.createElement(\"h2\", null, \"Sign Up \", this.props.loginFromApplyNowBtn ? \"Required\" : \"\")), this.props.loginFromApplyNowBtn ? /*#__PURE__*/React.createElement(\"p\", {\n        className: \"color-text info-msg-text\"\n      }, \"Login is required to apply for this property. Quickly use the options below to Login or Create yourself an account.\") : \"\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-text\",\n        style: {\n          paddingTop: '20px'\n        }\n      }, this.props.onPage ? \"\" : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SocialLoginButtonsT, {\n        buttonFor: \"signup\",\n        usedInDlg: true\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"seperator\",\n        style: {\n          margin: '0 0 30px 0px'\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", null))), /*#__PURE__*/React.createElement(\"h5\", null, \"Enter your details below\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"signin-form\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-border\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"name\",\n        className: \"login-input-fullName-LoginFormSignUpView\",\n        type: \"text\",\n        name: \"name\",\n        required: true,\n        htmlFor: \"email-loginFormSignUpView\"\n      }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email-loginFormSignUpView\"\n      }, \"FULL NAME\"), /*#__PURE__*/React.createElement(\"span\", null)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"email\",\n        className: \"login-input-email-LoginFormSignUpView\",\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        htmlFor: \"email-loginFormSignUpView\"\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email-loginFormSignUpView\"\n      }, \"EMAIL ID\"), /*#__PURE__*/React.createElement(\"span\", null)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"new-password\",\n        className: \"login-input-password-LoginFormSignUpView\",\n        type: \"password\",\n        name: \"password\",\n        required: true,\n        htmlFor: \"password-loginFormSignUpView\"\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"password-loginFormSignUpView\"\n      }, \"PASSWORD\"), /*#__PURE__*/React.createElement(\"span\", null), this.state.formMessages.errors ? this.state.formMessages.errors.password ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"help-block\"\n      }, this.state.formMessages.errors.password.map(function (p, i) {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          key: i\n        }, p.reason);\n      })) : \"\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"tel\",\n        className: \"login-input-mobile-LoginFormSignUpView SignupFormMobileField\",\n        type: \"text\",\n        name: \"mobile\",\n        htmlFor: \"mobile-loginFormSignUpView\"\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"mobile-loginFormSignUpView\"\n      }, \"MOBILE\"), /*#__PURE__*/React.createElement(\"span\", null))), /*#__PURE__*/React.createElement(LoginFormMessages, {\n        messages: this.state.formMessages\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"signup-btn\"\n      }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"transparent-btn btns\"\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(\"button\", {\n        className: \"blue-btn btns\",\n        type: \"Submit\",\n        \"data-event-category\": \"accounts\",\n        \"data-event-action\": \"register\",\n        onClick: this.signUpHandler\n      }, \"SIGN UP\"), this.props.onPage ? \"\" : /*#__PURE__*/React.createElement(\"p\", null, \"Already have an account? \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"javascript:;\"\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: '#0c67a6'\n        },\n        \"data-event-category\": \"accounts\",\n        \"data-event-action\": \"signIn\",\n        onClick: this.props.showSignInFormHandler\n      }, \"Sign In\")))))));\n    }\n\n    return render;\n  }();\n\n  return LoginFormSignUpView;\n}(Component);\n\n;\n\nvar LoginFormSignUpViewLandlord = /*#__PURE__*/function (_Component3) {\n  _inheritsLoose(LoginFormSignUpViewLandlord, _Component3);\n\n  function LoginFormSignUpViewLandlord(props) {\n    var _this4;\n\n    _this4 = _Component3.call(this, props) || this;\n    _this4.state = {\n      isLoading: true,\n      formMessages: {\n        errors: []\n      }\n    };\n    _this4.forgotPwdHandler = _this4.forgotPwdHandler.bind(_assertThisInitialized(_this4));\n    _this4.signInHandler = _this4.signInHandler.bind(_assertThisInitialized(_this4));\n    _this4.signUpHandler = _this4.signUpHandler.bind(_assertThisInitialized(_this4));\n    return _this4;\n  }\n\n  var _proto3 = LoginFormSignUpViewLandlord.prototype;\n\n  _proto3.componentDidMount = function () {\n    function componentDidMount() {\n      $(\".SignupFormMobileField\").intlTelInput({\n        preferredCountries: [\"ie\", \"gb\", 'in']\n      });\n      $('#signin-div').find('#name').focus();\n      $('.new-focus').click(function () {\n        $('#signin-div').find('#name').focus();\n      });\n      this.setState({\n        isLoading: false\n      });\n    }\n\n    return componentDidMount;\n  }();\n\n  _proto3.signInHandler = function () {\n    function signInHandler() {\n      Session.set('showForgotForm', false);\n      Session.set('showSignupForm', false);\n      Session.set('showLoginSignupFancyBoxDialog', true);\n      Session.set('showLoginDialog', true);\n    }\n\n    return signInHandler;\n  }();\n\n  _proto3.signUpHandler = function () {\n    function signUpHandler(event) {\n      event.preventDefault(); // var usernameInput = $(\".login-input--username\");\n\n      var emailInput = $(\".login-input-email-LoginFormSignUpViewLandlord\");\n      var passwordInput = $(\".login-input-password-LoginFormSignUpViewLandlord\");\n      var fullNameInput = $(\".login-input-fullName-LoginFormSignUpViewLandlord\");\n      var mobileInput = $(\".login-input-mobile-LoginFormSignUpViewLandlord\");\n      var email = emailInput.val().trim();\n      var password = passwordInput.val().trim();\n      var fullName = fullNameInput.val().trim();\n      var mobile = mobileInput.val().trim();\n      var validatedEmail = LoginFormValidation.email(email);\n      var validatedFullName = LoginFormValidation.username(fullName);\n      var validatedPassword = LoginFormValidation.password(password, {\n        validationLevel: \"length\"\n      });\n      var validatedMobile = LoginFormValidation.mobile(mobile);\n      var errors = [];\n      this.setState({\n        formMessages: {}\n      });\n      this.setState({\n        isLoading: true\n      });\n\n      if (validatedEmail !== true) {\n        errors.push(validatedEmail);\n      }\n\n      if (validatedFullName !== true) {\n        errors.push(validatedFullName);\n      }\n\n      if (validatedMobile !== true) {\n        errors.push(validatedMobile);\n      }\n\n      if (validatedPassword !== true) {\n        errors.push(validatedPassword);\n      }\n\n      if (errors.length) {\n        this.setState({\n          formMessages: {\n            errors: errors\n          }\n        });\n        this.setState({\n          isLoading: false\n        });\n        return;\n      }\n\n      var newUserData = {\n        // username: username,\n        email: email,\n        password: password,\n        profile: {\n          name: fullName,\n          email: email,\n          mobile: mobile\n        }\n      };\n\n      this.createUserCallback = function (error, result) {\n        fbq('track', 'EmailLandlordSignup' + (error ? \"Failed\" : \"Successful\"));\n        ga('send', 'event', 'General', 'userLoginSignup', 'Email Landlord Signup ' + (error ? \"Failed\" : \"Successful\"));\n        this.setState({\n          isLoading: false\n        });\n\n        if (error) {\n          // Show some error message\n          this.setState({\n            formMessages: {\n              errors: [error]\n            }\n          });\n        } else {\n          var isOnPage = false;\n          if (this.props.onPage) isOnPage = true;\n\n          if (!isOnPage) {\n            $('#signin-div , .fancybox-overlay').hide();\n            Session.set('showLoginDialog', false);\n            Session.set('showSignupDialog', false);\n            Session.set('showLoginSignupFancyBoxDialog', false);\n          }\n\n          Session.set('loginFlowComplete', true);\n          Session.set('loginFlowStart', undefined);\n          delete Session.keys.loginFlowStart;\n        }\n      };\n\n      this.createUserCallback = this.createUserCallback.bind(this);\n      Accounts.createUser(newUserData, this.createUserCallback);\n    }\n\n    return signUpHandler;\n  }();\n\n  _proto3.forgotPwdHandler = function () {\n    function forgotPwdHandler() {\n      var isOnPage = false;\n      if (this.props.onPage) isOnPage = true;\n\n      if (!isOnPage) {\n        Session.set('showForgotForm', true);\n        Session.set('showSignupForm', false);\n        Session.set('showLoginSignupFancyBoxDialog', true);\n        Session.set('showLoginDialog', true);\n      } else {\n        Session.set('showForgotForm', true);\n      }\n    }\n\n    return forgotPwdHandler;\n  }();\n\n  _proto3.radioHandler = function () {\n    function radioHandler() {}\n\n    return radioHandler;\n  }();\n\n  _proto3.render = function () {\n    function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"landlordSignup-div signup-div\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"refund-div\"\n      }, /*#__PURE__*/React.createElement(\"h2\", null, \"Landlord Join Now\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-text\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-12 rd-details\"\n      }, /*#__PURE__*/React.createElement(\"span\", null, \"I am a\"), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"account-type-label\",\n        htmlFor: \"rd1\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"account-type-radio\",\n        name: \"accountType\",\n        value: \"LANDLORD\",\n        type: \"radio\",\n        defaultChecked: true,\n        onChange: this.radioHandler\n      }), \"Landlord\"), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"account-type-label\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"account-type-radio\",\n        name: \"accountType\",\n        value: \"LANDLORD\",\n        type: \"radio\"\n      }), \"Agent\"), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"account-type-label\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"account-type-radio\",\n        name: \"accountType\",\n        value: \"LANDLORD\",\n        type: \"radio\"\n      }), \"Building Manager\"), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"account-type-label\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"account-type-radio\",\n        name: \"accountType\",\n        value: \"LANDLORD\",\n        type: \"radio\"\n      }), \"Tenant\"))), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"signin-form\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-border\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row frm-group\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"name\",\n        type: \"text\",\n        name: \"name\",\n        className: \"login-input-fullName-LoginFormSignUpViewLandlord\",\n        required: true\n      }), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(\"label\", null, \"FULL NAME\"), /*#__PURE__*/React.createElement(\"span\", null))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"email\",\n        type: \"email\",\n        name: \"email\",\n        className: \"login-input-email-LoginFormSignUpViewLandlord\",\n        required: true\n      }), /*#__PURE__*/React.createElement(\"label\", null, \"EMAIL ID\"), /*#__PURE__*/React.createElement(\"span\", null))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"new-password\",\n        type: \"password\",\n        name: \"password\",\n        className: \"login-input-password-LoginFormSignUpViewLandlord\",\n        required: true\n      }), /*#__PURE__*/React.createElement(\"label\", null, \"PASSWORD\"), /*#__PURE__*/React.createElement(\"span\", null))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-6\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"tel\",\n        type: \"number\",\n        name: \"mobile\",\n        className: \"login-input-mobile-LoginFormSignUpViewLandlord SignupFormMobileField\",\n        required: true\n      }), /*#__PURE__*/React.createElement(\"label\", null, \"MOBILE\"), /*#__PURE__*/React.createElement(\"span\", null)))), /*#__PURE__*/React.createElement(LoginFormMessages, {\n        messages: this.state.formMessages\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"signup-btn\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input\"\n      }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"transparent-btn btns\"\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(\"button\", {\n        className: \"blue-btn btns\",\n        type: \"submit\",\n        onClick: this.signUpHandler\n      }, \"SIGN UP\")), this.props.onPage ? \"\" : /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          paddingTop: 0\n        }\n      }, \"Already have an account? \", /*#__PURE__*/React.createElement(\"a\", {\n        href: \"javascript:;\"\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: '#0c67a6'\n        },\n        \"data-event-category\": \"accounts\",\n        \"data-event-action\": \"signIn\",\n        onClick: this.props.showSignInFormHandler\n      }, \"Sign In\")))))));\n    }\n\n    return render;\n  }();\n\n  return LoginFormSignUpViewLandlord;\n}(Component);\n\n;\n\nvar LoginFormResetPasswordView = /*#__PURE__*/function (_Component4) {\n  _inheritsLoose(LoginFormResetPasswordView, _Component4);\n\n  function LoginFormResetPasswordView(props) {\n    var _this5;\n\n    _this5 = _Component4.call(this, props) || this;\n    _this5.state = {\n      isLoading: true,\n      showForm: true,\n      formMessages: {\n        errors: []\n      }\n    };\n    _this5.forgotPwdHandler = _this5.forgotPwdHandler.bind(_assertThisInitialized(_this5)); // this.signInHandler = this.signInHandler.bind(this)\n    // this.signUpHandler = this.signUpHandler.bind(this)\n\n    _this5.tryAgainBtnHandler = _this5.tryAgainBtnHandler.bind(_assertThisInitialized(_this5));\n    return _this5;\n  }\n\n  var _proto4 = LoginFormResetPasswordView.prototype;\n\n  _proto4.componentDidMount = function () {\n    function componentDidMount() {\n      $('#signin-div').find('#email').focus();\n      $('.new-focus').click(function () {\n        $('#signin-div').find('#email').focus();\n      });\n      this.setState({\n        isLoading: false\n      });\n    }\n\n    return componentDidMount;\n  }() // signInHandler(){\n  //     var isOnPage = false;\n  //     if(this.props.onPage)isOnPage = true;\n  //     if( !isOnPage ){\n  //         Session.set('showForgotForm',false)\n  //         Session.set('showSignupForm',false)\n  //         Session.set('showLoginSignupFancyBoxDialog',true)\n  //         Session.set('showLoginDialog',true)\n  //     }else{\n  //         this.props.showSignInFormHandler();\n  //         // Session.set('showForgotForm',false)\n  //     }\n  // }\n  ;\n\n  _proto4.forgotPwdHandler = function () {\n    function forgotPwdHandler(event) {\n      var _this6 = this;\n\n      event.preventDefault();\n      var emailAddress = $(\".login-input-email-LoginFormResetPasswordView\").val().trim();\n      var validatedEmail = LoginFormValidation.email(emailAddress);\n      var errors = [];\n      this.setState({\n        formMessages: {}\n      });\n      this.setState({\n        isLoading: true\n      });\n\n      if (validatedEmail !== true) {\n        errors.push(validatedEmail);\n      }\n\n      if (errors.length) {\n        this.setState({\n          formMessages: {\n            errors: errors\n          }\n        });\n        this.setState({\n          isLoading: false\n        });\n        return;\n      }\n\n      this.forgotPwdCallback = function (error) {\n        fbq('track', 'ForgotPwd' + (error ? \"Failed\" : \"Successful\"));\n        ga('send', 'event', 'General', 'userLoginSignup', 'Forgot Password ' + (error ? \"Failed\" : \"Successful\"));\n\n        _this6.setState({\n          isLoading: false\n        }); // Show some message confirming result\n\n\n        if (error) {\n          console.log(error);\n\n          _this6.setState({\n            formMessages: {\n              errors: [error]\n            }\n          });\n        } else {\n          _this6.setState({\n            showForm: false\n          });\n\n          _this6.setState({\n            formMessages: {\n              info: [{\n                reason: \"Password reset mail sent.\"\n              }]\n            }\n          });\n        }\n      };\n\n      this.forgotPwdCallback = this.forgotPwdCallback.bind(this);\n      Accounts.forgotPassword({\n        email: emailAddress\n      }, this.forgotPwdCallback);\n    }\n\n    return forgotPwdHandler;\n  }();\n\n  _proto4.tryAgainBtnHandler = function () {\n    function tryAgainBtnHandler() {\n      this.state.setState({\n        showForm: true\n      });\n    }\n\n    return tryAgainBtnHandler;\n  }();\n\n  _proto4.contactUsClickHandler = function () {\n    function contactUsClickHandler() {\n      if ($) if ($.fancybox) $.fancybox.close();\n    }\n\n    return contactUsClickHandler;\n  }();\n\n  _proto4.render = function () {\n    function render() {\n      return /*#__PURE__*/React.createElement(\"div\", null, this.state.showForm ? /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"refund-div\"\n      }, /*#__PURE__*/React.createElement(\"h2\", null, \"Forgot password?\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-text\"\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"no-capitalize\"\n      }, \"Enter your registered Email ID\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"signin-form\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-border\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"styled-input  \" + (this.state.formMessages.errors ? this.state.formMessages.errors.email ? \"has-error has-feedback\" : \"\" : \"\")\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        autoComplete: \"email\",\n        type: \"email\",\n        name: \"email\",\n        required: true,\n        htmlFor: \"email-LoginFormResetPasswordView\",\n        className: \"login-input-email-LoginFormResetPasswordView\"\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email-LoginFormResetPasswordView\"\n      }, \"EMAIL ID\"), /*#__PURE__*/React.createElement(\"span\", null)), /*#__PURE__*/React.createElement(LoginFormMessages, {\n        messages: this.state.formMessages\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"signup-btn\"\n      }, this.state.isLoading ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"transparent-btn btns\"\n      }, \"Loading...\") : /*#__PURE__*/React.createElement(\"button\", {\n        className: \"blue-btn btns\",\n        type: \"submit\",\n        \"data-event-action\": \"accounts\",\n        onClick: this.forgotPwdHandler\n      }, \"Reset My Password\"), /*#__PURE__*/React.createElement(\"h6\", null, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: '#0c68a7'\n        },\n        \"data-event-category\": \"accounts\",\n        \"data-event-action\": \"signIn\",\n        onClick: this.props.showSignInFormHandler\n      }, \"Sign In\"))))))) : /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"refund-div\"\n      }, /*#__PURE__*/React.createElement(\"h2\", null, \"We just emailed you a link\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"profile-text\"\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"no-capitalize\"\n      }, \"Please check your email and click the secure link.\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"signup-btn\"\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"transparent-btn btns tryAgainBtn\",\n        onClick: this.tryAgainBtnHandler\n      }, \"Try again\")), /*#__PURE__*/React.createElement(\"p\", null), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"color-text contactusBtn\"\n      }, \"If you don\\u2019t see our email, check your spam folder or \", /*#__PURE__*/React.createElement(\"a\", {\n        href: FlowRouter.url('contactus'),\n        onClick: this.contactUsClickHandler\n      }, \"Contact us\")))));\n    }\n\n    return render;\n  }();\n\n  return LoginFormResetPasswordView;\n}(Component);\n\n;","map":{"version":3,"sources":["imports/reactui/layout/LoginFormViews.jsx"],"names":["_assertThisInitialized","module","link","default","v","_inheritsLoose","export","LoginFormSignInView","LoginFormSignUpView","LoginFormSignUpViewLandlord","LoginFormResetPasswordView","Meteor","React","Component","withTracker","LoginFormMessages","SocialLoginButtonsT","props","onPage","state","isLoading","formMessages","errors","signInHandler","bind","componentDidMount","$","find","focus","click","setState","event","preventDefault","usernameInput","passwordInput","username","val","trim","password","validatedEmail","LoginFormValidation","email","validatedPassword","validationLevel","push","length","loginCallBack","error","fbq","ga","console","log","reason","isSocialAccountCallback","err1","result","info","call","isOnPage","hide","Session","set","undefined","keys","loginFlowStart","loginWithPassword","render","loginFromApplyNowBtn","paddingTop","margin","showForgotFormHandler","color","showSignupFormHandler","forgotPwdHandler","signUpHandler","intlTelInput","preferredCountries","emailInput","fullNameInput","mobileInput","fullName","mobile","validatedFullName","validatedMobile","newUserData","profile","name","createUserCallback","Accounts","createUser","map","p","i","showSignInFormHandler","radioHandler","showForm","tryAgainBtnHandler","emailAddress","forgotPwdCallback","forgotPassword","contactUsClickHandler","fancybox","close","FlowRouter","url"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport React, { Component } from 'react';\nimport { withTracker } from 'meteor/react-meteor-data';\nimport {LoginFormMessages,SocialLoginButtonsT} from \"./MainLayoutHeader\";\n\nexport class LoginFormSignInView extends Component{\n  constructor(props){\n      super(props);\n      if(!props.onPage)props.onPage=false;\n      this.state = {\n          isLoading:true,\n          formMessages:{\n              errors:[]\n          }\n      }\n      // this.forgotPwdHandler = this.forgotPwdHandler.bind(this)\n      this.signInHandler = this.signInHandler.bind(this)\n      // this.signUpHandler = this.signUpHandler.bind(this)\n  }\n  componentDidMount(){\n      $('#signin-div').find('#email').focus();\n      $('.new-focus').click(function(){\n          $('#signin-div').find('#email').focus();\n      });\n      this.setState({isLoading:false})\n  }\n    signInHandler(event){\n        event.preventDefault();\n\n        let usernameInput = $(\".login-input-email-LoginFormSignInView\");\n        let passwordInput = $(\".login-input-password-LoginFormSignInView\");\n\n        let username = usernameInput.val().trim();\n        let password = passwordInput.val().trim();\n\n        let validatedEmail = LoginFormValidation.email(username);\n        let validatedPassword = LoginFormValidation.password(password, {validationLevel: \"exists\"});\n\n        var errors = []\n\n        this.setState({formMessages:{}})\n        this.setState({isLoading:true})\n\n        if (validatedEmail !== true) {\n            errors.push(validatedEmail);\n        }\n\n        if (validatedPassword !== true) {\n            errors.push(validatedPassword);\n        }\n\n        if (errors.length) {\n            this.setState({formMessages:{errors: errors}})\n            this.setState({isLoading:false})\n            return;\n        }\n\n        this.loginCallBack = (error) => {\n            fbq('track', 'EmailUserLogin'+ (error ? \"Failed\" : \"Successful\"));\n            ga('send', 'event', 'General', 'userLoginSignup', 'Email Login '+ (error ? \"Failed\" : \"Successful\"));\n\n            this.setState({isLoading:false})\n            if (error) {\n                console.log(error)\n                if(error.reason=='User has no password set' || error.reason=='User not found'){\n                    this.isSocialAccountCallback = function (err1,result) {\n                        if(err1) this.setState({formMessages:{errors: [err1]}})\n                        else this.setState({formMessages:{info: [result]}})\n                    }\n                    this.isSocialAccountCallback = this.isSocialAccountCallback.bind(this);\n                    Meteor.call('isSocialAccount',username,this.isSocialAccountCallback)\n                }\n\n                // Show some error messages above the form fields\n                this.setState({formMessages:{errors: [error]}})\n            } else {\n                var isOnPage = false;\n\n                if(this.props.onPage)isOnPage = true;\n\n                if( !isOnPage ){\n                    $('#signin-div , .fancybox-overlay').hide()\n                    Session.set('showLoginDialog',false)\n                    Session.set('showSignupDialog',false)\n                    Session.set('showLoginSignupFancyBoxDialog',false)\n                }\n                Session.set('loginFlowComplete', true)\n                Session.set('loginFlowStart',undefined)\n                delete Session.keys.loginFlowStart\n                Meteor.call(\"userLoggedIn\");\n            }\n        }\n        this.loginCallBack = this.loginCallBack.bind(this)\n        Meteor.loginWithPassword(username, password, this.loginCallBack);\n    }\n    // signUpHandler(){\n    //     Session.set('showForgotForm',false)\n    //     Session.set('showSignupForm',true)\n    //     Session.set('showLoginSignupFancyBoxDialog',true)\n    //     Session.set('showLoginDialog',true)\n    // }\n    // forgotPwdHandler(){\n    //     var isOnPage = false;\n    //     if(this.props.onPage)isOnPage = true;\n    //     if( !isOnPage ){\n    //         Session.set('showForgotForm',true)\n    //         Session.set('showSignupForm',false)\n    //         Session.set('showLoginSignupFancyBoxDialog',true)\n    //         Session.set('showLoginDialog',true)\n    //     }else{\n    //         Session.set('showForgotForm',true)\n    //     }\n    // }\n  render(){\n      return (\n<div>\n    <div className=\"refund-div\"><h2>Sign In {this.props.loginFromApplyNowBtn ? \"Required\":\"\"}</h2></div>\n    {this.props.loginFromApplyNowBtn ? (\n        <p className={\"color-text info-msg-text\"}>Login is required to apply for this property. Quickly use the options below to Login or Create yourself an account.</p>\n    ):\"\"}\n    <div className=\"profile-text\" style={{paddingTop:'20px'}}>\n        {this.props.onPage ? \"\" : (\n            <div>\n                <SocialLoginButtonsT buttonFor='login' usedInDlg={true}/>\n                <div className=\"seperator\" style={{margin: '0 0 30px 0px'}}><span></span></div>\n            </div>\n        )}\n\n        <h5>Enter your email and password below</h5>\n\n        <form className=\"signin-form\">\n            <div className=\"form-border\">\n\n                <div className={\"styled-input  \"+ (this.state.formMessages.errors ? this.state.formMessages.errors.email ? \"has-error has-feedback\" : \"\" : \"\") }>\n                    <input autoComplete=\"email\" type=\"email\" name=\"email\" required htmlFor=\"email-loginFormSignInView\"\n                           className=\"login-input-email-LoginFormSignInView\"/>\n                    <label htmlFor=\"email-loginFormSignInView\">EMAIL ID</label>\n                    <span></span>\n                </div>\n\n                <div className={\"styled-input underline \"+ (this.state.formMessages.errors ? this.state.formMessages.errors.password ? \"has-error has-feedback\" : \"\" : \"\") }>\n                    <input autoComplete=\"current-password\" type=\"password\" name=\"password\"\n                           className=\"login-input-password-LoginFormSignInView\" required htmlFor=\"password-loginFormSignInView\"/>\n                    <label htmlFor=\"password-loginFormSignInView\">PASSWORD</label>\n                    <span></span>\n                </div>\n\n\n            </div>\n            <LoginFormMessages messages={this.state.formMessages} />\n\n            <div className=\"signup-btn\">\n                {this.state.isLoading ? (\n                    <button className=\"transparent-btn btns\">Loading...</button>\n                ):(\n                    <button className=\"blue-btn btns\" type=\"submit\" data-event-action=\"submitSignInForm\" onClick={this.signInHandler}>SIGN IN</button>\n                )}\n                <h5 data-event-action=\"forgotPassword\" onClick={this.props.showForgotFormHandler}>Forgot password?</h5>\n                {this.props.onPage ? \"\" : (\n                    <h6>Not registered? <span style={{color: '#0c68a7'}} data-event-action=\"signUp\"  onClick={this.props.showSignupFormHandler}>Sign Up now</span></h6>\n                )}\n            </div>\n\n        </form>\n    </div>\n</div>\n      )\n  }\n};\n\nexport class LoginFormSignUpView extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoading:true,\n            formMessages:{\n                errors:[]\n            }\n        }\n        this.forgotPwdHandler = this.forgotPwdHandler.bind(this)\n        // this.signInHandler = this.signInHandler.bind(this)\n        this.signUpHandler = this.signUpHandler.bind(this)\n    }\n    componentDidMount(){\n        $(\".SignupFormMobileField\").intlTelInput({\n            preferredCountries:[\"ie\",\"gb\",'in']\n        });\n\n        $('#signin-div').find('#name').focus();\n        $('.new-focus').click(function(){\n            $('#signin-div').find('#name').focus();\n        });\n        this.setState({isLoading:false})\n    }\n    // signInHandler(){\n    //     Session.set('showForgotForm',false)\n    //     Session.set('showSignupForm',false)\n    //     Session.set('showLoginSignupFancyBoxDialog',true)\n    //     Session.set('showLoginDialog',true)\n    // }\n    signUpHandler(event){\n        event.preventDefault();\n\n        // var usernameInput = $(\".login-input--username\");\n        let emailInput = $(\".login-input-email-LoginFormSignUpView\");\n        let passwordInput = $(\".login-input-password-LoginFormSignUpView\");\n        let fullNameInput = $(\".login-input-fullName-LoginFormSignUpView\");\n        let mobileInput = $(\".login-input-mobile-LoginFormSignUpView\");\n\n        let email = emailInput.val().trim();\n        let password = passwordInput.val().trim();\n        let fullName = fullNameInput.val().trim();\n        let mobile = mobileInput.val().trim();\n\n        let validatedEmail = LoginFormValidation.email(email);\n        let validatedFullName = LoginFormValidation.username(fullName);\n        let validatedPassword = LoginFormValidation.password(password, {validationLevel: \"length\"});\n        let validatedMobile = LoginFormValidation.mobile(mobile);\n\n        var errors = []\n\n        this.setState({formMessages:{}})\n        this.setState({isLoading:true})\n\n\n        if (validatedEmail !== true) {\n            errors.push(validatedEmail);\n        }\n\n        if (validatedFullName !== true) {\n            errors.push(validatedFullName);\n        }\n\n        if (validatedMobile !== true) {\n            errors.push(validatedMobile);\n        }\n\n        if (validatedPassword !== true) {\n            errors.push(validatedPassword);\n        }\n\n        if (errors.length) {\n            this.setState({formMessages:{errors: errors}})\n            this.setState({isLoading:false})\n            return;\n        }\n\n        let newUserData = {\n            // username: username,\n            email: email,\n            password: password,\n            profile:{\n                name:fullName,\n                email: email,\n                mobile:mobile\n            }\n        };\n        this.createUserCallback = function (error, result) {\n            fbq('track', 'EmailUserSignup'+ (error ? \"Failed\" : \"Successful\"));\n            ga('send', 'event', 'General', 'userLoginSignup', 'Email Signup '+ (error ? \"Failed\" : \"Successful\"));\n\n            this.setState({isLoading:false})\n            if (error) {\n                // Show some error message\n                this.setState({formMessages:{errors: [error]}})\n            } else {\n                var isOnPage = false;\n                if(this.props.onPage)isOnPage = true;\n                if( !isOnPage ){\n                    $('#signin-div , .fancybox-overlay').hide()\n                    Session.set('showLoginDialog',false)\n                    Session.set('showSignupDialog',false)\n                    Session.set('showLoginSignupFancyBoxDialog',false)\n                }\n\n                Session.set('loginFlowComplete', true)\n                Session.set('loginFlowStart',undefined)\n                delete Session.keys.loginFlowStart\n            }\n        }\n        this.createUserCallback = this.createUserCallback.bind(this);\n        Accounts.createUser(newUserData, this.createUserCallback);\n    }\n    forgotPwdHandler(){\n        var isOnPage = false;\n        if(this.props.onPage)isOnPage = true;\n        if( !isOnPage ){\n            Session.set('showForgotForm',true)\n            Session.set('showSignupForm',false)\n            Session.set('showLoginSignupFancyBoxDialog',true)\n            Session.set('showLoginDialog',true)\n        }else{\n            Session.set('showForgotForm',true)\n        }\n    }\n    render(){\n        return (\n            <div>\n                <div className=\"refund-div\"><h2>Sign Up {this.props.loginFromApplyNowBtn ? \"Required\":\"\"}</h2></div>\n                {this.props.loginFromApplyNowBtn ? (\n                    <p className={\"color-text info-msg-text\"}>Login is required to apply for this property. Quickly use the options below to Login or Create yourself an account.</p>\n                ):\"\"}\n                <div className=\"profile-text\" style={{paddingTop:'20px'}}>\n                    {this.props.onPage ? \"\" : (\n                        <div>\n                            <SocialLoginButtonsT buttonFor='signup' usedInDlg={true}/>\n                            <div className=\"seperator\" style={{margin: '0 0 30px 0px'}}><span></span></div>\n                        </div>\n                    )}\n\n                    <h5>Enter your details below</h5>\n                    <form className=\"signin-form\">\n                        <div className=\"form-border\">\n\n                            <div className=\"styled-input\">\n                                <input autoComplete=\"name\" className=\"login-input-fullName-LoginFormSignUpView\" type=\"text\" name=\"name\"\n                                       required htmlFor=\"email-loginFormSignUpView\"/><br/>\n                                <label htmlFor=\"email-loginFormSignUpView\">FULL NAME</label>\n                                <span></span>\n                            </div>\n\n                            <div className=\"styled-input\">\n                                <input autoComplete=\"email\" className=\"login-input-email-LoginFormSignUpView\" type=\"email\" name=\"email\"\n                                       required htmlFor=\"email-loginFormSignUpView\"/>\n                                <label htmlFor=\"email-loginFormSignUpView\">EMAIL ID</label>\n                                <span></span>\n                            </div>\n\n                            <div className=\"styled-input\">\n                                <input autoComplete=\"new-password\" className=\"login-input-password-LoginFormSignUpView\" type=\"password\"\n                                       name=\"password\" required htmlFor=\"password-loginFormSignUpView\"/>\n                                <label htmlFor=\"password-loginFormSignUpView\">PASSWORD</label>\n                                <span></span>\n                                {this.state.formMessages.errors ? this.state.formMessages.errors.password ? (\n                                    <span className=\"help-block\">\n                                    {\n                                        this.state.formMessages.errors.password.map(function (p, i) {\n                                            return (<p key={i}>{p.reason}</p>)\n                                        })\n                                    }\n                                    </span>\n                                ) : \"\" : \"\"}\n                            </div>\n\n                            <div className=\"styled-input\">\n                                <input autoComplete=\"tel\" className=\"login-input-mobile-LoginFormSignUpView SignupFormMobileField\"\n                                       type=\"text\" name=\"mobile\" htmlFor=\"mobile-loginFormSignUpView\"/>\n                                <label htmlFor=\"mobile-loginFormSignUpView\">MOBILE</label>\n                                <span></span>\n                            </div>\n\n                        </div>\n                        <LoginFormMessages messages={this.state.formMessages} />\n\n                        <div className=\"signup-btn\">\n                            {this.state.isLoading ? (\n                                <button className=\"transparent-btn btns\">Loading...</button>\n                            ):(\n                                <button className=\"blue-btn btns\" type=\"Submit\" data-event-category=\"accounts\" data-event-action=\"register\"  onClick={this.signUpHandler}>SIGN UP</button>\n                            )}\n                            {this.props.onPage ? \"\" : (\n                                <p>Already have an account? <a href=\"javascript:;\"><span style={{color: '#0c67a6'}} data-event-category=\"accounts\" data-event-action=\"signIn\"  onClick={this.props.showSignInFormHandler}>Sign In</span></a></p>\n                            )}\n                        </div>\n\n                    </form>\n\n                </div>\n            </div>\n        )\n    }\n};\n\nexport class LoginFormSignUpViewLandlord extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoading:true,\n            formMessages:{\n                errors:[]\n            }\n        }\n        this.forgotPwdHandler = this.forgotPwdHandler.bind(this)\n        this.signInHandler = this.signInHandler.bind(this)\n        this.signUpHandler = this.signUpHandler.bind(this)\n    }\n    componentDidMount(){\n        $(\".SignupFormMobileField\").intlTelInput({\n            preferredCountries:[\"ie\",\"gb\",'in']\n        });\n\n        $('#signin-div').find('#name').focus();\n        $('.new-focus').click(function(){\n            $('#signin-div').find('#name').focus();\n        });\n        this.setState({isLoading:false})\n    }\n    signInHandler(){\n        Session.set('showForgotForm',false)\n        Session.set('showSignupForm',false)\n        Session.set('showLoginSignupFancyBoxDialog',true)\n        Session.set('showLoginDialog',true)\n    }\n    signUpHandler(event){\n        event.preventDefault();\n\n        // var usernameInput = $(\".login-input--username\");\n        let emailInput = $(\".login-input-email-LoginFormSignUpViewLandlord\");\n        let passwordInput = $(\".login-input-password-LoginFormSignUpViewLandlord\");\n        let fullNameInput = $(\".login-input-fullName-LoginFormSignUpViewLandlord\");\n        let mobileInput = $(\".login-input-mobile-LoginFormSignUpViewLandlord\");\n\n        let email = emailInput.val().trim();\n        let password = passwordInput.val().trim();\n        let fullName = fullNameInput.val().trim();\n        let mobile = mobileInput.val().trim();\n\n        let validatedEmail = LoginFormValidation.email(email);\n        let validatedFullName = LoginFormValidation.username(fullName);\n        let validatedPassword = LoginFormValidation.password(password, {validationLevel: \"length\"});\n        let validatedMobile = LoginFormValidation.mobile(mobile);\n\n        var errors = []\n\n        this.setState({formMessages:{}})\n        this.setState({isLoading:true})\n\n\n        if (validatedEmail !== true) {\n            errors.push(validatedEmail);\n        }\n\n        if (validatedFullName !== true) {\n            errors.push(validatedFullName);\n        }\n\n        if (validatedMobile !== true) {\n            errors.push(validatedMobile);\n        }\n\n        if (validatedPassword !== true) {\n            errors.push(validatedPassword);\n        }\n\n        if (errors.length) {\n            this.setState({formMessages:{errors: errors}})\n            this.setState({isLoading:false})\n            return;\n        }\n\n        let newUserData = {\n            // username: username,\n            email: email,\n            password: password,\n            profile:{\n                name:fullName,\n                email: email,\n                mobile:mobile\n            }\n        };\n        this.createUserCallback = function (error, result) {\n            fbq('track', 'EmailLandlordSignup'+ (error ? \"Failed\" : \"Successful\"));\n            ga('send', 'event', 'General', 'userLoginSignup', 'Email Landlord Signup '+ (error ? \"Failed\" : \"Successful\"));\n\n            this.setState({isLoading:false})\n            if (error) {\n                // Show some error message\n                this.setState({formMessages:{errors: [error]}})\n            } else {\n                var isOnPage = false;\n                if(this.props.onPage)isOnPage = true;\n                if( !isOnPage ){\n                    $('#signin-div , .fancybox-overlay').hide()\n                    Session.set('showLoginDialog',false)\n                    Session.set('showSignupDialog',false)\n                    Session.set('showLoginSignupFancyBoxDialog',false)\n                }\n\n                Session.set('loginFlowComplete', true)\n                Session.set('loginFlowStart',undefined)\n                delete Session.keys.loginFlowStart\n            }\n        }\n        this.createUserCallback = this.createUserCallback.bind(this);\n        Accounts.createUser(newUserData, this.createUserCallback);\n    }\n    forgotPwdHandler(){\n        var isOnPage = false;\n        if(this.props.onPage)isOnPage = true;\n        if( !isOnPage ){\n            Session.set('showForgotForm',true)\n            Session.set('showSignupForm',false)\n            Session.set('showLoginSignupFancyBoxDialog',true)\n            Session.set('showLoginDialog',true)\n        }else{\n            Session.set('showForgotForm',true)\n        }\n    }\n    radioHandler(){\n\n    }\n    render(){\n        return (\n            <div className=\"landlordSignup-div signup-div\">\n\n                <div className=\"refund-div\"><h2>Landlord Join Now</h2></div>\n                <div className=\"profile-text\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12 rd-details\">\n                            <span>I am a</span>\n                            <label className=\"account-type-label\" htmlFor=\"rd1\">\n                                <input className=\"account-type-radio\" name=\"accountType\" value=\"LANDLORD\" type=\"radio\"\n                                       defaultChecked onChange={this.radioHandler}/>\n                                    Landlord\n                            </label>\n                            <label className=\"account-type-label\">\n                                <input className=\"account-type-radio\" name=\"accountType\" value=\"LANDLORD\" type=\"radio\"/>\n                                    Agent\n                            </label>\n                            <label className=\"account-type-label\">\n                                <input className=\"account-type-radio\" name=\"accountType\" value=\"LANDLORD\" type=\"radio\"/>\n                                    Building Manager\n                            </label>\n                            <label className=\"account-type-label\">\n                                <input className=\"account-type-radio\" name=\"accountType\" value=\"LANDLORD\" type=\"radio\"/>\n                                    Tenant\n                            </label>\n                        </div>\n                    </div>\n\n\n                    <form className=\"signin-form\">\n                        <div className=\"form-border\">\n                            <div className=\"row frm-group\">\n                                <div className=\"col-sm-6\">\n                                    <div className=\"styled-input\">\n                                        <input autoComplete=\"name\" type=\"text\" name=\"name\"\n                                               className=\"login-input-fullName-LoginFormSignUpViewLandlord\" required/><br/>\n                                        <label>FULL NAME</label>\n                                        <span></span>\n                                    </div>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                    <div className=\"styled-input\">\n                                        <input autoComplete=\"email\" type=\"email\" name=\"email\"\n                                               className=\"login-input-email-LoginFormSignUpViewLandlord\" required/>\n                                        <label>EMAIL ID</label>\n                                        <span></span>\n                                    </div>\n                                </div>\n\n                                <div className=\"col-sm-6\">\n                                    <div className=\"styled-input\">\n                                        <input autoComplete=\"new-password\" type=\"password\" name=\"password\"\n                                               className=\"login-input-password-LoginFormSignUpViewLandlord\" required/>\n                                        <label>PASSWORD</label>\n                                        <span></span></div>\n                                </div>\n\n                                <div className=\"col-sm-6\">\n                                    <div className=\"styled-input\">\n                                        <input autoComplete=\"tel\" type=\"number\" name=\"mobile\"\n                                               className=\"login-input-mobile-LoginFormSignUpViewLandlord SignupFormMobileField\" required/>\n                                        <label>MOBILE</label>\n                                        <span></span>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <LoginFormMessages messages={this.state.formMessages}/>\n\n                        </div>\n                        <div className=\"signup-btn\">\n                            <div className=\"styled-input\">\n                                {this.state.isLoading ? (\n                                    <button className=\"transparent-btn btns\">Loading...</button>\n                                ):(\n                                    <button className=\"blue-btn btns\" type=\"submit\" onClick={this.signUpHandler}>SIGN UP</button>\n                                )}\n                            </div>\n                            {this.props.onPage ? \"\" : (\n                                <p style={{paddingTop: 0}}>Already have an account? <a href=\"javascript:;\"><span style={{color: '#0c67a6'}} data-event-category=\"accounts\" data-event-action=\"signIn\" onClick={this.props.showSignInFormHandler}>Sign In</span></a></p>\n                            )}\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        )\n    }\n};\n\nexport class LoginFormResetPasswordView extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            isLoading:true,\n            showForm:true,\n            formMessages:{\n                errors:[]\n            }\n        }\n        this.forgotPwdHandler = this.forgotPwdHandler.bind(this)\n        // this.signInHandler = this.signInHandler.bind(this)\n        // this.signUpHandler = this.signUpHandler.bind(this)\n        this.tryAgainBtnHandler = this.tryAgainBtnHandler.bind(this)\n    }\n    componentDidMount(){\n        $('#signin-div').find('#email').focus();\n        $('.new-focus').click(function(){\n            $('#signin-div').find('#email').focus();\n        });\n        this.setState({isLoading:false})\n    }\n    // signInHandler(){\n    //     var isOnPage = false;\n    //     if(this.props.onPage)isOnPage = true;\n    //     if( !isOnPage ){\n    //         Session.set('showForgotForm',false)\n    //         Session.set('showSignupForm',false)\n    //         Session.set('showLoginSignupFancyBoxDialog',true)\n    //         Session.set('showLoginDialog',true)\n    //     }else{\n    //         this.props.showSignInFormHandler();\n    //         // Session.set('showForgotForm',false)\n    //     }\n    // }\n    forgotPwdHandler(event){\n        event.preventDefault();\n\n        let emailAddress = $(\".login-input-email-LoginFormResetPasswordView\").val().trim();\n        let validatedEmail = LoginFormValidation.email(emailAddress);\n\n        var errors = []\n\n        this.setState({formMessages:{}})\n        this.setState({isLoading:true})\n\n        if (validatedEmail !== true) {\n            errors.push(validatedEmail);\n        }\n\n        if (errors.length) {\n            this.setState({formMessages:{errors: errors}})\n            this.setState({isLoading:false})\n            return;\n        }\n\n        this.forgotPwdCallback = (error) => {\n            fbq('track', 'ForgotPwd'+ (error ? \"Failed\" : \"Successful\"));\n            ga('send', 'event', 'General', 'userLoginSignup', 'Forgot Password '+ (error ? \"Failed\" : \"Successful\"));\n\n            this.setState({isLoading:false})\n            // Show some message confirming result\n            if (error) {\n                console.log(error)\n                this.setState({formMessages:{errors: [error]}})\n            } else {\n\n                this.setState({showForm:false})\n                this.setState({formMessages:{info: [{\n                            reason:  \"Password reset mail sent.\"\n                        }]\n                }})\n            }\n        };\n        this.forgotPwdCallback = this.forgotPwdCallback.bind(this);\n\n        Accounts.forgotPassword({ email: emailAddress}, this.forgotPwdCallback);\n\n    }\n    tryAgainBtnHandler(){\n        this.state.setState({showForm:true})\n    }\n    contactUsClickHandler(){\n        if($)\n            if($.fancybox)\n                $.fancybox.close();\n    }\n    render(){\n        return (\n            <div>\n                {this.state.showForm ? (\n                    <div>\n                        <div className=\"refund-div\">\n                            <h2>Forgot password?</h2>\n                        </div>\n                        <div className=\"profile-text\">\n                            <h5 className=\"no-capitalize\">Enter your registered Email ID</h5>\n                            <form className=\"signin-form\">\n                                <div className=\"form-border\">\n                                    <div className={\"styled-input  \" + (this.state.formMessages.errors ? this.state.formMessages.errors.email ? \"has-error has-feedback\" : \"\" : \"\")}>\n                                        <input autoComplete=\"email\" type=\"email\" name=\"email\" required\n                                               htmlFor=\"email-LoginFormResetPasswordView\"\n                                               className=\"login-input-email-LoginFormResetPasswordView\"/>\n                                        <label htmlFor=\"email-LoginFormResetPasswordView\">EMAIL ID</label>\n                                        <span></span>\n                                    </div>\n                                    <LoginFormMessages messages={this.state.formMessages}/>\n                                    <div className=\"signup-btn\">\n                                        {this.state.isLoading ? (\n                                            <button className=\"transparent-btn btns\">Loading...</button>\n                                        ) : (\n                                            <button className=\"blue-btn btns\" type=\"submit\" data-event-action=\"accounts\"\n                                                    onClick={this.forgotPwdHandler}>Reset My Password</button>\n                                        )}\n                                        <h6><span style={{color: '#0c68a7'}} data-event-category=\"accounts\"\n                                                  data-event-action=\"signIn\" onClick={this.props.showSignInFormHandler}>Sign In</span>\n                                        </h6>\n                                    </div>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                ) : (\n                    <div>\n                        <div className=\"refund-div\">\n                            <h2>We just emailed you a link</h2>\n                        </div>\n                        <div className=\"profile-text\">\n                            <h5 className=\"no-capitalize\">Please check your email and click the secure link.</h5>\n                            <div className=\"signup-btn\">\n                                <button className=\"transparent-btn btns tryAgainBtn\"\n                                        onClick={this.tryAgainBtnHandler}>Try again\n                                </button>\n                            </div>\n                            <p></p>\n                            <p className=\"color-text contactusBtn\">If you don’t see our email, check your spam folder\n                                or <a href={FlowRouter.url('contactus')} onClick={this.contactUsClickHandler}>Contact\n                                    us</a></p>\n                        </div>\n                    </div>\n                )}\n        </div>\n        )\n    }\n};"]},"sourceType":"module","hash":"aa62828a598cd2cee4430b6a3df2a6a026e73360"}
