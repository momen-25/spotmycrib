{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/error_reporters/tracker.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/montiapm:agent/lib/client/error_reporters/tracker.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/error_reporters/tracker.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/error_reporters/tracker.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/client/error_reporters/tracker.js"}},"code":"const origCompute = Tracker.Computation.prototype._compute;\nconst origAfterFlush = Tracker.afterFlush;\nconst origRunFlush = Tracker._runFlush; // Internal variable in the Tracker package set during Tracker._runFlush\n// If it is true, Tracker throws the error instead of using Meteor._debug\n// In that case, we should not report the error in afterFlush and\n// instead let another reporter handle it\n\nlet throwFirstError = false;\n\nTracker._runFlush = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  throwFirstError = !!options.throwFirstError;\n  return origRunFlush.apply(this, arguments);\n};\n\nTracker.afterFlush = function (func) {\n  return origAfterFlush(function () {\n    try {\n      return func();\n    } catch (e) {\n      if (Kadira.options.enableErrorTracking && !throwFirstError) {\n        var message = e.message;\n        var stack = e.stack;\n        var now = new Date().getTime();\n        Kadira.errors.sendError({\n          appId: Kadira.options.appId,\n          name: message,\n          type: 'client',\n          startTime: now,\n          subType: 'tracker.afterFlush',\n          info: getBrowserInfo(),\n          stacks: JSON.stringify([{\n            at: now,\n            events: [],\n            stack\n          }])\n        }); // Once the error is thrown, Tracker will call\n        // Meteor._debug 2 or 3 times. The last time will\n        // have the stack trace.\n\n        Kadira._ignoreDebugMessagesUntil(stack, 3);\n      }\n\n      throw e;\n    }\n  });\n};\n\nTracker.Computation.prototype._compute = function () {\n  try {\n    return origCompute.apply(this, arguments);\n  } catch (e) {\n    // During the first run, Tracker throws the error\n    // It will be handled by a different error reporter\n    if (Kadira.options.enableErrorTracking && !this.firstRun) {\n      var message = e.message;\n      var stack = e.stack;\n      var now = new Date().getTime();\n      Kadira.errors.sendError({\n        appId: Kadira.options.appId,\n        name: message,\n        type: 'client',\n        startTime: now,\n        subType: 'tracker.compute',\n        info: getBrowserInfo(),\n        stacks: JSON.stringify([{\n          at: now,\n          events: [],\n          stack\n        }])\n      }); // Once the error is thrown, Tracker will call\n      // Meteor._debug 2 or 3 times. The last time will\n      // have the stack trace.\n\n      Kadira._ignoreDebugMessagesUntil(stack, 3);\n    }\n\n    throw e;\n  }\n};","map":{"version":3,"sources":["packages/montiapm:agent/lib/client/error_reporters/tracker.js"],"names":["origCompute","Tracker","Computation","prototype","_compute","origAfterFlush","afterFlush","origRunFlush","_runFlush","throwFirstError","options","apply","arguments","func","e","Kadira","enableErrorTracking","message","stack","now","Date","getTime","errors","sendError","appId","name","type","startTime","subType","info","getBrowserInfo","stacks","JSON","stringify","at","events","_ignoreDebugMessagesUntil","firstRun"],"mappings":"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","sourcesContent":["const origCompute = Tracker.Computation.prototype._compute;\nconst origAfterFlush = Tracker.afterFlush;\nconst origRunFlush = Tracker._runFlush;\n\n// Internal variable in the Tracker package set during Tracker._runFlush\n// If it is true, Tracker throws the error instead of using Meteor._debug\n// In that case, we should not report the error in afterFlush and\n// instead let another reporter handle it\nlet throwFirstError = false;\n\nTracker._runFlush = function (options = {}) {\n  throwFirstError = !!options.throwFirstError\n  return origRunFlush.apply(this, arguments);\n}\n\nTracker.afterFlush = function (func) {\n  return origAfterFlush(function() {\n    try {\n      return func();\n    } catch (e) {\n      if (Kadira.options.enableErrorTracking && !throwFirstError) {\n        var message = e.message;\n        var stack = e.stack;\n        var now = (new Date().getTime());\n  \n        Kadira.errors.sendError({\n          appId: Kadira.options.appId,\n          name: message,\n          type: 'client',\n          startTime: now,\n          subType: 'tracker.afterFlush',\n          info: getBrowserInfo(),\n          stacks: JSON.stringify([{at: now, events: [], stack}])\n        });\n  \n        // Once the error is thrown, Tracker will call\n        // Meteor._debug 2 or 3 times. The last time will\n        // have the stack trace.\n        Kadira._ignoreDebugMessagesUntil(stack, 3);\n      }\n\n      throw e;\n    }\n  });\n}\n\nTracker.Computation.prototype._compute = function () {\n  try {\n    return origCompute.apply(this, arguments)\n  } catch(e) {\n    // During the first run, Tracker throws the error\n    // It will be handled by a different error reporter\n    if (Kadira.options.enableErrorTracking && !this.firstRun) {\n      var message = e.message;\n      var stack = e.stack;\n      var now = (new Date().getTime());\n\n      Kadira.errors.sendError({\n        appId: Kadira.options.appId,\n        name: message,\n        type: 'client',\n        startTime: now,\n        subType: 'tracker.compute',\n        info: getBrowserInfo(),\n        stacks: JSON.stringify([{at: now, events: [], stack}])\n      });\n\n      // Once the error is thrown, Tracker will call\n      // Meteor._debug 2 or 3 times. The last time will\n      // have the stack trace.\n      Kadira._ignoreDebugMessagesUntil(stack, 3);\n    }\n\n    throw e;\n  }\n}\n"]},"sourceType":"module","hash":"44275438be173b98899d494989602471bcb7e45b"}
