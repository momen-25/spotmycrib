{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/imports/api/properties.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"imports/api/properties.js","filename":"/home/momen/projects/spotmycrib-master/imports/api/properties.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/imports/api/properties.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/properties.js"}},"code":"module.link(\"./collections.js\");\nlet check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\n// import TokenGen from 'token-gen';\nMeteor.methods({\n  addProperty: function (data) {\n    console.log(\"common method addProperty called\");\n    const userId = Meteor.userId();\n    console.log(userId);\n\n    if (!userId) {\n      throw new Meteor.Error('not-authorized');\n    }\n\n    var doc = {\n      \"address\": {\n        \"address\": getA(data, 'address.address'),\n        \"county\": getA(data, 'address.county'),\n        \"area\": getA(data, 'address.area'),\n        \"country\": \"Ireland\"\n      },\n      \"type\": getA(data, 'type'),\n      \"baths\": parseInt(getA(data, 'baths')),\n      \"furnished\": getA(data, 'furnished') == \"true\" ? true : false,\n      \"contacts\": [{\n        \"name\": getA(data, 'contacts.0.name'),\n        \"phone\": getA(data, 'contacts.0.phone'),\n        \"email\": getA(data, 'contacts.0.email')\n      }],\n      \"about\": getA(data, 'about'),\n      \"amenities\": getA(data, 'amenities'),\n      \"createdByAgent\": userId,\n      \"isArchived\": false,\n      \"createdAt\": new Date(),\n      \"updatedAt\": new Date()\n    };\n    var slug = '';\n    if (doc.type) slug = doc.type;\n    if (doc.address.address) slug += '-' + doc.address.address;\n    if (doc.address.area) slug += '-' + doc.address.area;\n    if (doc.address.county) slug += '-' + doc.address.county;\n    doc.slug = slugify(slug); // {name: \"bedrooms.0.ensuite\", value: \"on\"}\n    // 8\n    // :\n    // {name: \"bedrooms.0.bedType\", value: \"single\"}\n    // \"bedrooms\" : [\n    //     {\n    //         \"bedType\" : \"double\",\n    //         \"ensuite\" : true\n    //     },\n    //     {\n    //         \"bedType\" : \"single\",\n    //         \"ensuite\" : false\n    //     }\n    // ],\n\n    var isImported = getA(data, 'isImported');\n\n    if (isImported == 'true') {\n      doc['isImported'] = true;\n      let url = getA(data, 'url');\n\n      if (url) {\n        doc.importData = {\n          'url': url,\n          'lastCheckedDate': new Date()\n        };\n      }\n    }\n\n    var numBedRoomCount = getA(data, 'numBedRoomCount');\n\n    if (numBedRoomCount) {\n      var bedrooms = [];\n\n      for (var i = 0; i < numBedRoomCount; i++) {\n        var bne = \"bedrooms.\" + i + \".ensuite\";\n        var bnt = \"bedrooms.\" + i + \".bedType\";\n        var tmp = {};\n        if (getA(data, bne)) tmp.ensuite = true;else tmp.ensuite = false;\n        tmp.bedType = getA(data, bnt);\n        bedrooms.push(tmp);\n      }\n\n      doc['bedrooms'] = bedrooms;\n      doc['bedCount'] = bedrooms.length;\n    } else {\n      doc['bedrooms'] = [];\n      doc['bedCount'] = '1'; //default 1\n    }\n\n    var docId = Collections.Properties.insert(doc); //, {validationContext: 'create'}, function(err, res) {\n    //     if (err) {\n    //         throw new Meteor.Error(400, Collections.Properties.simpleSchema().namedContext('create').invalidKeys());\n    //     }\n    //     return res;\n    // });\n\n    Meteor.call('addManageProperty', docId); //Don't show meteor error as users can also enable this later.\n\n    return docId;\n  }\n});\n\nArray.prototype.pushUnique = function (item) {\n  if (this.indexOf(item) == -1) {\n    //if(jQuery.inArray(item, this) == -1) {\n    this.push(item);\n    return true;\n  }\n\n  return false;\n};\n\nfunction getA(arr, find) {\n  if (!Array.isArray(arr)) return;\n  var eles = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]['name'] == find) eles.push(arr[i]['value']);\n  }\n\n  if (find == 'amenities') return eles;\n  if (eles.lenght > 1) return eles;\n  if (eles.lenght == 0) return false;\n  return eles[0];\n}\n\nfunction slugify(text) {\n  if (!text) return '';\n  const a = 'àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/_,:;';\n  const b = 'aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return text.toString().toLowerCase().replace(/\\s+/g, '-') // Replace spaces with -\n  .replace(p, c => b.charAt(a.indexOf(c))) // Replace special chars\n  .replace(/&/g, '-and-') // Replace & with 'and'\n  .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n  .replace(/\\-\\-+/g, '-') // Replace multiple - with single -\n  .replace(/^-+/, '') // Trim - from start of text\n  .replace(/-+$/, ''); // Trim - from end of text\n}","map":{"version":3,"sources":["imports/api/properties.js"],"names":["module","link","check","v","Meteor","methods","addProperty","data","console","log","userId","Error","doc","getA","parseInt","Date","slug","type","address","area","county","slugify","isImported","url","importData","numBedRoomCount","bedrooms","i","bne","bnt","tmp","ensuite","bedType","push","length","docId","Collections","Properties","insert","call","Array","prototype","pushUnique","item","indexOf","arr","find","isArray","eles","lenght","text","a","b","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt"],"mappings":"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","sourcesContent":["import \"./collections.js\";\nimport {check} from \"meteor/check\";\n// import TokenGen from 'token-gen';\n\nMeteor.methods({\n    addProperty: function(data) {\n        console.log(\"common method addProperty called\")\n\n        const userId = Meteor.userId();\n        console.log(userId)\n\n        if (!userId) {\n            throw new Meteor.Error('not-authorized');\n        }\n\n        var doc = {\n            \"address\" : {\n                \"address\" : getA(data,'address.address'),\n                \"county\" : getA(data,'address.county'),\n                \"area\" : getA(data,'address.area'),\n                \"country\" : \"Ireland\"\n            },\n            \"type\" : getA(data,'type'),\n            \"baths\" : parseInt(getA(data,'baths')),\n            \"furnished\" : getA(data,'furnished')==\"true\" ? true : false,\n            \"contacts\" : [\n                {\n                    \"name\" : getA(data,'contacts.0.name'),\n                    \"phone\" : getA(data,'contacts.0.phone'),\n                    \"email\" : getA(data,'contacts.0.email')\n                }\n            ],\n            \"about\" : getA(data,'about'),\n            \"amenities\" : getA(data,'amenities'),\n            \"createdByAgent\":userId,\n            \"isArchived\":false,\n            \"createdAt\":new Date(),\n            \"updatedAt\":new Date()\n        }\n        var slug = '';\n        if(doc.type)slug = doc.type\n        if(doc.address.address)slug += '-'+doc.address.address\n        if(doc.address.area)slug += '-'+doc.address.area\n        if(doc.address.county)slug += '-'+doc.address.county\n\n        doc.slug = slugify(slug);\n        // {name: \"bedrooms.0.ensuite\", value: \"on\"}\n        // 8\n        // :\n        // {name: \"bedrooms.0.bedType\", value: \"single\"}\n        // \"bedrooms\" : [\n        //     {\n        //         \"bedType\" : \"double\",\n        //         \"ensuite\" : true\n        //     },\n        //     {\n        //         \"bedType\" : \"single\",\n        //         \"ensuite\" : false\n        //     }\n        // ],\n\n        var isImported = getA(data,'isImported')\n        if(isImported=='true'){\n            doc['isImported']=true;\n            let url = getA(data,'url')\n            if(url){\n                doc.importData = {'url':url,'lastCheckedDate':new Date()}\n            }\n        }\n\n        var numBedRoomCount = getA(data,'numBedRoomCount')\n        if( numBedRoomCount ){\n            var bedrooms = [];\n            for(var i=0; i<numBedRoomCount; i++){\n                var bne = \"bedrooms.\"+i+\".ensuite\"\n                var bnt = \"bedrooms.\"+i+\".bedType\"\n                var tmp = {}\n\n                if(getA(data,bne)) tmp.ensuite = true;\n                else tmp.ensuite = false;\n                tmp.bedType = getA(data,bnt);\n\n                bedrooms.push(tmp)\n            }\n            doc['bedrooms'] = bedrooms;\n            doc['bedCount'] = bedrooms.length;\n        }else {\n            doc['bedrooms'] = [];\n            doc['bedCount'] = '1';//default 1\n        }\n\n        var docId = Collections.Properties.insert(doc);\n        //, {validationContext: 'create'}, function(err, res) {\n    //     if (err) {\n    //         throw new Meteor.Error(400, Collections.Properties.simpleSchema().namedContext('create').invalidKeys());\n    //     }\n    //     return res;\n    // });\n        Meteor.call('addManageProperty',docId);//Don't show meteor error as users can also enable this later.\n        return docId;\n    }\n})\nArray.prototype.pushUnique = function (item){\n    if(this.indexOf(item) == -1) {\n        //if(jQuery.inArray(item, this) == -1) {\n        this.push(item);\n        return true;\n    }\n    return false;\n}\nfunction getA(arr,find){\n    if(!Array.isArray(arr))return;\n    var eles = [];\n    for(var i=0;i<arr.length;i++){\n        if(arr[i]['name']==find)eles.push(arr[i]['value'])\n    }\n    if(find=='amenities')return eles;\n    if(eles.lenght>1)return eles;\n    if(eles.lenght==0)return false;\n    return eles[0];\n}\nfunction slugify (text) {\n    if(!text)return '';\n    const a = 'àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/_,:;'\n    const b = 'aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n\n    return text.toString().toLowerCase()\n        .replace(/\\s+/g, '-')           // Replace spaces with -\n        .replace(p, c =>\n            b.charAt(a.indexOf(c)))     // Replace special chars\n        .replace(/&/g, '-and-')         // Replace & with 'and'\n        .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n        .replace(/\\-\\-+/g, '-')         // Replace multiple - with single -\n        .replace(/^-+/, '')             // Trim - from start of text\n        .replace(/-+$/, '')             // Trim - from end of text\n}"]},"sourceType":"module","hash":"7b6482376206160a96ce680574c364de16747457"}
