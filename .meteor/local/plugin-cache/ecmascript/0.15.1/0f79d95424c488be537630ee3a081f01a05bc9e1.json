{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/jns:flow-router-ssr/client/router.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/jns:flow-router-ssr/client/router.js","filename":"/home/momen/projects/spotmycrib-master/packages/jns:flow-router-ssr/client/router.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/jns:flow-router-ssr/client/router.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jns:flow-router-ssr/client/router.js"}},"code":"let _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Qs;\nmodule.link(\"qs\", {\n  default(v) {\n    Qs = v;\n  }\n\n}, 0);\nlet PathToRegexp;\nmodule.link(\"path-to-regexp\", {\n  default(v) {\n    PathToRegexp = v;\n  }\n\n}, 1);\nlet ParseUrl;\nmodule.link(\"parseurl\", {\n  default(v) {\n    ParseUrl = v;\n  }\n\n}, 2);\nconst logger = console;\nRouter = class extends SharedRouter {\n  constructor() {\n    super(); // holds the current context\n\n    this._current = {}; // tracks the current path change\n\n    this._onEveryPath = new Tracker.Dependency();\n    this._params = new ReactiveDict();\n    this._queryParams = new ReactiveDict(); // if _askedToWait is true. We don't automatically start the router\n    // in Meteor.startup callback. (see client/_init.js)\n    // Instead user need to call `.initialize()\n\n    this._askedToWait = false;\n    this._initialized = false;\n    this._triggersEnter = [];\n    this._triggersExit = []; // Meteor exposes to the client the path prefix that was defined using the\n    // ROOT_URL environement variable on the server using the global runtime\n    // configuration. See #315.\n\n    this._basePath = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n    this.env.replaceState = new Meteor.EnvironmentVariable();\n    this.env.reload = new Meteor.EnvironmentVariable();\n    this.env.inAction = new Meteor.EnvironmentVariable();\n    this.env.inPopstate = new Meteor.EnvironmentVariable(); // this holds route pathDefs\n\n    this._routeDefs = [];\n\n    this._initTriggersAPI();\n\n    this._initClickAnchorHandlers();\n  }\n\n  initialize(options) {\n    options = options || {};\n\n    if (this._initialized) {\n      throw new Error('FlowRouter is already initialized');\n    }\n\n    this._initialized = true;\n    const path = location.pathname + location.search + (location.hash || '');\n\n    this._initiateHandlingBackButton();\n\n    this.go(path);\n  }\n\n  wait() {\n    if (this._initialized) {\n      throw new Error(\"can't wait after FlowRouter has been initialized\");\n    }\n\n    this._askedToWait = true;\n  }\n\n  reload() {\n    this.env.reload.withValue(true, () => {\n      this.go(this._current.path);\n    });\n  }\n\n  setParams(newParams) {\n    if (!this._current.route) {\n      return false;\n    }\n\n    const pathDef = this._current.route.pathDef;\n    const existingParams = this._current.params;\n\n    const params = _objectSpread(_objectSpread({}, existingParams), newParams);\n\n    for (const k in params) {\n      if (params[k] === null || params[k] === undefined) {\n        delete params[k];\n      }\n    }\n\n    const queryParams = this._current.queryParams;\n    this.go(pathDef, params, queryParams);\n    return true;\n  }\n\n  setQueryParams(newParams) {\n    if (!this._current.route) {\n      return false;\n    }\n\n    const queryParams = _objectSpread(_objectSpread({}, this._current.queryParams), newParams);\n\n    for (const k in queryParams) {\n      if (queryParams[k] === null || queryParams[k] === undefined) {\n        delete queryParams[k];\n      }\n    }\n\n    const pathDef = this._current.route.pathDef;\n    const params = this._current.params;\n    this.go(pathDef, params, queryParams);\n    return true;\n  }\n\n  withReplaceState(fn) {\n    return this.env.replaceState.withValue(true, fn);\n  }\n\n  watchPathChange() {\n    this._onEveryPath.depend();\n  }\n\n  getParam(key) {\n    // We update this._params reactive store only after we Tracker.afterFlush\n    // event to make sure, older routes does not get the updated value even\n    // before the new UI is rendered.\n    //\n    // But, then it cause issues for the new route(in the action)\n    // where if picks up older data.\n    //\n    // That's why we directly get values from the context when called\n    // inside an action.\n    const value = this._params.get(key);\n\n    if (this.env.inAction.get()) {\n      return this._current.params[key];\n    }\n\n    return value;\n  }\n\n  getQueryParam(key) {\n    // See above .getParam() for more information.\n    const value = this._queryParams.get(key);\n\n    if (this.env.inAction.get()) {\n      return this._current.queryParams[key];\n    }\n\n    return value;\n  }\n\n  getRouteName() {\n    this.watchPathChange();\n    return this._current.route.name;\n  }\n\n  route(pathDef, options, group) {\n    const currentRoute = super.route(pathDef, options, group);\n    const keys = [];\n    const regexp = PathToRegexp(pathDef, keys);\n\n    this._routeDefs.push({\n      regexp,\n      keys,\n      pathDef,\n      route: currentRoute\n    });\n\n    return currentRoute;\n  }\n\n  go(pathDef, fields, queryParams) {\n    const path = this.path(pathDef, fields, queryParams);\n\n    if (!path) {\n      logger.error('Path is required for FlowRouter.go()');\n      return;\n    }\n\n    const context = this._buildContext(path); // Implement idempotant routing\n\n\n    const insideAReload = this.env.reload.get();\n\n    if (this._current.path === path && !insideAReload) {\n      return;\n    }\n\n    const allQueryParams = this._decodeValues(Qs.parse(context.queryString)); // Remove basePath from the path\n\n\n    let pathname = context.pathname;\n\n    if (this._basePath) {\n      const cleanedBasePath = this._basePath.trim().replace(/^\\//, '').replace(/$\\//, '');\n\n      pathname = context.pathname.replace(\"/\".concat(cleanedBasePath), '');\n    }\n\n    for (let lc = 0; lc < this._routeDefs.length; lc++) {\n      const routeDef = this._routeDefs[lc];\n      const matched = routeDef.regexp.exec(pathname);\n\n      if (matched) {\n        const params = {};\n        routeDef.keys.forEach((_ref, index) => {\n          let {\n            name\n          } = _ref;\n          const match = matched[index + 1];\n          params[name] = typeof match !== 'undefined' ? decodeURIComponent(match) : match;\n        });\n\n        const matchedContext = _objectSpread(_objectSpread({}, context), {}, {\n          params,\n          queryParams: allQueryParams,\n          route: routeDef.route\n        });\n\n        this._navigate(matchedContext);\n\n        return;\n      }\n    }\n\n    const notFoundRoute = this._getNotFoundRoute();\n\n    const notFoundContext = _objectSpread(_objectSpread({}, context), {}, {\n      route: notFoundRoute,\n      params: {},\n      queryParams: allQueryParams\n    });\n\n    this._navigate(notFoundContext);\n  }\n\n  _navigate(context) {\n    const triggersEnter = [...this._triggersEnter, ...context.route._triggersEnter];\n\n    const redirectArgs = this._runTriggers(triggersEnter, context);\n\n    if (redirectArgs) {\n      return this.go(...redirectArgs);\n    } // Set the current context\n\n\n    const oldContext = this._current;\n    this._current = context; // Run exit handlers\n\n    if (oldContext && oldContext.route) {\n      const triggersExit = [...this._triggersExit, ...oldContext.route._triggersExit];\n\n      const exitRedirectArgs = this._runTriggers(triggersExit, oldContext);\n\n      if (exitRedirectArgs) {\n        return this.go(...exitRedirectArgs);\n      }\n    } // If we are inside a popstate event,\n    // we should not change the history\n\n\n    if (!this.env.inPopstate.get()) {\n      const useReplaceState = this.env.replaceState.get();\n      const {\n        path,\n        params,\n        queryParams\n      } = context;\n      const urlState = {\n        path,\n        params,\n        queryParams\n      };\n\n      if (useReplaceState) {\n        history.replaceState(urlState, window.title, path);\n      } else {\n        history.pushState(urlState, window.title, path);\n      }\n    }\n\n    this._applyRoute();\n  }\n\n  _applyRoute() {\n    const currentContext = this._current;\n    const route = currentContext.route; // otherwise, computations inside action will trigger to re-run\n    // this computation. which we do not need.\n\n    Tracker.nonreactive(() => {\n      this.env.inAction.withValue(true, () => {\n        route.callAction(currentContext);\n      });\n      Tracker.afterFlush(() => {\n        this._onEveryPath.changed();\n\n        this._updateReactiveDict(this._params, currentContext.params);\n\n        this._updateReactiveDict(this._queryParams, currentContext.queryParams);\n      });\n    });\n  }\n\n  _getNotFoundRoute() {\n    const notFoundOptions = this.notFound || {\n      action() {\n        const current = FlowRouter.current();\n        logger.error('There is no route for the path:', current.path);\n      }\n\n    };\n    return new Route(this, '*', notFoundOptions);\n  }\n\n  _runTriggers(triggers, context) {\n    let redirectArgs;\n\n    const redirectFn = (url, params, queryParams) => {\n      if (/^http(s)?:\\/\\//.test(url)) {\n        const message = \"\\n          Redirects to URLs outside of the app are not supported\\n          in this version of Flow Router.\\n          Use 'window.location = yourUrl' instead.\\n        \";\n        throw new Error(message);\n      }\n\n      redirectArgs = [url, params, queryParams];\n    };\n\n    Triggers.runTriggers(triggers, context, redirectFn, () => {});\n    return redirectArgs;\n  }\n\n  _decodeValues(obj) {\n    const newObj = {};\n    Object.keys(obj).forEach(key => {\n      const value = obj[key];\n      newObj[key] = typeof value !== 'undefined' ? decodeURIComponent(value) : value;\n    });\n    return newObj;\n  }\n\n  _updateReactiveDict(dict, newValues) {\n    const currentKeys = _.keys(newValues);\n\n    const oldKeys = _.keys(dict.keyDeps); // set new values\n\n\n    currentKeys.forEach(key => {\n      dict.set(key, newValues[key]);\n    }); // remove keys which does not exisits here\n\n    const removedKeys = _.difference(oldKeys, currentKeys);\n\n    removedKeys.forEach(key => {\n      dict.set(key, undefined);\n    });\n  }\n\n  _initTriggersAPI() {\n    this.triggers = {\n      enter: (triggers, filter) => {\n        triggers = Triggers.applyFilters(triggers, filter);\n\n        if (triggers.length) {\n          this._triggersEnter = this._triggersEnter.concat(triggers);\n        }\n      },\n      exit: (triggers, filter) => {\n        triggers = Triggers.applyFilters(triggers, filter);\n\n        if (triggers.length) {\n          this._triggersExit = this._triggersExit.concat(triggers);\n        }\n      }\n    };\n  } // This is required for implementing a router class.\n\n\n  _getCurrentRouteContext() {\n    return this._current;\n  }\n\n  _initClickAnchorHandlers() {\n    // This logic is taken from page.js\n    // See: https://github.com/visionmedia/page.js\n    const self = this;\n    const clickEvent = typeof document !== 'undefined' && document.ontouchstart ? 'touchstart' : 'click';\n    document.addEventListener(clickEvent, onclick, false);\n\n    function onclick(e) {\n      if (which(e) !== 1) {\n        return;\n      }\n\n      if (e.metaKey || e.ctrlKey || e.shiftKey) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      } // ensure link\n      // use shadow dom when available\n\n\n      let el = e.path ? e.path[0] : e.target;\n\n      while (el && el.nodeName !== 'A') {\n        el = el.parentNode;\n      }\n\n      if (!el || el.nodeName !== 'A') {\n        return;\n      } // Ignore if tag has\n      // 1. \"download\" attribute\n      // 2. rel=\"external\" attribute\n\n\n      if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') {\n        return;\n      } // ensure non-hash for the same path\n\n\n      const link = el.getAttribute('href');\n\n      if (el.pathname === location.pathname && (el.hash || link === '#')) {\n        return;\n      } // Check for mailto: in the href\n\n\n      if (link && link.indexOf('mailto:') > -1) {\n        return;\n      } // check target\n\n\n      if (el.target) {\n        return;\n      } // x-origin\n\n\n      if (!sameOrigin(el.href)) {\n        return;\n      } // rebuild path\n\n\n      let path = el.pathname + el.search + (el.hash || ''); // strip leading \"/[drive letter]:\" on NW.js on Windows\n\n      if (typeof process !== 'undefined' && path.match(/^\\/[a-zA-Z]:\\//)) {\n        path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n      }\n\n      e.preventDefault();\n      self.go(path);\n    }\n\n    function which(e) {\n      e = e || window.event;\n      return e.which === null ? e.button : e.which;\n    }\n\n    function sameOrigin(href) {\n      let origin = \"\".concat(location.protocol, \"//\").concat(location.hostname);\n\n      if (location.port) {\n        origin += \":\".concat(location.port);\n      }\n\n      return href && href.indexOf(origin) === 0;\n    }\n  }\n\n  _initiateHandlingBackButton() {\n    const self = this;\n    window.addEventListener('popstate', onpopstate, false);\n\n    function onpopstate() {\n      // In some browsers they fire popstate event right after page has loaded.\n      // That's not the correct way for the popstate.\n      // Normally, we need to handle it.\n      // But, we don't want to do it since self.go() is already idempotent.\n      const path = location.pathname + location.search + (location.hash || '');\n      self.env.inPopstate.withValue(true, function () {\n        self.go(path);\n      });\n    }\n  }\n\n  _buildContext(path) {\n    const parsedUrl = ParseUrl({\n      url: path\n    });\n    const context = {\n      path,\n      pathname: parsedUrl.pathname,\n      hash: parsedUrl.hash ? parsedUrl.hash.substr(1) : null,\n      queryString: parsedUrl.search ? parsedUrl.search.substr(1) : null\n    };\n    return context;\n  }\n\n};","map":{"version":3,"sources":["packages/jns:flow-router-ssr/client/router.js"],"names":["_objectSpread","module","link","default","v","Qs","PathToRegexp","ParseUrl","logger","console","Router","SharedRouter","constructor","_current","_onEveryPath","Tracker","Dependency","_params","ReactiveDict","_queryParams","_askedToWait","_initialized","_triggersEnter","_triggersExit","_basePath","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","env","replaceState","Meteor","EnvironmentVariable","reload","inAction","inPopstate","_routeDefs","_initTriggersAPI","_initClickAnchorHandlers","initialize","options","Error","path","location","pathname","search","hash","_initiateHandlingBackButton","go","wait","withValue","setParams","newParams","route","pathDef","existingParams","params","k","undefined","queryParams","setQueryParams","withReplaceState","fn","watchPathChange","depend","getParam","key","value","get","getQueryParam","getRouteName","name","group","currentRoute","keys","regexp","push","fields","error","context","_buildContext","insideAReload","allQueryParams","_decodeValues","parse","queryString","cleanedBasePath","trim","replace","lc","length","routeDef","matched","exec","forEach","index","match","decodeURIComponent","matchedContext","_navigate","notFoundRoute","_getNotFoundRoute","notFoundContext","triggersEnter","redirectArgs","_runTriggers","oldContext","triggersExit","exitRedirectArgs","useReplaceState","urlState","history","window","title","pushState","_applyRoute","currentContext","nonreactive","callAction","afterFlush","changed","_updateReactiveDict","notFoundOptions","notFound","action","current","FlowRouter","Route","triggers","redirectFn","url","test","message","Triggers","runTriggers","obj","newObj","Object","dict","newValues","currentKeys","_","oldKeys","keyDeps","set","removedKeys","difference","enter","filter","applyFilters","concat","exit","_getCurrentRouteContext","self","clickEvent","document","ontouchstart","addEventListener","onclick","e","which","metaKey","ctrlKey","shiftKey","defaultPrevented","el","target","nodeName","parentNode","hasAttribute","getAttribute","indexOf","sameOrigin","href","process","preventDefault","event","button","origin","protocol","hostname","port","onpopstate","parsedUrl","substr"],"mappings":"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","sourcesContent":["/* eslint new-cap: 0, no-loop-func: 0, prefer-arrow-callback: 0 */\nimport Qs from 'qs';\nimport PathToRegexp from 'path-to-regexp';\nimport ParseUrl from 'parseurl';\nconst logger = console;\n\nRouter = class extends SharedRouter {\n  constructor() {\n    super();\n\n    // holds the current context\n    this._current = {};\n\n    // tracks the current path change\n    this._onEveryPath = new Tracker.Dependency();\n    this._params = new ReactiveDict();\n    this._queryParams = new ReactiveDict();\n\n    // if _askedToWait is true. We don't automatically start the router\n    // in Meteor.startup callback. (see client/_init.js)\n    // Instead user need to call `.initialize()\n    this._askedToWait = false;\n    this._initialized = false;\n\n    this._triggersEnter = [];\n    this._triggersExit = [];\n\n    // Meteor exposes to the client the path prefix that was defined using the\n    // ROOT_URL environement variable on the server using the global runtime\n    // configuration. See #315.\n    this._basePath = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n\n    this.env.replaceState = new Meteor.EnvironmentVariable();\n    this.env.reload = new Meteor.EnvironmentVariable();\n    this.env.inAction = new Meteor.EnvironmentVariable();\n    this.env.inPopstate = new Meteor.EnvironmentVariable();\n\n    // this holds route pathDefs\n    this._routeDefs = [];\n\n    this._initTriggersAPI();\n    this._initClickAnchorHandlers();\n  }\n\n  initialize(options) {\n    options = options || {};\n\n    if (this._initialized) {\n      throw new Error('FlowRouter is already initialized');\n    }\n\n    this._initialized = true;\n    const path = location.pathname + location.search + (location.hash || '');\n    this._initiateHandlingBackButton();\n    this.go(path);\n  }\n\n  wait() {\n    if (this._initialized) {\n      throw new Error(\"can't wait after FlowRouter has been initialized\");\n    }\n\n    this._askedToWait = true;\n  }\n\n  reload() {\n    this.env.reload.withValue(true, () => {\n      this.go(this._current.path);\n    });\n  }\n\n  setParams(newParams) {\n    if (!this._current.route) {\n      return false;\n    }\n\n    const pathDef = this._current.route.pathDef;\n    const existingParams = this._current.params;\n\n    const params = {\n      ...existingParams,\n      ...newParams\n    };\n\n    for (const k in params) {\n      if (params[k] === null || params[k] === undefined) {\n        delete params[k];\n      }\n    }\n\n    const queryParams = this._current.queryParams;\n\n    this.go(pathDef, params, queryParams);\n    return true;\n  }\n\n  setQueryParams(newParams) {\n    if (!this._current.route) {\n      return false;\n    }\n\n    const queryParams = {\n      ...this._current.queryParams,\n      ...newParams\n    };\n\n    for (const k in queryParams) {\n      if (queryParams[k] === null || queryParams[k] === undefined) {\n        delete queryParams[k];\n      }\n    }\n\n    const pathDef = this._current.route.pathDef;\n    const params = this._current.params;\n    this.go(pathDef, params, queryParams);\n    return true;\n  }\n\n  withReplaceState(fn) {\n    return this.env.replaceState.withValue(true, fn);\n  }\n\n  watchPathChange() {\n    this._onEveryPath.depend();\n  }\n\n  getParam(key) {\n    // We update this._params reactive store only after we Tracker.afterFlush\n    // event to make sure, older routes does not get the updated value even\n    // before the new UI is rendered.\n    //\n    // But, then it cause issues for the new route(in the action)\n    // where if picks up older data.\n    //\n    // That's why we directly get values from the context when called\n    // inside an action.\n    const value = this._params.get(key);\n    if (this.env.inAction.get()) {\n      return this._current.params[key];\n    }\n\n    return value;\n  }\n\n  getQueryParam(key) {\n    // See above .getParam() for more information.\n    const value = this._queryParams.get(key);\n    if (this.env.inAction.get()) {\n      return this._current.queryParams[key];\n    }\n\n    return value;\n  }\n\n  getRouteName() {\n    this.watchPathChange();\n    return this._current.route.name;\n  }\n\n  route(pathDef, options, group) {\n    const currentRoute = super.route(pathDef, options, group);\n    const keys = [];\n    const regexp = PathToRegexp(pathDef, keys);\n    this._routeDefs.push({regexp, keys, pathDef, route: currentRoute});\n\n    return currentRoute;\n  }\n\n  go(pathDef, fields, queryParams) {\n    const path = this.path(pathDef, fields, queryParams);\n\n    if (!path) {\n      logger.error('Path is required for FlowRouter.go()');\n      return;\n    }\n\n    const context = this._buildContext(path);\n\n    // Implement idempotant routing\n    const insideAReload = this.env.reload.get();\n    if (this._current.path === path && !insideAReload) {\n      return;\n    }\n\n    const allQueryParams = this._decodeValues(Qs.parse(context.queryString));\n\n    // Remove basePath from the path\n    let pathname = context.pathname;\n    if (this._basePath) {\n      const cleanedBasePath = this._basePath\n        .trim()\n        .replace(/^\\//, '')\n        .replace(/$\\//, '');\n      pathname = context.pathname.replace(`/${cleanedBasePath}`, '');\n    }\n\n    for (let lc = 0; lc < this._routeDefs.length; lc++) {\n      const routeDef = this._routeDefs[lc];\n      const matched = routeDef.regexp.exec(pathname);\n      if (matched) {\n        const params = {};\n        routeDef.keys.forEach(({name}, index) => {\n          const match = matched[index + 1];\n          params[name] = typeof match !== 'undefined' ? decodeURIComponent(match) : match;\n        });\n\n        const matchedContext = {\n          ...context,\n          params,\n          queryParams: allQueryParams,\n          route: routeDef.route\n        };\n\n        this._navigate(matchedContext);\n        return;\n      }\n    }\n\n    const notFoundRoute = this._getNotFoundRoute();\n    const notFoundContext = {\n      ...context,\n      route: notFoundRoute,\n      params: {},\n      queryParams: allQueryParams\n    };\n    this._navigate(notFoundContext);\n  }\n\n  _navigate(context) {\n    const triggersEnter = [\n      ...this._triggersEnter,\n      ...context.route._triggersEnter\n    ];\n    const redirectArgs = this._runTriggers(triggersEnter, context);\n\n    if (redirectArgs) {\n      return this.go(...redirectArgs);\n    }\n\n    // Set the current context\n    const oldContext = this._current;\n    this._current = context;\n\n    // Run exit handlers\n    if (oldContext && oldContext.route) {\n      const triggersExit = [\n        ...this._triggersExit,\n        ...oldContext.route._triggersExit\n      ];\n      const exitRedirectArgs = this._runTriggers(triggersExit, oldContext);\n\n      if (exitRedirectArgs) {\n        return this.go(...exitRedirectArgs);\n      }\n    }\n\n    // If we are inside a popstate event,\n    // we should not change the history\n    if (!this.env.inPopstate.get()) {\n      const useReplaceState = this.env.replaceState.get();\n      const {path, params, queryParams} = context;\n      const urlState = {path, params, queryParams};\n      if (useReplaceState) {\n        history.replaceState(urlState, window.title, path);\n      } else {\n        history.pushState(urlState, window.title, path);\n      }\n    }\n\n    this._applyRoute();\n  }\n\n  _applyRoute() {\n    const currentContext = this._current;\n    const route = currentContext.route;\n\n    // otherwise, computations inside action will trigger to re-run\n    // this computation. which we do not need.\n    Tracker.nonreactive(() => {\n      this.env.inAction.withValue(true, () => {\n        route.callAction(currentContext);\n      });\n\n      Tracker.afterFlush(() => {\n        this._onEveryPath.changed();\n        this._updateReactiveDict(this._params, currentContext.params);\n        this._updateReactiveDict(this._queryParams, currentContext.queryParams);\n      });\n    });\n  }\n\n  _getNotFoundRoute() {\n    const notFoundOptions = this.notFound || {\n      action() {\n        const current = FlowRouter.current();\n        logger.error('There is no route for the path:', current.path);\n      }\n    };\n\n    return new Route(this, '*', notFoundOptions);\n  }\n\n  _runTriggers(triggers, context) {\n    let redirectArgs;\n    const redirectFn = (url, params, queryParams) => {\n      if (/^http(s)?:\\/\\//.test(url)) {\n        const message = `\n          Redirects to URLs outside of the app are not supported\n          in this version of Flow Router.\n          Use 'window.location = yourUrl' instead.\n        `;\n        throw new Error(message);\n      }\n      redirectArgs = [url, params, queryParams];\n    };\n\n    Triggers.runTriggers(\n      triggers,\n      context,\n      redirectFn,\n      () => {}\n    );\n\n    return redirectArgs;\n  }\n\n  _decodeValues(obj) {\n    const newObj = {};\n    Object.keys(obj).forEach(key => {\n      const value = obj[key];\n      newObj[key] = typeof value !== 'undefined' ? decodeURIComponent(value) : value;\n    });\n\n    return newObj;\n  }\n\n  _updateReactiveDict(dict, newValues) {\n    const currentKeys = _.keys(newValues);\n    const oldKeys = _.keys(dict.keyDeps);\n\n    // set new values\n    currentKeys.forEach((key) => {\n      dict.set(key, newValues[key]);\n    });\n\n    // remove keys which does not exisits here\n    const removedKeys = _.difference(oldKeys, currentKeys);\n    removedKeys.forEach((key) => {\n      dict.set(key, undefined);\n    });\n  }\n\n  _initTriggersAPI() {\n    this.triggers = {\n      enter: (triggers, filter) => {\n        triggers = Triggers.applyFilters(triggers, filter);\n        if (triggers.length) {\n          this._triggersEnter = this._triggersEnter.concat(triggers);\n        }\n      },\n\n      exit: (triggers, filter) => {\n        triggers = Triggers.applyFilters(triggers, filter);\n        if (triggers.length) {\n          this._triggersExit = this._triggersExit.concat(triggers);\n        }\n      }\n    };\n  }\n\n  // This is required for implementing a router class.\n  _getCurrentRouteContext() {\n    return this._current;\n  }\n\n  _initClickAnchorHandlers() {\n    // This logic is taken from page.js\n    // See: https://github.com/visionmedia/page.js\n    const self = this;\n    const clickEvent =\n      typeof document !== 'undefined' && document.ontouchstart ?\n      'touchstart' : 'click';\n    document.addEventListener(clickEvent, onclick, false);\n\n    function onclick(e) {\n      if (which(e) !== 1) {\n        return;\n      }\n\n      if (e.metaKey || e.ctrlKey || e.shiftKey) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      // ensure link\n      // use shadow dom when available\n      let el = e.path ? e.path[0] : e.target;\n      while (el && el.nodeName !== 'A' ) {\n        el = el.parentNode;\n      }\n\n      if (!el || el.nodeName !== 'A') {\n        return;\n      }\n\n      // Ignore if tag has\n      // 1. \"download\" attribute\n      // 2. rel=\"external\" attribute\n      if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') {\n        return;\n      }\n\n      // ensure non-hash for the same path\n      const link = el.getAttribute('href');\n      if (el.pathname === location.pathname && (el.hash || link === '#')) {\n        return;\n      }\n\n      // Check for mailto: in the href\n      if (link && link.indexOf('mailto:') > -1) {\n        return;\n      }\n\n      // check target\n      if (el.target) {\n        return;\n      }\n\n      // x-origin\n      if (!sameOrigin(el.href)) {\n        return;\n      }\n\n      // rebuild path\n      let path = el.pathname + el.search + (el.hash || '');\n\n      // strip leading \"/[drive letter]:\" on NW.js on Windows\n      if (typeof process !== 'undefined' && path.match(/^\\/[a-zA-Z]:\\//)) {\n        path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n      }\n\n      e.preventDefault();\n      self.go(path);\n    }\n\n    function which(e) {\n      e = e || window.event;\n      return e.which === null ? e.button : e.which;\n    }\n\n    function sameOrigin(href) {\n      let origin = `${location.protocol}//${location.hostname}`;\n      if (location.port) {\n        origin += `:${location.port}`;\n      }\n\n      return href && href.indexOf(origin) === 0;\n    }\n  }\n\n  _initiateHandlingBackButton() {\n    const self = this;\n    window.addEventListener('popstate', onpopstate, false);\n\n    function onpopstate() {\n      // In some browsers they fire popstate event right after page has loaded.\n      // That's not the correct way for the popstate.\n      // Normally, we need to handle it.\n      // But, we don't want to do it since self.go() is already idempotent.\n      const path = location.pathname + location.search + (location.hash || '');\n      self.env.inPopstate.withValue(true, function() {\n        self.go(path);\n      });\n    }\n  }\n\n  _buildContext(path) {\n    const parsedUrl = ParseUrl({url: path});\n\n    const context = {\n      path,\n      pathname: parsedUrl.pathname,\n      hash: parsedUrl.hash ? parsedUrl.hash.substr(1) : null,\n      queryString: parsedUrl.search ? parsedUrl.search.substr(1) : null\n    };\n\n    return context;\n  }\n};\n"]},"sourceType":"module","hash":"0f79d95424c488be537630ee3a081f01a05bc9e1"}
