{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/ongoworks:security/lib/server/Security.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/ongoworks:security/lib/server/Security.js","filename":"/home/momen/projects/spotmycrib-master/packages/ongoworks:security/lib/server/Security.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/ongoworks:security/lib/server/Security.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ongoworks:security/lib/server/Security.js"}},"code":"// The `Security` object is exported and provides the package API\nSecurity = {\n  // Putting these on the exported object allows package users to override if necessary\n  errorMessages: {\n    multipleCan: 'You may not combine more than one insert, update, or remove on a Security.can chain',\n    notAllowed: 'Action not allowed',\n    requiresDefinition: 'Security.defineMethod requires a \"definition\" argument',\n    requiresAllow: 'Security.defineMethod requires an \"allow\" function',\n    collectionsArg: 'The collections argument must be a Mongo.Collection instance or an array of them',\n    noCollectionOrType: 'At a minimum, you must call permit and collections methods for a security rule.'\n  },\n  // the starting point of the chain\n  permit: function permit(types) {\n    return new Security.Rule(types);\n  },\n  can: function can(userId) {\n    return new Security.Check(userId);\n  },\n  defineMethod: function securityDefineMethod(name, definition) {\n    // Check whether a rule with the given name already exists; can't overwrite\n    if (Security.Rule.prototype[name]) {\n      throw new Error('A security method with the name \"' + name + '\" has already been defined');\n    }\n\n    if (!definition) throw new Error(Security.errorMessages.requiresDefinition); // If \"deny\" is used, convert to \"allow\" for backwards compatibility\n\n    if (definition.deny) {\n      definition.allow = function () {\n        return !definition.deny(...arguments);\n      };\n    } // Make sure the definition argument is an object that has an `allow` property\n\n\n    if (!definition.allow) throw new Error(Security.errorMessages.requiresAllow); // Wrap transform, if provided\n\n    if (definition.transform) {\n      definition.transform = LocalCollection.wrapTransform(definition.transform);\n    }\n\n    Security.Rule.prototype[name] = function (arg) {\n      this._restrictions.push({\n        definition,\n        arg\n      });\n\n      return this;\n    };\n  }\n};\n\nMongo.Collection.prototype.permit = function (types) {\n  return Security.permit(types).collections(this);\n};","map":{"version":3,"sources":["packages/ongoworks:security/lib/server/Security.js"],"names":["Security","errorMessages","multipleCan","notAllowed","requiresDefinition","requiresAllow","collectionsArg","noCollectionOrType","permit","types","Rule","can","userId","Check","defineMethod","securityDefineMethod","name","definition","prototype","Error","deny","allow","transform","LocalCollection","wrapTransform","arg","_restrictions","push","Mongo","Collection","collections"],"mappings":"AAAA;AACAA,QAAQ,GAAG;AACT;AACAC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,qFADA;AAEbC,IAAAA,UAAU,EAAE,oBAFC;AAGbC,IAAAA,kBAAkB,EAAE,wDAHP;AAIbC,IAAAA,aAAa,EAAE,oDAJF;AAKbC,IAAAA,cAAc,EAAE,kFALH;AAMbC,IAAAA,kBAAkB,EAAE;AANP,GAFN;AAUT;AACAC,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,KAAhB,EAAuB;AAC7B,WAAO,IAAIT,QAAQ,CAACU,IAAb,CAAkBD,KAAlB,CAAP;AACD,GAbQ;AAcTE,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaC,MAAb,EAAqB;AACxB,WAAO,IAAIZ,QAAQ,CAACa,KAAb,CAAmBD,MAAnB,CAAP;AACD,GAhBQ;AAiBTE,EAAAA,YAAY,EAAE,SAASC,oBAAT,CAA8BC,IAA9B,EAAoCC,UAApC,EAAgD;AAC5D;AACA,QAAIjB,QAAQ,CAACU,IAAT,CAAcQ,SAAd,CAAwBF,IAAxB,CAAJ,EAAmC;AACjC,YAAM,IAAIG,KAAJ,CAAU,sCAAsCH,IAAtC,GAA6C,4BAAvD,CAAN;AACD;;AACD,QAAI,CAACC,UAAL,EAAiB,MAAM,IAAIE,KAAJ,CAAUnB,QAAQ,CAACC,aAAT,CAAuBG,kBAAjC,CAAN,CAL2C,CAM5D;;AACA,QAAIa,UAAU,CAACG,IAAf,EAAqB;AACnBH,MAAAA,UAAU,CAACI,KAAX,GAAmB,YAAa;AAC9B,eAAO,CAACJ,UAAU,CAACG,IAAX,CAAgB,YAAhB,CAAR;AACD,OAFD;AAGD,KAX2D,CAY5D;;;AACA,QAAI,CAACH,UAAU,CAACI,KAAhB,EAAuB,MAAM,IAAIF,KAAJ,CAAUnB,QAAQ,CAACC,aAAT,CAAuBI,aAAjC,CAAN,CAbqC,CAc5D;;AACA,QAAIY,UAAU,CAACK,SAAf,EAA0B;AACxBL,MAAAA,UAAU,CAACK,SAAX,GAAuBC,eAAe,CAACC,aAAhB,CAA8BP,UAAU,CAACK,SAAzC,CAAvB;AACD;;AACDtB,IAAAA,QAAQ,CAACU,IAAT,CAAcQ,SAAd,CAAwBF,IAAxB,IAAgC,UAAUS,GAAV,EAAe;AAC7C,WAAKC,aAAL,CAAmBC,IAAnB,CAAwB;AACtBV,QAAAA,UADsB;AAEtBQ,QAAAA;AAFsB,OAAxB;;AAIA,aAAO,IAAP;AACD,KAND;AAOD;AA1CQ,CAAX;;AA6CAG,KAAK,CAACC,UAAN,CAAiBX,SAAjB,CAA2BV,MAA3B,GAAoC,UAAUC,KAAV,EAAiB;AACnD,SAAOT,QAAQ,CAACQ,MAAT,CAAgBC,KAAhB,EAAuBqB,WAAvB,CAAmC,IAAnC,CAAP;AACD,CAFD","sourcesContent":["// The `Security` object is exported and provides the package API\nSecurity = {\n  // Putting these on the exported object allows package users to override if necessary\n  errorMessages: {\n    multipleCan: 'You may not combine more than one insert, update, or remove on a Security.can chain',\n    notAllowed: 'Action not allowed',\n    requiresDefinition: 'Security.defineMethod requires a \"definition\" argument',\n    requiresAllow: 'Security.defineMethod requires an \"allow\" function',\n    collectionsArg: 'The collections argument must be a Mongo.Collection instance or an array of them',\n    noCollectionOrType: 'At a minimum, you must call permit and collections methods for a security rule.',\n  },\n  // the starting point of the chain\n  permit: function permit(types) {\n    return new Security.Rule(types);\n  },\n  can: function can(userId) {\n    return new Security.Check(userId);\n  },\n  defineMethod: function securityDefineMethod(name, definition) {\n    // Check whether a rule with the given name already exists; can't overwrite\n    if (Security.Rule.prototype[name]) {\n      throw new Error('A security method with the name \"' + name + '\" has already been defined');\n    }\n    if (!definition) throw new Error(Security.errorMessages.requiresDefinition);\n    // If \"deny\" is used, convert to \"allow\" for backwards compatibility\n    if (definition.deny) {\n      definition.allow = (...args) => {\n        return !definition.deny(...args);\n      };\n    }\n    // Make sure the definition argument is an object that has an `allow` property\n    if (!definition.allow) throw new Error(Security.errorMessages.requiresAllow);\n    // Wrap transform, if provided\n    if (definition.transform) {\n      definition.transform = LocalCollection.wrapTransform(definition.transform);\n    }\n    Security.Rule.prototype[name] = function (arg) {\n      this._restrictions.push({\n        definition,\n        arg,\n      });\n      return this;\n    };\n  }\n};\n\nMongo.Collection.prototype.permit = function (types) {\n  return Security.permit(types).collections(this);\n};\n"]},"sourceType":"module","hash":"714c14eddb380e2f79e777a00d86428d95b11c5d"}
