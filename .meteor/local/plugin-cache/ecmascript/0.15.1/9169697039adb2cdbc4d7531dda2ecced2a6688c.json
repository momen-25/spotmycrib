{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/kadira.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/montiapm:agent/lib/client/kadira.js","filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/kadira.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$3","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$4","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"StaticBlock":{"enter":[null]},"TSModuleBlock":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectPattern":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/montiapm:agent/lib/client/kadira.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/montiapm:agent/lib/client/kadira.js"}},"code":"var _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default: function (v) {\n    _objectSpread = v;\n  }\n}, 0);\n\nKadira.enableErrorTracking = function () {\n  Kadira.options.enableErrorTracking = true;\n};\n\nKadira.disableErrorTracking = function () {\n  Kadira.options.enableErrorTracking = false;\n};\n\nKadira.trackError = function (type, message) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      _ref$stacks = _ref.stacks,\n      stacks = _ref$stacks === void 0 ? '' : _ref$stacks;\n\n  if (Kadira.options.enableErrorTracking && type && message) {\n    var now = new Date().getTime();\n    Kadira.errors.sendError({\n      appId: Kadira.options.appId,\n      name: message,\n      startTime: now,\n      type: 'client',\n      subType: type,\n      info: getBrowserInfo(),\n      stacks: JSON.stringify([{\n        at: now,\n        events: [],\n        stack: stacks\n      }])\n    });\n  }\n}; // Create new NTP object and error model immediately so it can be used\n// endpoints is set later using __meteor_runtime_config__ or publication\n\n\nKadira.syncedDate = new Ntp(null);\nKadira.errors = new ErrorModel({\n  waitForNtpSyncInterval: 1000 * 5,\n  // 5 secs\n  intervalInMillis: 1000 * 60 * 1,\n  // 1minutes\n  maxErrorsPerInterval: 5\n}); // __meteor_runtime_config__ cannot be dynamically set for cordova apps\n// using a null subscription to send required options to client\n\nif (Meteor.isCordova) {\n  var SettingsCollection = new Meteor.Collection('kadira_settings');\n  SettingsCollection.find().observe({\n    added: initialize\n  });\n} else {\n  initialize(__meteor_runtime_config__.kadira);\n}\n\nvar initialized = false;\n\nfunction initialize() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (initialized) {\n    return;\n  }\n\n  initialized = true;\n  Kadira.options = _objectSpread({\n    errorDumpInterval: 1000 * 60,\n    maxErrorsPerInterval: 10,\n    collectAllStacks: false,\n    enableErrorTracking: false\n  }, options);\n\n  if (Kadira.options.appId && Kadira.options.endpoint) {\n    // update endpoint after receiving correct data\n    Kadira.syncedDate.setEndpoint(Kadira.options.endpoint);\n    Kadira.connected = true;\n    Meteor.startup(function () {\n      // if we don't do this this might block the initial rendering\n      // or, it will show up bottom of the page, which is not cool\n      setTimeout(function () {\n        Kadira.syncedDate.sync();\n      }, Kadira.options.clientEngineSyncDelay);\n    });\n  }\n\n  if (Kadira.connected && Kadira.options.enableErrorTracking) {\n    Kadira.enableErrorTracking();\n  }\n\n  if (window.Zone && Zone.inited) {\n    Zone.collectAllStacks = Kadira.options.collectAllStacks;\n  }\n}","map":{"version":3,"sources":["packages/montiapm:agent/lib/client/kadira.js"],"names":["_objectSpread","module","link","default","v","Kadira","enableErrorTracking","options","disableErrorTracking","trackError","type","message","stacks","now","Date","getTime","errors","sendError","appId","name","startTime","subType","info","getBrowserInfo","JSON","stringify","at","events","stack","syncedDate","Ntp","ErrorModel","waitForNtpSyncInterval","intervalInMillis","maxErrorsPerInterval","Meteor","isCordova","SettingsCollection","Collection","find","observe","added","initialize","__meteor_runtime_config__","kadira","initialized","errorDumpInterval","collectAllStacks","endpoint","setEndpoint","connected","startup","setTimeout","sync","clientEngineSyncDelay","window","Zone","inited"],"mappings":"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","sourcesContent":["Kadira.enableErrorTracking = function () {\n  Kadira.options.enableErrorTracking = true;\n};\n\nKadira.disableErrorTracking = function () {\n  Kadira.options.enableErrorTracking = false;\n};\n\nKadira.trackError = function (type, message, { stacks = '' } = {}) {\n  if(Kadira.options.enableErrorTracking && type && message) {\n    var now = (new Date()).getTime();\n    Kadira.errors.sendError({\n      appId : Kadira.options.appId,\n      name : message,\n      startTime : now,\n      type : 'client',\n      subType : type,\n      info : getBrowserInfo(),\n      stacks : JSON.stringify([{at: now, events: [], stack: stacks}]),\n    });\n  }\n};\n\n// Create new NTP object and error model immediately so it can be used\n// endpoints is set later using __meteor_runtime_config__ or publication\nKadira.syncedDate = new Ntp(null);\nKadira.errors = new ErrorModel({\n  waitForNtpSyncInterval: 1000 * 5, // 5 secs\n  intervalInMillis: 1000 * 60 * 1, // 1minutes\n  maxErrorsPerInterval: 5\n});\n\n// __meteor_runtime_config__ cannot be dynamically set for cordova apps\n// using a null subscription to send required options to client\nif(Meteor.isCordova) {\n  var SettingsCollection = new Meteor.Collection('kadira_settings');\n  SettingsCollection.find().observe({added: initialize});\n} else {\n  initialize(__meteor_runtime_config__.kadira);\n}\n\nvar initialized = false;\nfunction initialize (options = {}) {\n  if (initialized) { return }\n  initialized = true;\n\n  Kadira.options = {\n    errorDumpInterval: 1000*60,\n    maxErrorsPerInterval: 10,\n    collectAllStacks: false,\n    enableErrorTracking: false,\n    ...options,\n  };\n\n  if(Kadira.options.appId && Kadira.options.endpoint) {\n    // update endpoint after receiving correct data\n    Kadira.syncedDate.setEndpoint(Kadira.options.endpoint);\n    Kadira.connected = true;\n    Meteor.startup(function () {\n      // if we don't do this this might block the initial rendering\n      // or, it will show up bottom of the page, which is not cool\n      setTimeout(function() {\n        Kadira.syncedDate.sync();\n      }, Kadira.options.clientEngineSyncDelay);\n    });\n  }\n\n  if(Kadira.connected && Kadira.options.enableErrorTracking) {\n    Kadira.enableErrorTracking();\n  }\n\n  if(window.Zone && Zone.inited) {\n    Zone.collectAllStacks = Kadira.options.collectAllStacks;\n  }\n}\n"]},"sourceType":"module","hash":"9169697039adb2cdbc4d7531dda2ecced2a6688c"}
