{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/jns:flow-router-ssr/server/plugins/ssr_data.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/jns:flow-router-ssr/server/plugins/ssr_data.js","filename":"/home/momen/projects/spotmycrib-master/packages/jns:flow-router-ssr/server/plugins/ssr_data.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/jns:flow-router-ssr/server/plugins/ssr_data.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jns:flow-router-ssr/server/plugins/ssr_data.js"}},"code":"var _this = this;\n\nconst originalSubscribe = Meteor.subscribe;\n\nMeteor.subscribe = function (pubName) {\n  const params = Array.prototype.slice.call(arguments, 1);\n  const ssrContext = FlowRouter.ssrContext.get();\n\n  if (ssrContext) {\n    FlowRouter.inSubscription.withValue(true, () => {\n      ssrContext.addSubscription(pubName, params);\n    });\n  }\n\n  if (originalSubscribe) {\n    originalSubscribe.apply(this, arguments);\n  }\n\n  return {\n    ready: () => true\n  };\n};\n\nconst Mongo = Package.mongo.Mongo;\nconst originalFind = Mongo.Collection.prototype.find;\n\nMongo.Collection.prototype.find = function (selector, options) {\n  selector = selector || {};\n  const ssrContext = FlowRouter.ssrContext.get();\n\n  if (ssrContext && !FlowRouter.inSubscription.get()) {\n    const collName = this._name;\n    const collection = ssrContext.getCollection(collName);\n    const cursor = collection.find(selector, options);\n    return cursor;\n  }\n\n  return originalFind.call(this, selector, options);\n}; // We must implement this. Otherwise, it'll call the origin prototype's\n// find method\n\n\nMongo.Collection.prototype.findOne = function (selector, options) {\n  options = options || {};\n  options.limit = 1;\n  return this.find(selector, options).fetch()[0];\n};\n\nconst originalAutorun = Tracker.autorun;\n\nTracker.autorun = fn => {\n  // if autorun is in the ssrContext, we need fake and run the callback\n  // in the same eventloop\n  if (FlowRouter.ssrContext.get()) {\n    const c = {\n      firstRun: true,\n      stop: () => {}\n    };\n    fn(c);\n    return c;\n  }\n\n  return originalAutorun.call(Tracker, fn);\n}; // By default, Meteor[call,apply] also inherit SsrContext\n// So, they can't access the full MongoDB dataset because of that\n// Then, we need to remove the SsrContext within Method calls\n\n\n['call', 'apply'].forEach(methodName => {\n  const original = Meteor[methodName];\n\n  Meteor[methodName] = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const response = FlowRouter.ssrContext.withValue(null, () => {\n      return original.apply(_this, args);\n    });\n    return response;\n  };\n}); // This is not available in the server. But to make it work with SSR\n// We need to have it.\n\nMeteor.loggingIn = () => {\n  return false;\n};","map":{"version":3,"sources":["packages/jns:flow-router-ssr/server/plugins/ssr_data.js"],"names":["originalSubscribe","Meteor","subscribe","pubName","params","Array","prototype","slice","call","arguments","ssrContext","FlowRouter","get","inSubscription","withValue","addSubscription","apply","ready","Mongo","Package","mongo","originalFind","Collection","find","selector","options","collName","_name","collection","getCollection","cursor","findOne","limit","fetch","originalAutorun","Tracker","autorun","fn","c","firstRun","stop","forEach","methodName","original","args","response","loggingIn"],"mappings":"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","sourcesContent":["const originalSubscribe = Meteor.subscribe;\n\nMeteor.subscribe = function(pubName) {\n  const params = Array.prototype.slice.call(arguments, 1);\n\n  const ssrContext = FlowRouter.ssrContext.get();\n  if (ssrContext) {\n    FlowRouter.inSubscription.withValue(true, () => {\n      ssrContext.addSubscription(pubName, params);\n    });\n  }\n\n  if (originalSubscribe) {\n    originalSubscribe.apply(this, arguments);\n  }\n\n  return {\n    ready: () => true\n  };\n};\n\nconst Mongo = Package.mongo.Mongo;\nconst originalFind = Mongo.Collection.prototype.find;\n\nMongo.Collection.prototype.find = function(selector, options) {\n  selector = selector || {};\n  const ssrContext = FlowRouter.ssrContext.get();\n  if (ssrContext && !FlowRouter.inSubscription.get()) {\n    const collName = this._name;\n    const collection = ssrContext.getCollection(collName);\n    const cursor = collection.find(selector, options);\n    return cursor;\n  }\n\n  return originalFind.call(this, selector, options);\n};\n\n// We must implement this. Otherwise, it'll call the origin prototype's\n// find method\nMongo.Collection.prototype.findOne = function(selector, options) {\n  options = options || {};\n  options.limit = 1;\n  return this.find(selector, options).fetch()[0];\n};\n\nconst originalAutorun = Tracker.autorun;\n\nTracker.autorun = (fn) => {\n  // if autorun is in the ssrContext, we need fake and run the callback\n  // in the same eventloop\n  if (FlowRouter.ssrContext.get()) {\n    const c = { firstRun: true, stop: () => {} };\n    fn(c);\n    return c;\n  }\n\n  return originalAutorun.call(Tracker, fn);\n};\n\n// By default, Meteor[call,apply] also inherit SsrContext\n// So, they can't access the full MongoDB dataset because of that\n// Then, we need to remove the SsrContext within Method calls\n['call', 'apply'].forEach((methodName) => {\n  const original = Meteor[methodName];\n  Meteor[methodName] = (...args) => {\n    const response = FlowRouter.ssrContext.withValue(null, () => {\n      return original.apply(this, args);\n    });\n\n    return response;\n  };\n});\n\n// This is not available in the server. But to make it work with SSR\n// We need to have it.\nMeteor.loggingIn = () => {\n  return false;\n};\n"]},"sourceType":"module","hash":"0c278d779f2bace24ebcc271f8d97336fafc355c"}
