{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/mdg:meteor-apm-agent/lib/tracer/tracer.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/mdg:meteor-apm-agent/lib/tracer/tracer.js","filename":"/home/momen/projects/spotmycrib-master/packages/mdg:meteor-apm-agent/lib/tracer/tracer.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/mdg:meteor-apm-agent/lib/tracer/tracer.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/mdg:meteor-apm-agent/lib/tracer/tracer.js"}},"code":"var Fibers = Npm.require('fibers');\n\nvar eventLogger = Npm.require('debug')('kadira:tracer');\n\nvar REPITITIVE_EVENTS = {\n  'db': true,\n  'http': true,\n  'email': true,\n  'wait': true,\n  'async': true\n};\n\nTracer = function Tracer() {\n  this._filters = [];\n}; //In the future, we might wan't to track inner fiber events too.\n//Then we can't serialize the object with methods\n//That's why we use this method of returning the data\n\n\nTracer.prototype.start = function (session, msg) {\n  var traceInfo = {\n    _id: session.id + \"::\" + msg.id,\n    session: session.id,\n    userId: session.userId,\n    id: msg.id,\n    events: []\n  };\n\n  if (msg.msg == 'method') {\n    traceInfo.type = 'method';\n    traceInfo.name = msg.method;\n  } else if (msg.msg == 'sub') {\n    traceInfo.type = 'sub';\n    traceInfo.name = msg.name;\n  } else {\n    return null;\n  }\n\n  return traceInfo;\n};\n\nTracer.prototype.event = function (traceInfo, type, data) {\n  // do not allow to proceed, if already completed or errored\n  var lastEvent = this.getLastEvent(traceInfo);\n\n  if (lastEvent && ['complete', 'error'].indexOf(lastEvent.type) >= 0) {\n    return false;\n  } //expecting a end event\n\n\n  var eventId = true; //specially handling for repitivive events like db, http\n\n  if (REPITITIVE_EVENTS[type]) {\n    //can't accept a new start event\n    if (traceInfo._lastEventId) {\n      return false;\n    }\n\n    eventId = traceInfo._lastEventId = DefaultUniqueId.get();\n  }\n\n  var event = {\n    type: type,\n    at: Ntp._now()\n  };\n\n  if (data) {\n    var info = _.pick(traceInfo, 'type', 'name');\n\n    event.data = this._applyFilters(type, data, info, \"start\");\n    ;\n  }\n\n  traceInfo.events.push(event);\n  eventLogger(\"%s %s\", type, traceInfo._id);\n  return eventId;\n};\n\nTracer.prototype.eventEnd = function (traceInfo, eventId, data) {\n  if (traceInfo._lastEventId && traceInfo._lastEventId == eventId) {\n    var lastEvent = this.getLastEvent(traceInfo);\n    var type = lastEvent.type + 'end';\n    var event = {\n      type: type,\n      at: Ntp._now()\n    };\n\n    if (data) {\n      var info = _.pick(traceInfo, 'type', 'name');\n\n      event.data = this._applyFilters(type, data, info, \"end\");\n      ;\n    }\n\n    traceInfo.events.push(event);\n    eventLogger(\"%s %s\", type, traceInfo._id);\n    traceInfo._lastEventId = null;\n    return true;\n  } else {\n    return false;\n  }\n};\n\nTracer.prototype.getLastEvent = function (traceInfo) {\n  return traceInfo.events[traceInfo.events.length - 1];\n};\n\nTracer.prototype.endLastEvent = function (traceInfo) {\n  var lastEvent = this.getLastEvent(traceInfo);\n\n  if (lastEvent && !/end$/.test(lastEvent.type)) {\n    traceInfo.events.push({\n      type: lastEvent.type + 'end',\n      at: Ntp._now()\n    });\n    return true;\n  }\n\n  return false;\n};\n\nTracer.prototype.buildTrace = function (traceInfo) {\n  var firstEvent = traceInfo.events[0];\n  var lastEvent = traceInfo.events[traceInfo.events.length - 1];\n  var processedEvents = [];\n\n  if (firstEvent.type != 'start') {\n    console.warn('Kadira: trace is not started yet');\n    return null;\n  } else if (lastEvent.type != 'complete' && lastEvent.type != 'error') {\n    //trace is not completed or errored yet\n    console.warn('Kadira: trace is not completed or errored yet');\n    return null;\n  } else {\n    //build the metrics\n    traceInfo.errored = lastEvent.type == 'error';\n    traceInfo.at = firstEvent.at;\n    var metrics = {\n      total: lastEvent.at - firstEvent.at\n    };\n    var totalNonCompute = 0;\n    firstEvent = ['start', 0];\n    if (traceInfo.events[0].data) firstEvent.push(traceInfo.events[0].data);\n    processedEvents.push(firstEvent);\n\n    for (var lc = 1; lc < traceInfo.events.length - 1; lc += 2) {\n      var prevEventEnd = traceInfo.events[lc - 1];\n      var startEvent = traceInfo.events[lc];\n      var endEvent = traceInfo.events[lc + 1];\n      var computeTime = startEvent.at - prevEventEnd.at;\n      if (computeTime > 0) processedEvents.push(['compute', computeTime]);\n\n      if (!endEvent) {\n        console.error('Kadira: no end event for type: ', startEvent.type);\n        return null;\n      } else if (endEvent.type != startEvent.type + 'end') {\n        console.error('Kadira: endevent type mismatch: ', startEvent.type, endEvent.type, JSON.stringify(traceInfo));\n        return null;\n      } else {\n        var elapsedTimeForEvent = endEvent.at - startEvent.at;\n        var currentEvent = [startEvent.type, elapsedTimeForEvent];\n        currentEvent.push(Object.assign({}, startEvent.data, endEvent.data));\n        processedEvents.push(currentEvent);\n        metrics[startEvent.type] = metrics[startEvent.type] || 0;\n        metrics[startEvent.type] += elapsedTimeForEvent;\n        totalNonCompute += elapsedTimeForEvent;\n      }\n    }\n\n    computeTime = lastEvent.at - traceInfo.events[traceInfo.events.length - 2];\n    if (computeTime > 0) processedEvents.push(['compute', computeTime]);\n    var lastEventData = [lastEvent.type, 0];\n    if (lastEvent.data) lastEventData.push(lastEvent.data);\n    processedEvents.push(lastEventData);\n    metrics.compute = metrics.total - totalNonCompute;\n    traceInfo.metrics = metrics;\n    traceInfo.events = processedEvents;\n    traceInfo.isEventsProcessed = true;\n    return traceInfo;\n  }\n};\n\nTracer.prototype.addFilter = function (filterFn) {\n  this._filters.push(filterFn);\n};\n\nTracer.prototype._applyFilters = function (eventType, data, info) {\n  this._filters.forEach(function (filterFn) {\n    data = filterFn(eventType, _.clone(data), info);\n  });\n\n  return data;\n};\n\nKadira.tracer = new Tracer(); // need to expose Tracer to provide default set of filters\n\nKadira.Tracer = Tracer;","map":{"version":3,"sources":["packages/mdg:meteor-apm-agent/lib/tracer/tracer.js"],"names":["Fibers","Npm","require","eventLogger","REPITITIVE_EVENTS","Tracer","_filters","prototype","start","session","msg","traceInfo","_id","id","userId","events","type","name","method","event","data","lastEvent","getLastEvent","indexOf","eventId","_lastEventId","DefaultUniqueId","get","at","Ntp","_now","info","_","pick","_applyFilters","push","eventEnd","length","endLastEvent","test","buildTrace","firstEvent","processedEvents","console","warn","errored","metrics","total","totalNonCompute","lc","prevEventEnd","startEvent","endEvent","computeTime","error","JSON","stringify","elapsedTimeForEvent","currentEvent","Object","assign","lastEventData","compute","isEventsProcessed","addFilter","filterFn","eventType","forEach","clone","Kadira","tracer"],"mappings":"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","sourcesContent":["var Fibers = Npm.require('fibers');\nvar eventLogger = Npm.require('debug')('kadira:tracer');\nvar REPITITIVE_EVENTS = {'db': true, 'http': true, 'email': true, 'wait': true, 'async': true};\n\nTracer = function Tracer() {\n  this._filters = [];\n};\n\n//In the future, we might wan't to track inner fiber events too.\n//Then we can't serialize the object with methods\n//That's why we use this method of returning the data\nTracer.prototype.start = function(session, msg) {\n  var traceInfo = {\n    _id: session.id + \"::\" + msg.id,\n    session: session.id,\n    userId: session.userId,\n    id: msg.id,\n    events: []\n  };\n\n  if(msg.msg == 'method') {\n    traceInfo.type = 'method';\n    traceInfo.name = msg.method;\n  } else if(msg.msg == 'sub') {\n    traceInfo.type = 'sub';\n    traceInfo.name = msg.name;\n  } else {\n    return null;\n  }\n\n  return traceInfo;\n};\n\nTracer.prototype.event = function(traceInfo, type, data) {\n  // do not allow to proceed, if already completed or errored\n  var lastEvent = this.getLastEvent(traceInfo);\n  if(lastEvent && ['complete', 'error'].indexOf(lastEvent.type) >= 0) {\n    return false;\n  }\n\n  //expecting a end event\n  var eventId = true;\n\n  //specially handling for repitivive events like db, http\n  if(REPITITIVE_EVENTS[type]) {\n    //can't accept a new start event\n    if(traceInfo._lastEventId) {\n      return false;\n    }\n    eventId = traceInfo._lastEventId = DefaultUniqueId.get();\n  }\n\n  var event = {type: type, at: Ntp._now()};\n  if(data) {\n    var info = _.pick(traceInfo, 'type', 'name')\n    event.data = this._applyFilters(type, data, info, \"start\");;\n  }\n\n  traceInfo.events.push(event);\n\n  eventLogger(\"%s %s\", type, traceInfo._id);\n  return eventId;\n};\n\nTracer.prototype.eventEnd = function(traceInfo, eventId, data) {\n  if(traceInfo._lastEventId && traceInfo._lastEventId == eventId) {\n    var lastEvent = this.getLastEvent(traceInfo);\n    var type = lastEvent.type + 'end';\n    var event = {type: type, at: Ntp._now()};\n    if(data) {\n      var info = _.pick(traceInfo, 'type', 'name')\n      event.data = this._applyFilters(type, data, info, \"end\");;\n    }\n    traceInfo.events.push(event);\n    eventLogger(\"%s %s\", type, traceInfo._id);\n\n    traceInfo._lastEventId = null;\n    return true;\n  } else {\n    return false;\n  }\n};\n\nTracer.prototype.getLastEvent = function(traceInfo) {\n  return traceInfo.events[traceInfo.events.length -1]\n};\n\nTracer.prototype.endLastEvent = function(traceInfo) {\n  var lastEvent = this.getLastEvent(traceInfo);\n  if(lastEvent && !/end$/.test(lastEvent.type)) {\n    traceInfo.events.push({\n      type: lastEvent.type + 'end',\n      at: Ntp._now()\n    });\n    return true;\n  }\n  return false;\n};\n\nTracer.prototype.buildTrace = function(traceInfo) {\n  var firstEvent = traceInfo.events[0];\n  var lastEvent = traceInfo.events[traceInfo.events.length - 1];\n  var processedEvents = [];\n\n  if(firstEvent.type != 'start') {\n    console.warn('Kadira: trace is not started yet');\n    return null;\n  } else if(lastEvent.type != 'complete' && lastEvent.type != 'error') {\n    //trace is not completed or errored yet\n    console.warn('Kadira: trace is not completed or errored yet');\n    return null;\n  } else {\n    //build the metrics\n    traceInfo.errored = lastEvent.type == 'error';\n    traceInfo.at = firstEvent.at;\n\n    var metrics = {\n      total: lastEvent.at - firstEvent.at,\n    };\n\n    var totalNonCompute = 0;\n\n    firstEvent = ['start', 0];\n    if(traceInfo.events[0].data) firstEvent.push(traceInfo.events[0].data);\n    processedEvents.push(firstEvent);\n\n    for(var lc=1; lc < traceInfo.events.length - 1; lc += 2) {\n      var prevEventEnd = traceInfo.events[lc-1];\n      var startEvent = traceInfo.events[lc];\n      var endEvent = traceInfo.events[lc+1];\n      var computeTime = startEvent.at - prevEventEnd.at;\n      if(computeTime > 0) processedEvents.push(['compute', computeTime]);\n      if(!endEvent) {\n        console.error('Kadira: no end event for type: ', startEvent.type);\n        return null;\n      } else if(endEvent.type != startEvent.type + 'end') {\n        console.error('Kadira: endevent type mismatch: ', startEvent.type, endEvent.type, JSON.stringify(traceInfo));\n        return null;\n      } else {\n        var elapsedTimeForEvent = endEvent.at - startEvent.at\n        var currentEvent = [startEvent.type, elapsedTimeForEvent];\n        currentEvent.push(Object.assign({}, startEvent.data, endEvent.data));\n        processedEvents.push(currentEvent);\n        metrics[startEvent.type] = metrics[startEvent.type] || 0;\n        metrics[startEvent.type] += elapsedTimeForEvent;\n        totalNonCompute += elapsedTimeForEvent;\n      }\n    }\n\n    computeTime = lastEvent.at - traceInfo.events[traceInfo.events.length - 2];\n    if(computeTime > 0) processedEvents.push(['compute', computeTime]);\n\n    var lastEventData = [lastEvent.type, 0];\n    if(lastEvent.data) lastEventData.push(lastEvent.data);\n    processedEvents.push(lastEventData);\n\n    metrics.compute = metrics.total - totalNonCompute;\n    traceInfo.metrics = metrics;\n    traceInfo.events = processedEvents;\n    traceInfo.isEventsProcessed = true;\n    return traceInfo;\n  }\n};\n\nTracer.prototype.addFilter = function(filterFn) {\n  this._filters.push(filterFn);\n};\n\nTracer.prototype._applyFilters = function(eventType, data, info) {\n  this._filters.forEach(function(filterFn) {\n    data = filterFn(eventType, _.clone(data), info);\n  });\n\n  return data;\n};\n\nKadira.tracer = new Tracer();\n// need to expose Tracer to provide default set of filters\nKadira.Tracer = Tracer;"]},"sourceType":"module","hash":"aadc97aca042539ac32e563da5e4ec0a908d43d8"}
