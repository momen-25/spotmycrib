{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/server/cronjobs/emailAlerts.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"server/cronjobs/emailAlerts.js","filename":"/home/momen/projects/spotmycrib-master/server/cronjobs/emailAlerts.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/server/cronjobs/emailAlerts.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"server/cronjobs/emailAlerts.js"}},"code":"let check;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  }\n\n}, 0);\nMeteor.methods({\n  subscribeToEmailAlert(email) {\n    console.log('in subscribeToEmailAlert: ' + email);\n    this.unblock();\n    let validatedEmail = emailValidation(email);\n\n    if (validatedEmail !== true) {\n      throw new Meteor.Error(400, 'Invalid email, please enter a valid email address.');\n    }\n\n    let ele = Collections.propertyAlerts.findOne({\n      'email': email\n    }); // You can make this email field unique index and save 1 mongodb query here, but its async anyway, so ignoring\n\n    if (ele) {//ignore; you alredy have it subscribed ;\n    } else {\n      Collections.propertyAlerts.insert({\n        'email': email\n      });\n    }\n\n    if (this.userId) {\n      Meteor.users.update({\n        \"_id\": this.userId\n      }, {\n        $set: {\n          \"profile.emailAlertsActive\": true\n        }\n      });\n    }\n\n    return true;\n  },\n\n  emailAlertsNoThanks() {\n    console.log('in emailAlertsNoThanks');\n    this.unblock();\n\n    if (this.userId) {\n      Meteor.users.update({\n        \"_id\": this.userId\n      }, {\n        $set: {\n          \"profile.emailAlertsNoThanks\": true\n        }\n      });\n    }\n\n    return true;\n  }\n\n});\n\nfunction emailValidation(email) {\n  email = email.trim();\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/; // Valid\n\n  if (re.test(email)) {\n    return true;\n  } // Invalid\n\n\n  return {\n    error: \"INVALID_EMAIL\",\n    reason: \"Please enter a valid email address in format pat@gmail.com\"\n  };\n}","map":{"version":3,"sources":["server/cronjobs/emailAlerts.js"],"names":["check","module","link","v","Meteor","methods","subscribeToEmailAlert","email","console","log","unblock","validatedEmail","emailValidation","Error","ele","Collections","propertyAlerts","findOne","insert","userId","users","update","$set","emailAlertsNoThanks","trim","re","test","error","reason"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,MAAM,CAACC,IAAP,CAAY,cAAZ,EAA2B;AAACF,EAAAA,KAAK,CAACG,CAAD,EAAG;AAACH,IAAAA,KAAK,GAACG,CAAN;AAAQ;;AAAlB,CAA3B,EAA+C,CAA/C;AAGVC,MAAM,CAACC,OAAP,CAAe;AACXC,EAAAA,qBAAqB,CAACC,KAAD,EAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,+BAA6BF,KAAzC;AACA,SAAKG,OAAL;AACA,QAAIC,cAAc,GAAGC,eAAe,CAACL,KAAD,CAApC;;AACA,QAAGI,cAAc,KAAK,IAAtB,EAA2B;AACvB,YAAM,IAAIP,MAAM,CAACS,KAAX,CAAiB,GAAjB,EAAsB,oDAAtB,CAAN;AACH;;AACD,QAAIC,GAAG,GAAGC,WAAW,CAACC,cAAZ,CAA2BC,OAA3B,CAAmC;AAAC,eAAQV;AAAT,KAAnC,CAAV,CAPwB,CAOqC;;AAC7D,QAAGO,GAAH,EAAO,CACH;AACH,KAFD,MAEK;AACDC,MAAAA,WAAW,CAACC,cAAZ,CAA2BE,MAA3B,CAAkC;AAAC,iBAAQX;AAAT,OAAlC;AACH;;AACD,QAAG,KAAKY,MAAR,EAAe;AACXf,MAAAA,MAAM,CAACgB,KAAP,CAAaC,MAAb,CAAoB;AAChB,eAAO,KAAKF;AADI,OAApB,EAEG;AACCG,QAAAA,IAAI,EAAE;AACF,uCAA6B;AAD3B;AADP,OAFH;AAOH;;AACD,WAAO,IAAP;AACH,GAxBU;;AAyBXC,EAAAA,mBAAmB,GAAE;AACjBf,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,SAAKC,OAAL;;AACA,QAAG,KAAKS,MAAR,EAAe;AACXf,MAAAA,MAAM,CAACgB,KAAP,CAAaC,MAAb,CAAoB;AAChB,eAAO,KAAKF;AADI,OAApB,EAEG;AACCG,QAAAA,IAAI,EAAE;AACF,yCAA+B;AAD7B;AADP,OAFH;AAOH;;AACD,WAAO,IAAP;AACH;;AAtCU,CAAf;;AAyCA,SAASV,eAAT,CAAyBL,KAAzB,EAAgC;AAE5BA,EAAAA,KAAK,GAAGA,KAAK,CAACiB,IAAN,EAAR;AACA,MAAIC,EAAE,GAAG,wJAAT,CAH4B,CAK5B;;AACA,MAAIA,EAAE,CAACC,IAAH,CAAQnB,KAAR,CAAJ,EAAoB;AAChB,WAAO,IAAP;AACH,GAR2B,CAU5B;;;AACA,SAAO;AACHoB,IAAAA,KAAK,EAAE,eADJ;AAEHC,IAAAA,MAAM,EAAE;AAFL,GAAP;AAKH","sourcesContent":["import {check} from \"meteor/check\";\n\n\nMeteor.methods({\n    subscribeToEmailAlert(email){\n        console.log('in subscribeToEmailAlert: '+email)\n        this.unblock();\n        let validatedEmail = emailValidation(email);\n        if(validatedEmail !== true){\n            throw new Meteor.Error(400, 'Invalid email, please enter a valid email address.');\n        }\n        let ele = Collections.propertyAlerts.findOne({'email':email})// You can make this email field unique index and save 1 mongodb query here, but its async anyway, so ignoring\n        if(ele){\n            //ignore; you alredy have it subscribed ;\n        }else{\n            Collections.propertyAlerts.insert({'email':email})\n        }\n        if(this.userId){\n            Meteor.users.update({\n                \"_id\": this.userId\n            }, {\n                $set: {\n                    \"profile.emailAlertsActive\": true\n                }\n            });\n        }\n        return true;\n    },\n    emailAlertsNoThanks(){\n        console.log('in emailAlertsNoThanks')\n        this.unblock();\n        if(this.userId){\n            Meteor.users.update({\n                \"_id\": this.userId\n            }, {\n                $set: {\n                    \"profile.emailAlertsNoThanks\": true\n                }\n            });\n        }\n        return true;\n    }\n})\n\nfunction emailValidation(email) {\n\n    email = email.trim();\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    // Valid\n    if( re.test(email) ){\n        return true;\n    }\n\n    // Invalid\n    return {\n        error: \"INVALID_EMAIL\",\n        reason: \"Please enter a valid email address in format pat@gmail.com\",\n    };\n\n}"]},"sourceType":"module","hash":"3e06ad0e6551c155cd7aa25b57e6699c852954ff"}
