{"metadata":{},"options":{"assumptions":{},"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/momen/projects/spotmycrib-master/packages/jns:flow-router-ssr/server/route.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","objectRestSpread","objectRestSpread","asyncGenerators","classProperties","classPrivateProperties","jsx","nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.linux.x86_64"},"sourceFileName":"packages/jns:flow-router-ssr/server/route.js","filename":"/home/momen/projects/spotmycrib-master/packages/jns:flow-router-ssr/server/route.js","targets":{},"cloneInputAst":true,"browserslistConfigFile":false,"passPerPreset":false,"envName":"development","cwd":"/home/momen/projects/spotmycrib-master","root":"/home/momen/projects/spotmycrib-master","rootMode":"root","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":false,"enforceStrictMode":false,"dynamicImport":true,"generateLetDeclarations":true}},{"key":"transform-runtime","visitor":{"MemberExpression":{"enter":[null]},"ObjectPattern":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":{},"_verified":{},"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.13.10","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXSpreadChild":{"enter":[null]},"Program":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","runtime":"classic","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-react-pure-annotations","visitor":{"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/momen/projects/spotmycrib-master/packages/jns:flow-router-ssr/server/route.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jns:flow-router-ssr/server/route.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nconst Url = require('url');\n\nconst Cheerio = require('cheerio');\n\nconst logger = console;\nlet CACHE_MODE = 'localfile'; //s3, localfile\n\nlet basePath = '/Users/njanjanam/localcache/';\nif (Meteor.isProduction) basePath = '/mnt/flatbid_cache/';\nconsole.log('Base Path is: ' + basePath); ///////////// CUSTOM JNS CODE\n\nfunction slugify(text) {\n  if (!text) return '';\n  const a = 'àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/,:;';\n  const b = 'aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return text.toString().toLowerCase().replace(/\\s+/g, '') // Replace spaces with \"\"\n  .replace(p, c => b.charAt(a.indexOf(c))) // Replace special chars\n  .replace(/&/g, '-and-') // Replace & with ''\n  .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n  .replace(/\\-\\-+/g, '-') // Replace multiple - with single ''\n  .replace(/^-+/, '') // Trim - from start of text\n  .replace(/-+$/, ''); // Trim - from end of text\n}\n\nif (CACHE_MODE == 's3') {\n  var AWS = require('aws-sdk');\n\n  var config = new AWS.Config({\n    accessKeyId: Meteor.settings['galaxy.meteor.com'].env.accessKeyId,\n    secretAccessKey: Meteor.settings['galaxy.meteor.com'].env.secretAccessKey,\n    region: Meteor.settings['galaxy.meteor.com'].env.region\n  });\n  var s3 = new AWS.S3(config);\n  var myBucket = 'flatbid-cache';\n}\n\nfunction emptyBucket(pathName, callback) {\n  var params = {\n    Bucket: myBucket,\n    Prefix: pathName\n  };\n  s3.listObjects(params, function (err, data) {\n    if (err) return callback(err);\n    if (data.Contents.length == 0) return callback();\n    params = {\n      Bucket: myBucket\n    };\n    params.Delete = {\n      Objects: []\n    };\n    data.Contents.forEach(function (content) {\n      params.Delete.Objects.push({\n        Key: content.Key\n      });\n    });\n    var moreThan1k = false;\n\n    if (params.Delete.Objects.length > 1000) {\n      params.Delete.Objects = params.Delete.Objects.slice(0, 1000);\n      moreThan1k = true;\n    }\n\n    s3.deleteObjects(params, function (err, data) {\n      if (err) return callback(err);\n      if (moreThan1k) emptyBucket(pathName, callback);else callback();\n    });\n  });\n}\n\nMeteor.methods({\n  createCache: function (html, cacheKey) {\n    console.log('in createCache method');\n    this.unblock(); // if(Meteor.isDevelopment)return;\n\n    var catchPath = '';\n    if (cacheKey.indexOf('jns-b-') != -1) catchPath += 'BrowsePages/';\n    if (cacheKey.indexOf('jns-rent-') != -1) catchPath += 'LDPages/';\n    if (!catchPath) catchPath += 'All/';\n    if (Meteor.isDevelopment) catchPath = 'dev/' + catchPath;\n    var filename = catchPath + cacheKey + '.html'; ////////////////// AWS S3\n\n    if (CACHE_MODE == 's3') {\n      var params = {\n        Bucket: myBucket,\n        Key: filename,\n        ContentLength: html.size,\n        Body: Date.now() + '{jns}' + html\n      };\n      s3.putObject(params, function (err, data) {\n        console.log('Cache created for: ' + filename + \" Length: \" + html.length); // console.log(data)\n        // console.log(err)\n      });\n    } ////////////////// LOCAL FILE\n\n\n    if (CACHE_MODE == 'localfile') {\n      const fs = require('fs');\n\n      var temPath = basePath + filename;\n      console.log('Catch create in: ' + temPath);\n      fs.writeFileSync(temPath, Date.now() + '{jns}' + html, 'utf8'); // var Minimize = require('minimize')\n      //     , minimize = new Minimize();\n      // minimize.parse(html, function (error, data) {\n      //     console.log('Minimised');\n      //     // console.log(data);\n      //     fs.writeFileSync(temPath , data, 'utf8');\n      // });\n    }\n\n    return; // fs.writeFileSync(temPath , data, 'utf8');\n  },\n  clearCache: function (key) {// console.log('in clearCache method');\n  },\n  clearAllCache: function (key) {\n    console.log('in clearAllCache method');\n    var paths = ['All/', 'BrowsePages/', 'LDPages/'];\n    var key;\n\n    for (var i = 0; i < paths.length; i++) {\n      key = Meteor.isDevelopment ? 'dev/' + paths[i] : paths[i];\n      emptyBucket(key, function (err) {\n        console.log(err);\n      });\n    }\n  }\n}); ///////////// CUSTOM JNS CODE END\n\nRoute = class extends SharedRoute {\n  constructor(router, pathDef, options, group) {\n    super(router, pathDef, options, group);\n    this._cache = {};\n  }\n\n  _init() {\n    const cookieParser = require('cookie-parser');\n\n    Picker.middleware(cookieParser()); // process null subscriptions with FR support\n\n    Picker.middleware(FastRender.handleOnAllRoutes);\n    const route = FlowRouter.basePath + this.pathDef;\n    Picker.route(route, this._handleRoute.bind(this));\n  }\n\n  _handleRoute(params, req, res, next) {\n    if (!this._isHtmlPage(req.url)) {\n      return next();\n    } // This userId will be useful in the at the later on when\n    // it's time to cache the page.\n    // Normally, we can't access `Meteor.userId()` outside of a method\n    // But here, we could do it because we call `FastRender.handleOnAllRoutes`.\n    // It creates a FastRender context and assign it for the current fiber.\n\n\n    try {\n      req.__userId = Meteor.userId();\n    } catch (e) {\n      req.__userId = this.userId;\n    }\n\n    const cachedPage = this._getCachedPage(req.url, req.__userId);\n\n    if (cachedPage) {\n      return this._processFromCache(cachedPage, req, res, next);\n    } // Here we need to processFromSsr,\n    // but also we need to process with FastRender as well.\n    // That's why we bind processFromSsr and pass args as below.\n    // It does not get any arguments from FastRender.\n    // FastRender just trigger the following handler and do it's job\n\n\n    const processFromSsr = this._processFromSsr.bind(this, params, req, res);\n\n    FastRender.handleRoute(processFromSsr, params, req, res, next);\n  }\n\n  _processFromCache(pageInfo, req, res, next) {\n    req.dynamicHead = req.dynamicHead || '';\n    req.dynamicBody = req.dynamicBody || '';\n    req.dynamicHead += pageInfo.head;\n    req.dynamicBody += pageInfo.html; // InjectData.pushData(res, 'fast-render-data', pageInfo.frData);\n    //   console.log('frData length: '+pageInfo.frData.length)\n\n    next(); // console.log('_processFromCache end')\n  }\n\n  _processFromSsr(params, req, res) {\n    // console.log('_processFromSsr')\n    const self = this;\n    const ssrContext = new SsrContext();\n\n    const routeContext = self._buildContext(req, params);\n\n    self._router.ssrContext.withValue(ssrContext, () => {\n      self._router.routeContext.withValue(routeContext, () => {\n        try {\n          // get the data for null subscriptions and add them to the\n          // ssrContext\n          const frData = ''; //InjectData.getData(res, 'fast-render-data');\n\n          if (frData) {\n            ssrContext.addData(frData.collectionData);\n          }\n\n          if (self.options.action) {\n            self.options.action(routeContext.params, routeContext.queryParams);\n          }\n        } catch (ex) {\n          logger.error(\"Error when doing SSR. path:\".concat(req.url, \": \").concat(ex.message));\n          logger.error(ex.stack);\n        }\n      });\n\n      self._injectHtml(req, res, ssrContext);\n\n      console.log('_processFromSsr complete');\n    });\n  }\n\n  _injectHtml(req, res, ssrContext) {\n    const html = ssrContext.getHtml();\n    const head = ssrContext.getHead();\n    req.dynamicHead = req.dynamicHead || '';\n    req.dynamicBody = req.dynamicBody || '';\n    req.dynamicHead += head;\n    req.dynamicBody += html; // cache the page if mentioned a timeout\n\n    if (this._router.pageCacheTimeout) {\n      const pageInfo = {\n        // frData: InjectData.getData(res, 'fast-render-data'),\n        head: head,\n        html: html\n      };\n\n      this._cachePage(req.url, req.__userId, pageInfo, this._router.pageCacheTimeout);\n    }\n  }\n\n  _moveScriptsToBottom(html) {\n    const $ = Cheerio.load(html, {\n      decodeEntities: false\n    });\n    const heads = $('head script');\n    $('body').append(heads); // Remove empty lines caused by removing scripts\n\n    $('head').html($('head').html().replace(/(^[ \\t]*\\n)/gm, ''));\n    return $.html();\n  }\n\n  _buildContext(req, _params) {\n    const queryParams = _params.query; // We need to remove `.query` since it's not part of our params API\n    // But we only need to remove it in our copy.\n    // We should not trigger any side effects\n\n    const params = _.clone(_params);\n\n    delete params.query;\n    const context = {\n      route: this,\n      path: req.url,\n      params,\n      queryParams,\n      // We might change this later on. That's why it's starting with _\n      _serverRequest: req\n    };\n    return context;\n  }\n\n  _isHtmlPage(url) {\n    const pathname = Url.parse(url).pathname;\n    const ext = pathname.split('.').slice(1).join('.'); // if there is no extention, yes that's a html page\n\n    if (!ext) {\n      return true;\n    } // if this is htm or html, yes that's a html page\n\n\n    if (/^htm/.test(ext)) {\n      return true;\n    } // if not we assume this is not as a html page\n    // this doesn't do any harm. But no SSR\n\n\n    return false;\n  }\n\n  _getCachedPage(url, userId) {\n    const cacheInfo = {\n      url,\n      userId\n    }; //////Below is the logic for this extension's default in-build caching system. Enabling it to reduce the number of calls to AWS S3 for most commenly crawled pages by SearchEngines\n\n    var cacheKey = this._getCacheKey(cacheInfo); // console.log('local Cache - cacheKey: '+cacheKey)\n\n\n    const info = this._cache[cacheKey]; // if (info) {\n    //   console.log('Fetching from the memory Cache: '+cacheKey)\n    //   return info.data;\n    // }\n    ///End of inbuild code\n    /////////////JNS CUSTOM CODE START - This will run if the above code didn't find the cache.\n    // var start = new Date().getTime();\n\n    cacheKey = this._getCacheKeyJNS({\n      url,\n      userId\n    });\n    var catchPath = '';\n    if (cacheKey.indexOf('jns-b-') != -1) catchPath += 'BrowsePages/';\n    if (cacheKey.indexOf('jns-rent-') != -1) catchPath += 'LDPages/';\n    if (!catchPath) catchPath += 'All/';\n    if (Meteor.isDevelopment) catchPath = 'dev/' + catchPath;\n    let tmp = false;\n\n    if (CACHE_MODE == 's3') {\n      var url = 'https://s3-eu-west-1.amazonaws.com/flatbid-cache/' + catchPath + cacheKey + '.html';\n\n      try {\n        result = Meteor.http.get(url);\n\n        if (result.statusCode == 200) {\n          tmp = result.content.split('{jns}');\n        }\n      } catch (e) {\n        console.log('s3 Cache fetch failed: ' + cacheKey);\n      }\n    } else if (CACHE_MODE == 'localfile') {\n      const fs = require('fs');\n\n      var temPath = basePath + catchPath + cacheKey + '.html';\n\n      try {\n        tmp = fs.readFileSync(temPath, 'utf8');\n        tmp = tmp.split('{jns}'); //fs.readFileSync('/mnt/flatbid_cache/BrowsePages/guest-jns-b-apartment-for-rent-in-rathbane-limerick-irelandluxurysort1.html' ,'utf8');\n      } catch (e) {\n        console.log('localfile Cache fetch failed: ' + temPath);\n      }\n    }\n\n    try {\n      // if(Meteor.isDevelopment)throw new Meteor.Error('bad', 'stuff happened');\n      if (tmp) {\n        var ftime = parseInt(tmp[0]);\n        var minHTML = tmp[1];\n        var tnow = Date.now();\n        var diff = tnow - ftime;\n        var cacheExpiryTimeinMS = 172800000; //48 * 60 * 60 *1000 //48 hours Default\n\n        if (cacheKey.indexOf('home') != -1) cacheExpiryTimeinMS = 1800000; //60 * 60 *1000 //60 min for home page\n\n        if (cacheKey.indexOf('jns-b-') != -1) cacheExpiryTimeinMS = 1800000; //30 * 60 *1000 //30 min for browse pages\n\n        if (cacheKey.indexOf('jns-rent-') != -1) cacheExpiryTimeinMS = 2280000; // 38 * 60 *1000 //1.5 days for rent pages\n\n        if (cacheKey.indexOf('jns-letting-') != -1) cacheExpiryTimeinMS = 2880000; //48 * 60 *1000 //2 days for letting pages\n        // cacheExpiryTimeinMS = 1 *1000 //1 sec\n\n        console.log('tnow: ' + tnow + ' ftime: ' + ftime + ' diff: ' + diff + ' tmp[0]: ' + tmp[0] + ' cacheExpiryTimeinMS:' + cacheExpiryTimeinMS);\n\n        if (diff < cacheExpiryTimeinMS) {\n          //Cachce has not expired yet.\n          console.log('Successfully fetching from cache: ' + cacheKey); // this.response.writeHead(200, {'Content-Type': 'text/html'});\n          // this.response.end(minHTML);\n\n          return {\n            head: tmp[1],\n            html: tmp[2]\n          };\n        } else {\n          console.log('Cache expired: ' + diff + ' key: ' + cacheKey); // Meteor.call('clearCache',cacheKey);\n        }\n      } else {\n        console.log('No cache: ' + cacheKey);\n      }\n    } catch (e) {\n      console.log('Cache not found: ' + cacheKey);\n    } /////////////JNS CUSTOM CODE END\n\n  }\n\n  _cachePage(url, userId, data, timeout) {\n    var cacheKey = this._getCacheKeyJNS({\n      url,\n      userId\n    });\n\n    Meteor.call('createCache', \"\".concat(data.head, \"{jns}\").concat(data.html), cacheKey); ///Below is the logic for this extension's default in-build caching system. Enabling it to reduce the number of calls to AWS S3 for most commenly crawled pages by SearchEngines\n\n    const cacheInfo = {\n      url,\n      userId\n    };\n    cacheKey = this._getCacheKey(cacheInfo);\n    const existingInfo = this._cache[cacheKey];\n\n    if (existingInfo) {\n      // Sometimes, it's possible get this called multiple times\n      // due to race conditions. So, in that case, simply discard\n      // caching this page.\n      return;\n    }\n\n    const info = {\n      data: data,\n      timeoutHandle: setTimeout(() => {\n        delete this._cache[cacheKey];\n      }, timeout)\n    };\n    console.log('Local Cache created for: ' + cacheKey);\n    this._cache[cacheKey] = info;\n  }\n\n  _getCacheKeyJNS(_ref) {\n    let {\n      userId = '',\n      url\n    } = _ref;\n    var slugged = slugify(url);\n    return (userId ? userId : 'guest') + '-jns-' + (slugged ? slugged : 'home');\n  }\n\n  _getCacheKey(_ref2) {\n    let {\n      userId = '',\n      url\n    } = _ref2;\n    return \"\".concat(userId, \"::\").concat(url);\n  }\n\n};","map":{"version":3,"sources":["packages/jns:flow-router-ssr/server/route.js"],"names":["Meteor","module","link","v","Url","require","Cheerio","logger","console","CACHE_MODE","basePath","isProduction","log","slugify","text","a","b","p","RegExp","split","join","toString","toLowerCase","replace","c","charAt","indexOf","AWS","config","Config","accessKeyId","settings","env","secretAccessKey","region","s3","S3","myBucket","emptyBucket","pathName","callback","params","Bucket","Prefix","listObjects","err","data","Contents","length","Delete","Objects","forEach","content","push","Key","moreThan1k","slice","deleteObjects","methods","createCache","html","cacheKey","unblock","catchPath","isDevelopment","filename","ContentLength","size","Body","Date","now","putObject","fs","temPath","writeFileSync","clearCache","key","clearAllCache","paths","i","Route","SharedRoute","constructor","router","pathDef","options","group","_cache","_init","cookieParser","Picker","middleware","FastRender","handleOnAllRoutes","route","FlowRouter","_handleRoute","bind","req","res","next","_isHtmlPage","url","__userId","userId","e","cachedPage","_getCachedPage","_processFromCache","processFromSsr","_processFromSsr","handleRoute","pageInfo","dynamicHead","dynamicBody","head","self","ssrContext","SsrContext","routeContext","_buildContext","_router","withValue","frData","addData","collectionData","action","queryParams","ex","error","message","stack","_injectHtml","getHtml","getHead","pageCacheTimeout","_cachePage","_moveScriptsToBottom","$","load","decodeEntities","heads","append","_params","query","_","clone","context","path","_serverRequest","pathname","parse","ext","test","cacheInfo","_getCacheKey","info","_getCacheKeyJNS","tmp","result","http","get","statusCode","readFileSync","ftime","parseInt","minHTML","tnow","diff","cacheExpiryTimeinMS","timeout","call","existingInfo","timeoutHandle","setTimeout","slugged"],"mappings":"AAAA,IAAIA,MAAJ;AAAWC,MAAM,CAACC,IAAP,CAAY,eAAZ,EAA4B;AAACF,EAAAA,MAAM,CAACG,CAAD,EAAG;AAACH,IAAAA,MAAM,GAACG,CAAP;AAAS;;AAApB,CAA5B,EAAkD,CAAlD;;AAEX,MAAMC,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAME,MAAM,GAAGC,OAAf;AACA,IAAIC,UAAU,GAAG,WAAjB,C,CAA6B;;AAC7B,IAAIC,QAAQ,GAAG,8BAAf;AACA,IAAGV,MAAM,CAACW,YAAV,EAAuBD,QAAQ,GAAG,qBAAX;AACvBF,OAAO,CAACI,GAAR,CAAY,mBAAiBF,QAA7B,E,CACA;;AACA,SAASG,OAAT,CAAkBC,IAAlB,EAAwB;AACpB,MAAG,CAACA,IAAJ,EAAS,OAAO,EAAP;AACT,QAAMC,CAAC,GAAG,6CAAV;AACA,QAAMC,CAAC,GAAG,8CAAV;AACA,QAAMC,CAAC,GAAG,IAAIC,MAAJ,CAAWH,CAAC,CAACI,KAAF,CAAQ,EAAR,EAAYC,IAAZ,CAAiB,GAAjB,CAAX,EAAkC,GAAlC,CAAV;AAEA,SAAON,IAAI,CAACO,QAAL,GAAgBC,WAAhB,GACFC,OADE,CACM,MADN,EACc,EADd,EAC4B;AAD5B,GAEFA,OAFE,CAEMN,CAFN,EAESO,CAAC,IACTR,CAAC,CAACS,MAAF,CAASV,CAAC,CAACW,OAAF,CAAUF,CAAV,CAAT,CAHD,EAG6B;AAH7B,GAIFD,OAJE,CAIM,IAJN,EAIY,OAJZ,EAI6B;AAJ7B,GAKFA,OALE,CAKM,WALN,EAKmB,EALnB,EAK6B;AAL7B,GAMFA,OANE,CAMM,QANN,EAMgB,GANhB,EAM6B;AAN7B,GAOFA,OAPE,CAOM,KAPN,EAOa,EAPb,EAO6B;AAP7B,GAQFA,OARE,CAQM,KARN,EAQa,EARb,CAAP,CANoB,CAcgB;AACvC;;AACD,IAAGd,UAAU,IAAI,IAAjB,EAAsB;AACpB,MAAIkB,GAAG,GAAGtB,OAAO,CAAC,SAAD,CAAjB;;AACA,MAAIuB,MAAM,GAAG,IAAID,GAAG,CAACE,MAAR,CAAe;AACxBC,IAAAA,WAAW,EAAE9B,MAAM,CAAC+B,QAAP,CAAgB,mBAAhB,EAAqCC,GAArC,CAAyCF,WAD9B;AAC2CG,IAAAA,eAAe,EAAEjC,MAAM,CAAC+B,QAAP,CAAgB,mBAAhB,EAAqCC,GAArC,CAAyCC,eADrG;AACsHC,IAAAA,MAAM,EAAElC,MAAM,CAAC+B,QAAP,CAAgB,mBAAhB,EAAqCC,GAArC,CAAyCE;AADvK,GAAf,CAAb;AAGA,MAAIC,EAAE,GAAG,IAAIR,GAAG,CAACS,EAAR,CAAWR,MAAX,CAAT;AACA,MAAIS,QAAQ,GAAG,eAAf;AACD;;AACD,SAASC,WAAT,CAAqBC,QAArB,EAA8BC,QAA9B,EAAuC;AACnC,MAAIC,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAEL,QADC;AAETM,IAAAA,MAAM,EAAEJ;AAFC,GAAb;AAKAJ,EAAAA,EAAE,CAACS,WAAH,CAAeH,MAAf,EAAuB,UAASI,GAAT,EAAcC,IAAd,EAAoB;AACvC,QAAID,GAAJ,EAAS,OAAOL,QAAQ,CAACK,GAAD,CAAf;AAET,QAAIC,IAAI,CAACC,QAAL,CAAcC,MAAd,IAAwB,CAA5B,EAA+B,OAAOR,QAAQ,EAAf;AAE/BC,IAAAA,MAAM,GAAG;AAACC,MAAAA,MAAM,EAAEL;AAAT,KAAT;AACAI,IAAAA,MAAM,CAACQ,MAAP,GAAgB;AAACC,MAAAA,OAAO,EAAC;AAAT,KAAhB;AAEAJ,IAAAA,IAAI,CAACC,QAAL,CAAcI,OAAd,CAAsB,UAASC,OAAT,EAAkB;AACpCX,MAAAA,MAAM,CAACQ,MAAP,CAAcC,OAAd,CAAsBG,IAAtB,CAA2B;AAACC,QAAAA,GAAG,EAAEF,OAAO,CAACE;AAAd,OAA3B;AACH,KAFD;AAGA,QAAIC,UAAU,GAAG,KAAjB;;AACA,QAAGd,MAAM,CAACQ,MAAP,CAAcC,OAAd,CAAsBF,MAAtB,GAA+B,IAAlC,EAAuC;AACnCP,MAAAA,MAAM,CAACQ,MAAP,CAAcC,OAAd,GAAwBT,MAAM,CAACQ,MAAP,CAAcC,OAAd,CAAsBM,KAAtB,CAA4B,CAA5B,EAA8B,IAA9B,CAAxB;AACAD,MAAAA,UAAU,GAAG,IAAb;AACH;;AAEDpB,IAAAA,EAAE,CAACsB,aAAH,CAAiBhB,MAAjB,EAAyB,UAASI,GAAT,EAAcC,IAAd,EAAoB;AACzC,UAAID,GAAJ,EAAS,OAAOL,QAAQ,CAACK,GAAD,CAAf;AACT,UAAGU,UAAH,EAAcjB,WAAW,CAACC,QAAD,EAAUC,QAAV,CAAX,CAAd,KACKA,QAAQ;AAChB,KAJD;AAKH,GAtBD;AAuBH;;AACDxC,MAAM,CAAC0D,OAAP,CAAe;AACXC,EAAAA,WAAW,EAAE,UAAUC,IAAV,EAAeC,QAAf,EAAyB;AAClCrD,IAAAA,OAAO,CAACI,GAAR,CAAY,uBAAZ;AACA,SAAKkD,OAAL,GAFkC,CAGlC;;AAEA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAGF,QAAQ,CAACnC,OAAT,CAAiB,QAAjB,KAA4B,CAAC,CAAhC,EAAkCqC,SAAS,IAAI,cAAb;AAClC,QAAGF,QAAQ,CAACnC,OAAT,CAAiB,WAAjB,KAA+B,CAAC,CAAnC,EAAqCqC,SAAS,IAAI,UAAb;AACrC,QAAG,CAACA,SAAJ,EAAcA,SAAS,IAAI,MAAb;AACd,QAAG/D,MAAM,CAACgE,aAAV,EAAwBD,SAAS,GAAG,SAAOA,SAAnB;AACxB,QAAIE,QAAQ,GAAGF,SAAS,GAAGF,QAAZ,GAAsB,OAArC,CAVkC,CAYlC;;AACA,QAAGpD,UAAU,IAAI,IAAjB,EAAsB;AACpB,UAAIgC,MAAM,GAAG;AACTC,QAAAA,MAAM,EAAML,QADH;AAETiB,QAAAA,GAAG,EAAaW,QAFP;AAGTC,QAAAA,aAAa,EAAGN,IAAI,CAACO,IAHZ;AAITC,QAAAA,IAAI,EAAYC,IAAI,CAACC,GAAL,KAAW,OAAX,GAAmBV;AAJ1B,OAAb;AAOAzB,MAAAA,EAAE,CAACoC,SAAH,CAAa9B,MAAb,EAAqB,UAASI,GAAT,EAAcC,IAAd,EAAoB;AACrCtC,QAAAA,OAAO,CAACI,GAAR,CAAY,wBAAsBqD,QAAtB,GAAiC,WAAjC,GAA6CL,IAAI,CAACZ,MAA9D,EADqC,CAErC;AACA;AACH,OAJD;AAKD,KA1BiC,CA2BlC;;;AACA,QAAGvC,UAAU,IAAI,WAAjB,EAA6B;AAC3B,YAAM+D,EAAE,GAAGnE,OAAO,CAAC,IAAD,CAAlB;;AACA,UAAIoE,OAAO,GAAG/D,QAAQ,GAACuD,QAAvB;AACAzD,MAAAA,OAAO,CAACI,GAAR,CAAY,sBAAoB6D,OAAhC;AACAD,MAAAA,EAAE,CAACE,aAAH,CAAiBD,OAAjB,EAA2BJ,IAAI,CAACC,GAAL,KAAW,OAAX,GAAmBV,IAA9C,EAAoD,MAApD,EAJ2B,CAK3B;AACA;AAEA;AACA;AACA;AACA;AACA;AACD;;AAED,WA3CkC,CA4ClC;AACH,GA9CU;AA+CXe,EAAAA,UAAU,EAAC,UAASC,GAAT,EAAa,CACpB;AACH,GAjDU;AAkDXC,EAAAA,aAAa,EAAC,UAASD,GAAT,EAAa;AACvBpE,IAAAA,OAAO,CAACI,GAAR,CAAY,yBAAZ;AACA,QAAIkE,KAAK,GAAG,CAAC,MAAD,EAAQ,cAAR,EAAuB,UAAvB,CAAZ;AACA,QAAIF,GAAJ;;AACA,SAAI,IAAIG,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAED,KAAK,CAAC9B,MAAtB,EAA8B+B,CAAC,EAA/B,EAAkC;AAC9BH,MAAAA,GAAG,GAAG5E,MAAM,CAACgE,aAAP,GAAuB,SAAOc,KAAK,CAACC,CAAD,CAAnC,GAAyCD,KAAK,CAACC,CAAD,CAApD;AACAzC,MAAAA,WAAW,CAACsC,GAAD,EAAK,UAAS/B,GAAT,EAAa;AAACrC,QAAAA,OAAO,CAACI,GAAR,CAAYiC,GAAZ;AAAiB,OAApC,CAAX;AACH;AACJ;AA1DU,CAAf,E,CA4DA;;AAEAmC,KAAK,GAAG,cAAcC,WAAd,CAA0B;AAChCC,EAAAA,WAAW,CAACC,MAAD,EAASC,OAAT,EAAkBC,OAAlB,EAA2BC,KAA3B,EAAkC;AAC3C,UAAMH,MAAN,EAAcC,OAAd,EAAuBC,OAAvB,EAAgCC,KAAhC;AAEA,SAAKC,MAAL,GAAc,EAAd;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,UAAMC,YAAY,GAAGpF,OAAO,CAAC,eAAD,CAA5B;;AACAqF,IAAAA,MAAM,CAACC,UAAP,CAAkBF,YAAY,EAA9B,EAFM,CAGN;;AACAC,IAAAA,MAAM,CAACC,UAAP,CAAkBC,UAAU,CAACC,iBAA7B;AAEA,UAAMC,KAAK,GAAGC,UAAU,CAACrF,QAAX,GAAsB,KAAK0E,OAAzC;AACAM,IAAAA,MAAM,CAACI,KAAP,CAAaA,KAAb,EAAoB,KAAKE,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACvD,MAAD,EAASyD,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AACnC,QAAI,CAAC,KAAKC,WAAL,CAAiBH,GAAG,CAACI,GAArB,CAAL,EAAgC;AAC9B,aAAOF,IAAI,EAAX;AACD,KAHkC,CAKnC;AACA;AACA;AACA;AACA;;;AACA,QAAG;AACDF,MAAAA,GAAG,CAACK,QAAJ,GAAevG,MAAM,CAACwG,MAAP,EAAf;AACD,KAFD,CAEC,OAAMC,CAAN,EAAQ;AACPP,MAAAA,GAAG,CAACK,QAAJ,GAAe,KAAKC,MAApB;AACD;;AACD,UAAME,UAAU,GAAG,KAAKC,cAAL,CAAoBT,GAAG,CAACI,GAAxB,EAA6BJ,GAAG,CAACK,QAAjC,CAAnB;;AACA,QAAIG,UAAJ,EAAgB;AACd,aAAO,KAAKE,iBAAL,CAAuBF,UAAvB,EAAmCR,GAAnC,EAAwCC,GAAxC,EAA6CC,IAA7C,CAAP;AACD,KAlBkC,CAoBnC;AACA;AACA;AACA;AACA;;;AACA,UAAMS,cAAc,GAAG,KAAKC,eAAL,CAAqBb,IAArB,CAA0B,IAA1B,EAAgCxD,MAAhC,EAAwCyD,GAAxC,EAA6CC,GAA7C,CAAvB;;AACAP,IAAAA,UAAU,CAACmB,WAAX,CAAuBF,cAAvB,EAAuCpE,MAAvC,EAA+CyD,GAA/C,EAAoDC,GAApD,EAAyDC,IAAzD;AACD;;AAEDQ,EAAAA,iBAAiB,CAACI,QAAD,EAAWd,GAAX,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;AAC1CF,IAAAA,GAAG,CAACe,WAAJ,GAAkBf,GAAG,CAACe,WAAJ,IAAmB,EAArC;AACAf,IAAAA,GAAG,CAACgB,WAAJ,GAAkBhB,GAAG,CAACgB,WAAJ,IAAmB,EAArC;AAEAhB,IAAAA,GAAG,CAACe,WAAJ,IAAmBD,QAAQ,CAACG,IAA5B;AACAjB,IAAAA,GAAG,CAACgB,WAAJ,IAAmBF,QAAQ,CAACpD,IAA5B,CAL0C,CAO1C;AACA;;AACAwC,IAAAA,IAAI,GATsC,CAUxC;AACH;;AAEDU,EAAAA,eAAe,CAACrE,MAAD,EAASyD,GAAT,EAAcC,GAAd,EAAmB;AAChC;AACA,UAAMiB,IAAI,GAAG,IAAb;AACA,UAAMC,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;AACA,UAAMC,YAAY,GAAGH,IAAI,CAACI,aAAL,CAAmBtB,GAAnB,EAAwBzD,MAAxB,CAArB;;AAEA2E,IAAAA,IAAI,CAACK,OAAL,CAAaJ,UAAb,CAAwBK,SAAxB,CAAkCL,UAAlC,EAA8C,MAAM;AAClDD,MAAAA,IAAI,CAACK,OAAL,CAAaF,YAAb,CAA0BG,SAA1B,CAAoCH,YAApC,EAAkD,MAAM;AACtD,YAAI;AACF;AACA;AACA,gBAAMI,MAAM,GAAG,EAAf,CAHE,CAGgB;;AAClB,cAAIA,MAAJ,EAAY;AACVN,YAAAA,UAAU,CAACO,OAAX,CAAmBD,MAAM,CAACE,cAA1B;AACD;;AAED,cAAIT,IAAI,CAAC/B,OAAL,CAAayC,MAAjB,EAAyB;AACvBV,YAAAA,IAAI,CAAC/B,OAAL,CAAayC,MAAb,CAAoBP,YAAY,CAAC9E,MAAjC,EAAyC8E,YAAY,CAACQ,WAAtD;AACD;AACF,SAXD,CAWE,OAAOC,EAAP,EAAW;AACXzH,UAAAA,MAAM,CAAC0H,KAAP,sCAA2C/B,GAAG,CAACI,GAA/C,eAAuD0B,EAAE,CAACE,OAA1D;AACA3H,UAAAA,MAAM,CAAC0H,KAAP,CAAaD,EAAE,CAACG,KAAhB;AACD;AACF,OAhBD;;AAkBAf,MAAAA,IAAI,CAACgB,WAAL,CAAiBlC,GAAjB,EAAsBC,GAAtB,EAA2BkB,UAA3B;;AACE7G,MAAAA,OAAO,CAACI,GAAR,CAAY,0BAAZ;AACH,KArBD;AAsBD;;AAEDwH,EAAAA,WAAW,CAAClC,GAAD,EAAMC,GAAN,EAAWkB,UAAX,EAAuB;AAChC,UAAMzD,IAAI,GAAGyD,UAAU,CAACgB,OAAX,EAAb;AACA,UAAMlB,IAAI,GAAGE,UAAU,CAACiB,OAAX,EAAb;AAEApC,IAAAA,GAAG,CAACe,WAAJ,GAAkBf,GAAG,CAACe,WAAJ,IAAmB,EAArC;AACAf,IAAAA,GAAG,CAACgB,WAAJ,GAAkBhB,GAAG,CAACgB,WAAJ,IAAmB,EAArC;AAEAhB,IAAAA,GAAG,CAACe,WAAJ,IAAmBE,IAAnB;AACAjB,IAAAA,GAAG,CAACgB,WAAJ,IAAmBtD,IAAnB,CARgC,CAWhC;;AACA,QAAI,KAAK6D,OAAL,CAAac,gBAAjB,EAAmC;AACjC,YAAMvB,QAAQ,GAAG;AACf;AACAG,QAAAA,IAAI,EAAEA,IAFS;AAGfvD,QAAAA,IAAI,EAAEA;AAHS,OAAjB;;AAKA,WAAK4E,UAAL,CAAgBtC,GAAG,CAACI,GAApB,EAAyBJ,GAAG,CAACK,QAA7B,EAAuCS,QAAvC,EAAiD,KAAKS,OAAL,CAAac,gBAA9D;AACD;AAEF;;AAEDE,EAAAA,oBAAoB,CAAC7E,IAAD,EAAO;AACzB,UAAM8E,CAAC,GAAGpI,OAAO,CAACqI,IAAR,CAAa/E,IAAb,EAAmB;AAC3BgF,MAAAA,cAAc,EAAE;AADW,KAAnB,CAAV;AAGA,UAAMC,KAAK,GAAGH,CAAC,CAAC,aAAD,CAAf;AACAA,IAAAA,CAAC,CAAC,MAAD,CAAD,CAAUI,MAAV,CAAiBD,KAAjB,EALyB,CAOzB;;AACAH,IAAAA,CAAC,CAAC,MAAD,CAAD,CAAU9E,IAAV,CAAe8E,CAAC,CAAC,MAAD,CAAD,CAAU9E,IAAV,GAAiBrC,OAAjB,CAAyB,eAAzB,EAA0C,EAA1C,CAAf;AAEA,WAAOmH,CAAC,CAAC9E,IAAF,EAAP;AACD;;AAED4D,EAAAA,aAAa,CAACtB,GAAD,EAAM6C,OAAN,EAAe;AAC1B,UAAMhB,WAAW,GAAGgB,OAAO,CAACC,KAA5B,CAD0B,CAE1B;AACA;AACA;;AACA,UAAMvG,MAAM,GAAGwG,CAAC,CAACC,KAAF,CAAQH,OAAR,CAAf;;AACA,WAAOtG,MAAM,CAACuG,KAAd;AAEA,UAAMG,OAAO,GAAG;AACdrD,MAAAA,KAAK,EAAE,IADO;AAEdsD,MAAAA,IAAI,EAAElD,GAAG,CAACI,GAFI;AAGd7D,MAAAA,MAHc;AAIdsF,MAAAA,WAJc;AAKd;AACAsB,MAAAA,cAAc,EAAEnD;AANF,KAAhB;AASA,WAAOiD,OAAP;AACD;;AAED9C,EAAAA,WAAW,CAACC,GAAD,EAAM;AACf,UAAMgD,QAAQ,GAAGlJ,GAAG,CAACmJ,KAAJ,CAAUjD,GAAV,EAAegD,QAAhC;AACA,UAAME,GAAG,GAAGF,QAAQ,CAACnI,KAAT,CAAe,GAAf,EAAoBqC,KAApB,CAA0B,CAA1B,EAA6BpC,IAA7B,CAAkC,GAAlC,CAAZ,CAFe,CAIf;;AACA,QAAI,CAACoI,GAAL,EAAU;AACR,aAAO,IAAP;AACD,KAPc,CASf;;;AACA,QAAI,OAAOC,IAAP,CAAYD,GAAZ,CAAJ,EAAsB;AACpB,aAAO,IAAP;AACD,KAZc,CAcf;AACA;;;AACA,WAAO,KAAP;AACD;;AAED7C,EAAAA,cAAc,CAACL,GAAD,EAAME,MAAN,EAAc;AAE1B,UAAMkD,SAAS,GAAG;AAACpD,MAAAA,GAAD;AAAME,MAAAA;AAAN,KAAlB,CAF0B,CAI1B;;AACA,QAAI3C,QAAQ,GAAG,KAAK8F,YAAL,CAAkBD,SAAlB,CAAf,CAL0B,CAM1B;;;AAEA,UAAME,IAAI,GAAG,KAAKrE,MAAL,CAAY1B,QAAZ,CAAb,CAR0B,CAS1B;AACA;AACA;AACA;AACA;AAIE;AAEA;;AACAA,IAAAA,QAAQ,GAAG,KAAKgG,eAAL,CAAqB;AAACvD,MAAAA,GAAD;AAAME,MAAAA;AAAN,KAArB,CAAX;AACA,QAAIzC,SAAS,GAAG,EAAhB;AACA,QAAGF,QAAQ,CAACnC,OAAT,CAAiB,QAAjB,KAA4B,CAAC,CAAhC,EAAkCqC,SAAS,IAAI,cAAb;AAClC,QAAGF,QAAQ,CAACnC,OAAT,CAAiB,WAAjB,KAA+B,CAAC,CAAnC,EAAqCqC,SAAS,IAAI,UAAb;AACrC,QAAG,CAACA,SAAJ,EAAcA,SAAS,IAAI,MAAb;AACd,QAAG/D,MAAM,CAACgE,aAAV,EAAwBD,SAAS,GAAG,SAAOA,SAAnB;AACxB,QAAI+F,GAAG,GAAG,KAAV;;AACA,QAAGrJ,UAAU,IAAI,IAAjB,EAAsB;AACpB,UAAI6F,GAAG,GAAG,sDAAqDvC,SAArD,GAAiEF,QAAjE,GAA4E,OAAtF;;AACA,UAAI;AACFkG,QAAAA,MAAM,GAAG/J,MAAM,CAACgK,IAAP,CAAYC,GAAZ,CAAgB3D,GAAhB,CAAT;;AACA,YAAGyD,MAAM,CAACG,UAAP,IAAmB,GAAtB,EAA0B;AACxBJ,UAAAA,GAAG,GAAGC,MAAM,CAAC3G,OAAP,CAAejC,KAAf,CAAqB,OAArB,CAAN;AACD;AACF,OALD,CAKC,OAAMsF,CAAN,EAAQ;AACLjG,QAAAA,OAAO,CAACI,GAAR,CAAY,4BAA0BiD,QAAtC;AACH;AACF,KAVD,MAUM,IAAGpD,UAAU,IAAI,WAAjB,EAA6B;AACjC,YAAM+D,EAAE,GAAGnE,OAAO,CAAC,IAAD,CAAlB;;AAEA,UAAIoE,OAAO,GAAG/D,QAAQ,GAACqD,SAAT,GAAqBF,QAArB,GAA+B,OAA7C;;AACA,UAAI;AACFiG,QAAAA,GAAG,GAAGtF,EAAE,CAAC2F,YAAH,CAAgB1F,OAAhB,EAAyB,MAAzB,CAAN;AACAqF,QAAAA,GAAG,GAAGA,GAAG,CAAC3I,KAAJ,CAAU,OAAV,CAAN,CAFE,CAGF;AACD,OAJD,CAIC,OAAMsF,CAAN,EAAQ;AACLjG,QAAAA,OAAO,CAACI,GAAR,CAAY,mCAAiC6D,OAA7C;AACH;AACF;;AACD,QAAI;AACA;AAEA,UAAGqF,GAAH,EAAO;AACH,YAAIM,KAAK,GAAGC,QAAQ,CAACP,GAAG,CAAC,CAAD,CAAJ,CAApB;AACA,YAAIQ,OAAO,GAAGR,GAAG,CAAC,CAAD,CAAjB;AACA,YAAIS,IAAI,GAAGlG,IAAI,CAACC,GAAL,EAAX;AACA,YAAIkG,IAAI,GAAGD,IAAI,GAAGH,KAAlB;AAEA,YAAIK,mBAAmB,GAAG,SAA1B,CANG,CAMkC;;AACrC,YAAG5G,QAAQ,CAACnC,OAAT,CAAiB,MAAjB,KAA0B,CAAC,CAA9B,EAAgC+I,mBAAmB,GAAG,OAAtB,CAP7B,CAO0D;;AAC7D,YAAG5G,QAAQ,CAACnC,OAAT,CAAiB,QAAjB,KAA4B,CAAC,CAAhC,EAAkC+I,mBAAmB,GAAG,OAAtB,CAR/B,CAQ4D;;AAC/D,YAAG5G,QAAQ,CAACnC,OAAT,CAAiB,WAAjB,KAA+B,CAAC,CAAnC,EAAqC+I,mBAAmB,GAAG,OAAtB,CATlC,CASgE;;AACnE,YAAG5G,QAAQ,CAACnC,OAAT,CAAiB,cAAjB,KAAkC,CAAC,CAAtC,EAAwC+I,mBAAmB,GAAG,OAAtB,CAVrC,CAUmE;AACtE;;AAEAjK,QAAAA,OAAO,CAACI,GAAR,CAAY,WAAS2J,IAAT,GAAc,UAAd,GAAyBH,KAAzB,GAA+B,SAA/B,GAAyCI,IAAzC,GAA8C,WAA9C,GAA0DV,GAAG,CAAC,CAAD,CAA7D,GAAiE,uBAAjE,GAAyFW,mBAArG;;AAEA,YAAGD,IAAI,GAAGC,mBAAV,EAA+B;AAAC;AAC5BjK,UAAAA,OAAO,CAACI,GAAR,CAAY,uCAAqCiD,QAAjD,EAD2B,CAE3B;AACA;;AAEA,iBAAO;AAACsD,YAAAA,IAAI,EAAC2C,GAAG,CAAC,CAAD,CAAT;AAAalG,YAAAA,IAAI,EAACkG,GAAG,CAAC,CAAD;AAArB,WAAP;AACH,SAND,MAMK;AACDtJ,UAAAA,OAAO,CAACI,GAAR,CAAY,oBAAmB4J,IAAnB,GAAyB,QAAzB,GAAkC3G,QAA9C,EADC,CAED;AACH;AACJ,OAzBD,MAyBK;AACDrD,QAAAA,OAAO,CAACI,GAAR,CAAY,eAAaiD,QAAzB;AACH;AACJ,KA/BD,CA+BC,OAAM4C,CAAN,EAAQ;AACLjG,MAAAA,OAAO,CAACI,GAAR,CAAY,sBAAoBiD,QAAhC;AACH,KAlFuB,CAmFxB;;AAEH;;AAED2E,EAAAA,UAAU,CAAClC,GAAD,EAAME,MAAN,EAAc1D,IAAd,EAAoB4H,OAApB,EAA6B;AAEnC,QAAI7G,QAAQ,GAAG,KAAKgG,eAAL,CAAqB;AAACvD,MAAAA,GAAD;AAAME,MAAAA;AAAN,KAArB,CAAf;;AACAxG,IAAAA,MAAM,CAAC2K,IAAP,CAAY,aAAZ,YAA6B7H,IAAI,CAACqE,IAAlC,kBAA8CrE,IAAI,CAACc,IAAnD,GAA0DC,QAA1D,EAHmC,CAMrC;;AACA,UAAM6F,SAAS,GAAG;AAACpD,MAAAA,GAAD;AAAME,MAAAA;AAAN,KAAlB;AACA3C,IAAAA,QAAQ,GAAG,KAAK8F,YAAL,CAAkBD,SAAlB,CAAX;AACA,UAAMkB,YAAY,GAAG,KAAKrF,MAAL,CAAY1B,QAAZ,CAArB;;AACA,QAAI+G,YAAJ,EAAkB;AAChB;AACA;AACA;AACA;AACD;;AAED,UAAMhB,IAAI,GAAG;AACX9G,MAAAA,IAAI,EAAEA,IADK;AAEX+H,MAAAA,aAAa,EAAEC,UAAU,CAAC,MAAM;AAC9B,eAAO,KAAKvF,MAAL,CAAY1B,QAAZ,CAAP;AACD,OAFwB,EAEtB6G,OAFsB;AAFd,KAAb;AAOAlK,IAAAA,OAAO,CAACI,GAAR,CAAY,8BAA4BiD,QAAxC;AACA,SAAK0B,MAAL,CAAY1B,QAAZ,IAAwB+F,IAAxB;AACD;;AAEDC,EAAAA,eAAe,OAAqB;AAAA,QAApB;AAACrD,MAAAA,MAAM,GAAG,EAAV;AAAcF,MAAAA;AAAd,KAAoB;AAClC,QAAIyE,OAAO,GAAGlK,OAAO,CAACyF,GAAD,CAArB;AACA,WAAS,CAACE,MAAM,GAAGA,MAAH,GAAY,OAAnB,IAA6B,OAA7B,IAAuCuE,OAAO,GAAGA,OAAH,GAAa,MAA3D,CAAT;AACD;;AACDpB,EAAAA,YAAY,QAAqB;AAAA,QAApB;AAACnD,MAAAA,MAAM,GAAG,EAAV;AAAcF,MAAAA;AAAd,KAAoB;AAC/B,qBAAUE,MAAV,eAAqBF,GAArB;AACD;;AA7R+B,CAAlC","sourcesContent":["import {Meteor} from \"meteor/meteor\";\n\nconst Url = require('url');\nconst Cheerio = require('cheerio');\nconst logger = console;\nlet CACHE_MODE = 'localfile';//s3, localfile\nlet basePath = '/Users/njanjanam/localcache/'\nif(Meteor.isProduction)basePath = '/mnt/flatbid_cache/'\nconsole.log('Base Path is: '+basePath)\n///////////// CUSTOM JNS CODE\nfunction slugify (text) {\n    if(!text)return '';\n    const a = 'àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/,:;'\n    const b = 'aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n\n    return text.toString().toLowerCase()\n        .replace(/\\s+/g, '')           // Replace spaces with \"\"\n        .replace(p, c =>\n            b.charAt(a.indexOf(c)))     // Replace special chars\n        .replace(/&/g, '-and-')         // Replace & with ''\n        .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n        .replace(/\\-\\-+/g, '-')         // Replace multiple - with single ''\n        .replace(/^-+/, '')             // Trim - from start of text\n        .replace(/-+$/, '')             // Trim - from end of text\n}\nif(CACHE_MODE == 's3'){ \n  var AWS = require('aws-sdk');\n  var config = new AWS.Config({\n      accessKeyId: Meteor.settings['galaxy.meteor.com'].env.accessKeyId, secretAccessKey: Meteor.settings['galaxy.meteor.com'].env.secretAccessKey, region: Meteor.settings['galaxy.meteor.com'].env.region\n  });\n  var s3 = new AWS.S3(config);\n  var myBucket = 'flatbid-cache';\n}\nfunction emptyBucket(pathName,callback){\n    var params = {\n        Bucket: myBucket,\n        Prefix: pathName\n    };\n\n    s3.listObjects(params, function(err, data) {\n        if (err) return callback(err);\n\n        if (data.Contents.length == 0) return callback();\n\n        params = {Bucket: myBucket};\n        params.Delete = {Objects:[]};\n\n        data.Contents.forEach(function(content) {\n            params.Delete.Objects.push({Key: content.Key});\n        });\n        var moreThan1k = false;\n        if(params.Delete.Objects.length > 1000){\n            params.Delete.Objects = params.Delete.Objects.slice(0,1000);\n            moreThan1k = true\n        }\n\n        s3.deleteObjects(params, function(err, data) {\n            if (err) return callback(err);\n            if(moreThan1k)emptyBucket(pathName,callback);\n            else callback();\n        });\n    });\n}\nMeteor.methods({\n    createCache: function (html,cacheKey) {\n        console.log('in createCache method');\n        this.unblock();\n        // if(Meteor.isDevelopment)return;\n\n        var catchPath = '';\n        if(cacheKey.indexOf('jns-b-')!=-1)catchPath += 'BrowsePages/'\n        if(cacheKey.indexOf('jns-rent-')!=-1)catchPath += 'LDPages/'\n        if(!catchPath)catchPath += 'All/'\n        if(Meteor.isDevelopment)catchPath = 'dev/'+catchPath\n        var filename = catchPath + cacheKey +'.html';\n\n        ////////////////// AWS S3\n        if(CACHE_MODE == 's3'){ \n          var params = {\n              Bucket    : myBucket,\n              Key           : filename,\n              ContentLength : html.size,\n              Body          : Date.now()+'{jns}'+html\n          };\n\n          s3.putObject(params, function(err, data) {\n              console.log('Cache created for: '+filename + \" Length: \"+html.length)\n              // console.log(data)\n              // console.log(err)\n          });\n        }\n        ////////////////// LOCAL FILE\n        if(CACHE_MODE == 'localfile'){ \n          const fs = require('fs');\n          var temPath = basePath+filename;\n          console.log('Catch create in: '+temPath)\n          fs.writeFileSync(temPath , Date.now()+'{jns}'+html, 'utf8');\n          // var Minimize = require('minimize')\n          //     , minimize = new Minimize();\n          \n          // minimize.parse(html, function (error, data) {\n          //     console.log('Minimised');\n          //     // console.log(data);\n          //     fs.writeFileSync(temPath , data, 'utf8');\n          // });\n        }\n\n        return;\n        // fs.writeFileSync(temPath , data, 'utf8');\n    },\n    clearCache:function(key){\n        // console.log('in clearCache method');\n    },\n    clearAllCache:function(key){\n        console.log('in clearAllCache method');\n        var paths = ['All/','BrowsePages/','LDPages/']\n        var key;\n        for(var i=0; i< paths.length ;i++){\n            key = Meteor.isDevelopment ? 'dev/'+paths[i] : paths[i]\n            emptyBucket(key,function(err){console.log(err)})\n        }\n    }\n});\n///////////// CUSTOM JNS CODE END\n\nRoute = class extends SharedRoute {\n  constructor(router, pathDef, options, group) {\n    super(router, pathDef, options, group);\n\n    this._cache = {};\n  }\n\n  _init() {\n    const cookieParser = require('cookie-parser');\n    Picker.middleware(cookieParser());\n    // process null subscriptions with FR support\n    Picker.middleware(FastRender.handleOnAllRoutes);\n\n    const route = FlowRouter.basePath + this.pathDef;\n    Picker.route(route, this._handleRoute.bind(this));\n  }\n\n  _handleRoute(params, req, res, next) {\n    if (!this._isHtmlPage(req.url)) {\n      return next();\n    }\n\n    // This userId will be useful in the at the later on when\n    // it's time to cache the page.\n    // Normally, we can't access `Meteor.userId()` outside of a method\n    // But here, we could do it because we call `FastRender.handleOnAllRoutes`.\n    // It creates a FastRender context and assign it for the current fiber.\n    try{\n      req.__userId = Meteor.userId();\n    }catch(e){\n      req.__userId = this.userId;\n    }\n    const cachedPage = this._getCachedPage(req.url, req.__userId);\n    if (cachedPage) {\n      return this._processFromCache(cachedPage, req, res, next);\n    }\n\n    // Here we need to processFromSsr,\n    // but also we need to process with FastRender as well.\n    // That's why we bind processFromSsr and pass args as below.\n    // It does not get any arguments from FastRender.\n    // FastRender just trigger the following handler and do it's job\n    const processFromSsr = this._processFromSsr.bind(this, params, req, res);\n    FastRender.handleRoute(processFromSsr, params, req, res, next);\n  }\n\n  _processFromCache(pageInfo, req, res, next) {\n    req.dynamicHead = req.dynamicHead || '';\n    req.dynamicBody = req.dynamicBody || '';\n\n    req.dynamicHead += pageInfo.head;\n    req.dynamicBody += pageInfo.html;\n\n    // InjectData.pushData(res, 'fast-render-data', pageInfo.frData);\n    //   console.log('frData length: '+pageInfo.frData.length)\n    next();\n      // console.log('_processFromCache end')\n  }\n\n  _processFromSsr(params, req, res) {\n    // console.log('_processFromSsr')\n    const self = this;\n    const ssrContext = new SsrContext();\n    const routeContext = self._buildContext(req, params);\n\n    self._router.ssrContext.withValue(ssrContext, () => {\n      self._router.routeContext.withValue(routeContext, () => {\n        try {\n          // get the data for null subscriptions and add them to the\n          // ssrContext\n          const frData = '';//InjectData.getData(res, 'fast-render-data');\n          if (frData) {\n            ssrContext.addData(frData.collectionData);\n          }\n\n          if (self.options.action) {\n            self.options.action(routeContext.params, routeContext.queryParams);\n          }\n        } catch (ex) {\n          logger.error(`Error when doing SSR. path:${req.url}: ${ex.message}`);\n          logger.error(ex.stack);\n        }\n      });\n\n      self._injectHtml(req, res, ssrContext);\n        console.log('_processFromSsr complete')\n    });\n  }\n\n  _injectHtml(req, res, ssrContext) {\n    const html = ssrContext.getHtml();\n    const head = ssrContext.getHead();\n\n    req.dynamicHead = req.dynamicHead || '';\n    req.dynamicBody = req.dynamicBody || '';\n\n    req.dynamicHead += head;\n    req.dynamicBody += html;\n\n\n    // cache the page if mentioned a timeout\n    if (this._router.pageCacheTimeout) {\n      const pageInfo = {\n        // frData: InjectData.getData(res, 'fast-render-data'),\n        head: head,\n        html: html\n      };\n      this._cachePage(req.url, req.__userId, pageInfo, this._router.pageCacheTimeout);\n    }\n\n  }\n\n  _moveScriptsToBottom(html) {\n    const $ = Cheerio.load(html, {\n      decodeEntities: false\n    });\n    const heads = $('head script');\n    $('body').append(heads);\n\n    // Remove empty lines caused by removing scripts\n    $('head').html($('head').html().replace(/(^[ \\t]*\\n)/gm, ''));\n\n    return $.html();\n  }\n\n  _buildContext(req, _params) {\n    const queryParams = _params.query;\n    // We need to remove `.query` since it's not part of our params API\n    // But we only need to remove it in our copy.\n    // We should not trigger any side effects\n    const params = _.clone(_params);\n    delete params.query;\n\n    const context = {\n      route: this,\n      path: req.url,\n      params,\n      queryParams,\n      // We might change this later on. That's why it's starting with _\n      _serverRequest: req\n    };\n\n    return context;\n  }\n\n  _isHtmlPage(url) {\n    const pathname = Url.parse(url).pathname;\n    const ext = pathname.split('.').slice(1).join('.');\n\n    // if there is no extention, yes that's a html page\n    if (!ext) {\n      return true;\n    }\n\n    // if this is htm or html, yes that's a html page\n    if (/^htm/.test(ext)) {\n      return true;\n    }\n\n    // if not we assume this is not as a html page\n    // this doesn't do any harm. But no SSR\n    return false;\n  }\n\n  _getCachedPage(url, userId) {\n\n    const cacheInfo = {url, userId};\n\n    //////Below is the logic for this extension's default in-build caching system. Enabling it to reduce the number of calls to AWS S3 for most commenly crawled pages by SearchEngines\n    var cacheKey = this._getCacheKey(cacheInfo);\n    // console.log('local Cache - cacheKey: '+cacheKey)\n\n    const info = this._cache[cacheKey];\n    // if (info) {\n    //   console.log('Fetching from the memory Cache: '+cacheKey)\n    //   return info.data;\n    // }\n    ///End of inbuild code\n\n\n\n      /////////////JNS CUSTOM CODE START - This will run if the above code didn't find the cache.\n\n      // var start = new Date().getTime();\n      cacheKey = this._getCacheKeyJNS({url, userId});\n      var catchPath = '';\n      if(cacheKey.indexOf('jns-b-')!=-1)catchPath += 'BrowsePages/'\n      if(cacheKey.indexOf('jns-rent-')!=-1)catchPath += 'LDPages/'\n      if(!catchPath)catchPath += 'All/'\n      if(Meteor.isDevelopment)catchPath = 'dev/'+catchPath\n      let tmp = false;\n      if(CACHE_MODE == 's3'){ \n        var url = 'https://s3-eu-west-1.amazonaws.com/flatbid-cache/'+ catchPath + cacheKey + '.html';\n        try {\n          result = Meteor.http.get(url);\n          if(result.statusCode==200){\n            tmp = result.content.split('{jns}')\n          }\n        }catch(e){\n            console.log('s3 Cache fetch failed: '+cacheKey);\n        }\n      }else if(CACHE_MODE == 'localfile'){ \n        const fs = require('fs');\n        \n        var temPath = basePath+catchPath + cacheKey +'.html';\n        try {\n          tmp = fs.readFileSync(temPath ,'utf8');\n          tmp = tmp.split('{jns}');\n          //fs.readFileSync('/mnt/flatbid_cache/BrowsePages/guest-jns-b-apartment-for-rent-in-rathbane-limerick-irelandluxurysort1.html' ,'utf8');\n        }catch(e){\n            console.log('localfile Cache fetch failed: '+temPath);\n        }\n      }\n      try {\n          // if(Meteor.isDevelopment)throw new Meteor.Error('bad', 'stuff happened');\n          \n          if(tmp){\n              var ftime = parseInt(tmp[0])\n              var minHTML = tmp[1]\n              var tnow = Date.now();\n              var diff = tnow - ftime;\n\n              var cacheExpiryTimeinMS = 172800000; //48 * 60 * 60 *1000 //48 hours Default\n              if(cacheKey.indexOf('home')!=-1)cacheExpiryTimeinMS = 1800000//60 * 60 *1000 //60 min for home page\n              if(cacheKey.indexOf('jns-b-')!=-1)cacheExpiryTimeinMS = 1800000//30 * 60 *1000 //30 min for browse pages\n              if(cacheKey.indexOf('jns-rent-')!=-1)cacheExpiryTimeinMS = 2280000 // 38 * 60 *1000 //1.5 days for rent pages\n              if(cacheKey.indexOf('jns-letting-')!=-1)cacheExpiryTimeinMS = 2880000 //48 * 60 *1000 //2 days for letting pages\n              // cacheExpiryTimeinMS = 1 *1000 //1 sec\n\n              console.log('tnow: '+tnow+' ftime: '+ftime+' diff: '+diff+' tmp[0]: '+tmp[0]+' cacheExpiryTimeinMS:'+cacheExpiryTimeinMS);\n\n              if(diff < cacheExpiryTimeinMS) {//Cachce has not expired yet.\n                  console.log('Successfully fetching from cache: '+cacheKey);\n                  // this.response.writeHead(200, {'Content-Type': 'text/html'});\n                  // this.response.end(minHTML);\n\n                  return {head:tmp[1],html:tmp[2]};\n              }else{\n                  console.log('Cache expired: '+ diff +' key: '+cacheKey);\n                  // Meteor.call('clearCache',cacheKey);\n              }\n          }else{\n              console.log('No cache: '+cacheKey);\n          }\n      }catch(e){\n          console.log('Cache not found: '+cacheKey);\n      }\n      /////////////JNS CUSTOM CODE END\n\n  }\n\n  _cachePage(url, userId, data, timeout) {\n\n      var cacheKey = this._getCacheKeyJNS({url, userId});\n      Meteor.call('createCache',`${data.head}{jns}${data.html}`,cacheKey);\n\n\n    ///Below is the logic for this extension's default in-build caching system. Enabling it to reduce the number of calls to AWS S3 for most commenly crawled pages by SearchEngines\n    const cacheInfo = {url, userId};\n    cacheKey = this._getCacheKey(cacheInfo);\n    const existingInfo = this._cache[cacheKey];\n    if (existingInfo) {\n      // Sometimes, it's possible get this called multiple times\n      // due to race conditions. So, in that case, simply discard\n      // caching this page.\n      return;\n    }\n\n    const info = {\n      data: data,\n      timeoutHandle: setTimeout(() => {\n        delete this._cache[cacheKey];\n      }, timeout)\n    };\n\n    console.log('Local Cache created for: '+cacheKey)\n    this._cache[cacheKey] = info;\n  }\n\n  _getCacheKeyJNS({userId = '', url}) {\n    var slugged = slugify(url);\n    return   (userId ? userId : 'guest' )+'-jns-'+ (slugged ? slugged : 'home' )\n  }\n  _getCacheKey({userId = '', url}) {\n    return `${userId}::${url}`;\n  }\n};\n"]},"sourceType":"module","hash":"5a86f8a3363ec4102ca59a267ad5cf8faad8c1ed"}
