{"head":"","body":"","js":"\nTemplate.__checkName(\"myProperties\");\nTemplate[\"myProperties\"] = new Template(\"Template.myProperties\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isSubsLoaded\"));\n  }, function() {\n    return [ \"\\n\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"userLoggedIn\"));\n    }, function() {\n      return [ \"\\n    \", HTML.SECTION({\n        class: \"unitspage-holder\"\n      }, \"\\n        \", HTML.SECTION({\n        class: \"logo-below-div\"\n      }, \"\\n            \", HTML.DIV({\n        class: \"container\"\n      }, \"\\n                \", HTML.DIV({\n        class: \"logo-holder-div\"\n      }, \"\\n                    \", HTML.DIV({\n        class: \"logo-holder\"\n      }, \"\\n                        \", HTML.UL(HTML.Raw('\\n                            <!--<li><span class=\"backBtn\" style=\"cursor: pointer;\"><img src=\"{{cdnPath \\'/images/back-arrow.png\\'}}\"></span></li>-->\\n                            '), HTML.LI(HTML.Raw(\"<h3>MY PROPERTIES</h3>\\n                                \"), HTML.H4(\"Total : \", Blaze.View(\"lookup:data.totalResultsCount\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"totalResultsCount\"));\n      }), \" \"), HTML.Raw('\\n                                <!--<h4 style=\"\">Showing 3 of 14 (<a href=\"javascript:void(0)\" style=\"color:#18bc9c\">Edit filters</a>)</h4>-->\\n                            ')), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n        class: \"menu\"\n      }, \"\\n                        \", HTML.UL(HTML.Raw('\\n                            <!--<li class=\"left-border\">-->\\n                                <!--<h4>Filters (<a href=\"javascript:void(0)\" style=\"color: #18bc9c;\">Edit</a>)</h4>-->\\n                                <!--<h3 class=\"pad-btm-0 text-center\">2</h3>-->\\n                            <!--</li>-->\\n                            '), HTML.LI({\n        class: \"left-border\"\n      }, HTML.Raw(\"\\n                                <h4>ACTIVE PROPERTIES</h4>\\n                                \"), HTML.H3({\n        class: \"pad-btm-0 text-center\"\n      }, Blaze.View(\"lookup:agentStats.activeAuctions\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"agentStats\"), \"activeAuctions\"));\n      })), \"\\n                            \"), \"\\n                            \", HTML.LI({\n        class: \"left-border\"\n      }, HTML.Raw(\"\\n                                <h4>APPLICATIONS RECEIVED</h4>\\n                                \"), HTML.H3({\n        class: \"pad-btm-0 text-center\"\n      }, Blaze.View(\"lookup:agentStats.totalBidsReceived\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"agentStats\"), \"totalBidsReceived\"));\n      })), \"\\n                            \"), \"\\n                            \", HTML.LI({\n        class: \"left-border  text-left\"\n      }, HTML.Raw(\"\\n                                <h4>EST. PROFIT</h4>\\n                                \"), HTML.H3({\n        class: \"pad-btm-0 text-center\"\n      }, HTML.Raw(\"&euro; \"), Blaze.View(\"lookup:agentStats.bidProfit\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"agentStats\"), \"bidProfit\"));\n      })), \"\\n                            \"), \"\\n                            \", HTML.LI({\n        class: \"addPropertyBtnLi\"\n      }, \"\\n\", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showAddProperty\"));\n      }, function() {\n        return HTML.Raw('<button class=\"transparent-btn btns addPropertyBtn\" type=\"button\">HIDE</button>');\n      }, function() {\n        return HTML.Raw('\\n                                <button class=\"green-btn btns addPropertyBtn\" type=\"button\"><span class=\"glyphicon glyphicon-plus\" aria-hidden=\"true\"></span> ADD PROPERTY</button>\\n');\n      }), \"\\n                            \"), \"\\n\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n\\n        \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showAddProperty\"));\n      }, function() {\n        return [ \"\\n        \", HTML.SECTION({\n          class: \"mar-top-20 \"\n        }, \"\\n            \", HTML.DIV({\n          class: \"container background-white\"\n        }, \"\\n                \", HTML.DIV({\n          class: \"filter-holder mar-top-20\"\n        }, \"\\n                    \", HTML.DIV({\n          class: \"autoFrm\"\n        }, HTML.Raw(\"\\n                        <h3>Add Property Form</h3>\\n                        <p>Enter the details of the property below and click submit.<br><br></p>\\n\\n                        \"), Spacebars.include(view.lookupTemplate(\"addPropertyForm\")), \"\\n\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n\\n        \" ];\n      }), \"\\n\\n        \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showFilters\"));\n      }, function() {\n        return [ HTML.Raw(\"\\n        <!-- units property div -->\\n        \"), HTML.SECTION({\n          class: \"mar-top-20 xs-filter\"\n        }, \"\\n            \", HTML.DIV({\n          class: \"container\"\n        }, HTML.Raw('\\n                <!--  <div class=\"head-border-bottom\"><h2>Choose Your Home</h2></div> -->\\n                <!-- filter section -->\\n                '), HTML.DIV({\n          class: \"filter-holder\"\n        }, HTML.Raw('\\n                    <span class=\"visible-xs filter-close fancybox-close\"></span>\\n                    '), HTML.DIV({\n          class: \"head-border-bottom\"\n        }, \"\\n                        \", HTML.UL({\n          class: \"new-filter\"\n        }, \"\\n                            \", HTML.LI(HTML.DIV({\n          class: \"pad-bot-15\"\n        }, HTML.Raw('\\n                                <h4 class=\"color-grey text-left\"><label> Home type</label></h4>\\n                                '), HTML.SELECT({\n          id: \"myselect\",\n          class: \"form-control filterUnitType\"\n        }, HTML.Raw('\\n                                    <option value=\"any\">Any</option>\\n                                    '), Blaze.Each(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"projectData\"), \"filter\", \"homeType\"));\n        }, function() {\n          return [ \"\\n                                        \", HTML.OPTION({\n            value: function() {\n              return Spacebars.mustache(view.lookup(\".\"));\n            }\n          }, Blaze.View(\"lookup:.\", function() {\n            return Spacebars.mustache(view.lookup(\".\"));\n          })), \"\\n                                    \" ];\n        }), \"\\n                                \"), \"\\n                            \"), \"\\n                            \"), \"\\n                            \", HTML.LI(\"\\n                                \", HTML.DIV({\n          class: \"pad-bot-15\"\n        }, HTML.Raw('\\n                                    <h4 class=\"color-grey text-left\"><label> Facing</label></h4>\\n                                    '), HTML.SELECT({\n          id: \"myselect2\",\n          class: \"form-control filterUnitFacing\"\n        }, HTML.Raw('\\n                                        <option value=\"any\">Any</option>\\n                                        '), Blaze.Each(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"projectData\"), \"filter\", \"facing\"));\n        }, function() {\n          return [ \"\\n                                            \", HTML.OPTION({\n            value: function() {\n              return Spacebars.mustache(view.lookup(\".\"));\n            }\n          }, Blaze.View(\"lookup:.\", function() {\n            return Spacebars.mustache(view.lookup(\".\"));\n          })), \"\\n                                        \" ];\n        }), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", HTML.LI(\"\\n                                \", HTML.DIV({\n          class: \"input-field\"\n        }, HTML.Raw('\\n                                    <h4 class=\"color-grey text-uppercase text-left pad-btm-30\">Floor level</h4>\\n                                    '), HTML.DIV({\n          class: \"range-holder\"\n        }, \"\\n                                        \", HTML.DIV({\n          class: \"range-value-holder clearfix\"\n        }, \"\\n                                            \", HTML.DIV({\n          class: \"left value pull-left\"\n        }, \"\\n                                                \", HTML.P({\n          class: \"filterS1l\"\n        }, Blaze.View(\"lookup:projectData.filter.floor.0\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"projectData\"), \"filter\", \"floor\", \"0\"));\n        })), \"\\n                                            \"), \"\\n                                            \", HTML.DIV({\n          class: \"right value pull-right\"\n        }, \"\\n                                                \", HTML.P({\n          class: \"filterS1h\"\n        }, Blaze.View(\"lookup:projectData.filter.floor.1\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"projectData\"), \"filter\", \"floor\", \"1\"));\n        })), \"\\n                                            \"), \"\\n                                        \"), HTML.Raw('\\n                                        <div id=\"range-input\"></div>\\n                                        '), HTML.DIV({\n          class: \"input-select-new\"\n        }, HTML.Raw('\\n                                            <select id=\"input-select\"></select>\\n                                            '), HTML.SPAN({\n          class: \"cross-new\"\n        }, HTML.IMG({\n          src: function() {\n            return Spacebars.mustache(view.lookup(\"cdnPath\"), \"/images/clear-cross-btn.png\");\n          },\n          class: \"close-icon\"\n        })), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n          class: \"input-new\"\n        }, HTML.Raw('\\n                                            <input type=\"number\" min=\"3\" max=\"25\" step=\"1\" id=\"input-number\">'), HTML.SPAN({\n          class: \"cross-new1\"\n        }, HTML.IMG({\n          src: function() {\n            return Spacebars.mustache(view.lookup(\"cdnPath\"), \"/images/clear-cross-btn.png\");\n          },\n          class: \"close-icon\"\n        })), \"\\n                                        \"), \"\\n\\n                                    \"), \"\\n                                \"), \"\\n\\n                            \"), \"\\n                            \", HTML.LI(\"\\n                                \", HTML.DIV({\n          class: \"input-field\"\n        }, HTML.Raw('\\n                                    <h4 class=\"color-grey text-uppercase text-left pad-btm-30\">Rent range</h4>\\n                                    '), HTML.DIV({\n          class: \"range-holder\"\n        }, \"\\n                                        \", HTML.DIV({\n          class: \"range-value-holder clearfix\"\n        }, \"\\n                                            \", HTML.DIV({\n          class: \"left value pull-left\"\n        }, \"\\n                                                \", HTML.P({\n          class: \"filterS2l\"\n        }, Blaze.View(\"lookup:numDifferentiation\", function() {\n          return Spacebars.mustache(view.lookup(\"numDifferentiation\"), Spacebars.dot(view.lookup(\"projectData\"), \"filter\", \"priceRange\", \"0\"));\n        })), \"\\n                                            \"), \"\\n                                            \", HTML.DIV({\n          class: \"right value pull-right\"\n        }, \"\\n                                                \", HTML.P({\n          class: \"filterS2h\"\n        }, Blaze.View(\"lookup:numDifferentiation\", function() {\n          return Spacebars.mustache(view.lookup(\"numDifferentiation\"), Spacebars.dot(view.lookup(\"projectData\"), \"filter\", \"priceRange\", \"1\"));\n        })), \"\\n                                            \"), \"\\n                                        \"), HTML.Raw('\\n                                        <div id=\"range-input1\"></div>\\n                                        '), HTML.DIV({\n          class: \"input-select-new1\"\n        }, HTML.Raw('\\n                                            <select id=\"input-select1\"></select>'), HTML.SPAN({\n          class: \"cross-new2\"\n        }, HTML.IMG({\n          src: function() {\n            return Spacebars.mustache(view.lookup(\"cdnPath\"), \"/images/clear-cross-btn.png\");\n          },\n          class: \"close-icon\"\n        })), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n          class: \"input-new1\"\n        }, HTML.Raw('\\n                                            <input type=\"number\" min=\"67.45\" max=\"97.45\" step=\"1\" id=\"input-number1\">'), HTML.SPAN({\n          class: \"cross-new3\"\n        }, HTML.IMG({\n          src: function() {\n            return Spacebars.mustache(view.lookup(\"cdnPath\"), \"/images/clear-cross-btn.png\");\n          },\n          class: \"close-icon\"\n        })), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), HTML.Raw(\"\\n                    <!-- filter section -->\\n                    <!--  for clear div section -->\\n                    \"), HTML.DIV({\n          class: \"clear-all-div clearfix hidden-xs\"\n        }, \"\\n                        \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"filters\"));\n        }, function() {\n          return [ \"\\n                            \", HTML.UL({\n            class: \"for-left-side\"\n          }, \"\\n                                \", Blaze.Each(function() {\n            return Spacebars.dataMustache(view.lookup(\"objectToPairs\"), Spacebars.dot(view.lookup(\"filters\"), \"data\"));\n          }, function() {\n            return [ \"\\n                                    \", HTML.LI({\n              class: \"list1\"\n            }, HTML.H5({\n              key: function() {\n                return Spacebars.mustache(view.lookup(\"key\"));\n              }\n            }, Blaze.View(\"lookup:key\", function() {\n              return Spacebars.mustache(view.lookup(\"key\"));\n            }), \"\\n                                        \", Blaze.Each(function() {\n              return Spacebars.call(view.lookup(\"value\"));\n            }, function() {\n              return [ \"\\n                                            \", HTML.SPAN({\n                val: function() {\n                  return Spacebars.mustache(view.lookup(\".\"));\n                }\n              }, Blaze.View(\"lookup:.\", function() {\n                return Spacebars.mustache(view.lookup(\".\"));\n              }), \" \", HTML.A({\n                href: \"javascript:void(0)\"\n              }, HTML.IMG({\n                src: function() {\n                  return Spacebars.mustache(view.lookup(\"cdnPath\"), \"/images/clear-cross-btn.png\");\n                },\n                class: \"clearFilterBtn\"\n              })), HTML.Raw(\"&nbsp;\\n                    \")), \"\\n                                        \" ];\n            }), \"\\n                                    \")), \"\\n                                \" ];\n          }), \"\\n                            \"), \"\\n                            \", HTML.UL({\n            class: \"for-right-side\"\n          }, \"\\n                                \", Blaze.If(function() {\n            return Spacebars.call(Spacebars.dot(view.lookup(\"filters\"), \"count\"));\n          }, function() {\n            return HTML.Raw('\\n                                    <li><button class=\"transparent-btn btns clearFilters\" type=\"button\">CLEAR ALL</button></li>\\n                                ');\n          }), \"\\n                            \"), \"\\n                        \" ];\n        }, function() {\n          return \"\\n\\n                        \";\n        }), HTML.Raw('\\n                        <!--<ul class=\"for-left-side\">-->\\n                        <!--<li class=\"list1\"><h5><span>2 BHK <a><img src=\"{{cdnPath \\'/images/clear-cross-btn.png\\'}}\"></a></span></h5></li>-->\\n                        <!--&lt;!&ndash; <li><h5>Floor<span>2 to 15 <a><img src=\"{{cdnPath \\'/images/clear-cross-btn.png\\'}}\"></a></span></h5></li> &ndash;&gt;-->\\n                        <!--<li  class=\"list2\"><h5><span>East<a><img src=\"{{cdnPath \\'/images/clear-cross-btn.png\\'}}\"></a></span></h5></li>-->\\n                        <!--</ul>-->\\n                        <!--<ul class=\"for-right-side\">-->\\n                        <!--<li><button class=\"transparent-btn btns for-hide clearFilters\" type=\"button\">CLEAR ALL</button></li>-->\\n                        <!--</ul>-->\\n                    ')), HTML.Raw('\\n                    <div class=\"text-center mar-top-15 mar-btm-20 visible-xs\">\\n                        <button class=\"blue-btn btns filterCloseBtn\" type=\"button\">Close</button>\\n                    </div>\\n                ')), HTML.Raw(\"\\n                <!--  for clear div section -->\\n            \")), \"\\n        \"), HTML.Raw('\\n        <section class=\"text-center visible-xs xs-filter-btn\">\\n            <a id=\"filter-slide\" class=\"green-btn\">Filter</a>\\n        </section>\\n        ') ];\n      }, function() {\n        return HTML.Raw('\\n            <section class=\"mar-top-20 \">\\n                &nbsp;\\n            </section>\\n        ');\n      }), \"\\n    \"), \"\\n\\n    \", HTML.SECTION({\n        class: \"paginationArea\"\n      }, \"\\n        \", HTML.DIV({\n        class: \"container\"\n      }, \"\\n            \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                \", HTML.DIV({\n        class: \"col-md-12\"\n      }, \"\\n                \", Blaze._TemplateWith(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"pagination\"));\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"pagination\"));\n      }), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \"), \"\\n\\n\\n    \", Blaze.Each(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"results\"));\n      }, function() {\n        return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"propertyList\")), \"\\n    \" ];\n      }), \"\\n\\n    \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showDemoProp\"));\n      }, function() {\n        return [ \"\\n        \", Blaze.Each(function() {\n          return Spacebars.call(view.lookup(\"demoProperty\"));\n        }, function() {\n          return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"propertyList\")), \"\\n        \" ];\n        }), \"\\n    \" ];\n      }), \"\\n\\n\\n    \", HTML.SECTION({\n        class: \"paginationArea\"\n      }, \"\\n        \", HTML.DIV({\n        class: \"container\"\n      }, \"\\n            \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                \", HTML.DIV({\n        class: \"col-md-12\"\n      }, \"\\n                    \", Blaze._TemplateWith(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"pagination\"));\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"pagination\"));\n      }), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \"), HTML.Raw('\\n\\n\\n\\n    <div class=\"verification-div1\" id=\"propertyLinkDlg\" style=\"display:none;\">\\n        <div class=\"refund-div\"><h2>Share Property</h2></div>\\n        <div class=\"profile-text text-left\">\\n            <p class=\"no-capitalize\">Please use this email to use in daft.ie, rent.ie etc ads.</p>\\n\\n            <form class=\"form-inline\" style=\"overflow: hidden;\" onsubmit=\"return false;\">\\n                <div class=\"form-group col-sm-10\" style=\"padding: 0;\">\\n                    <input type=\"text\" class=\"form-control\" placeholder=\"\" name=\"agentPropertyEmailField\" id=\"agentPropertyEmailField\" readonly=\"\" style=\"width: 100%;padding: 0;\">\\n                </div>\\n                <button class=\"btn btn-primary col-sm-2 copyEmailBtn\">Copy</button>\\n            </form>\\n\\n            <p class=\"no-capitalize mar-top-15\">Please use this link to share in facebook, twitter etc. </p>\\n\\n            <form class=\"form-inline\" style=\"overflow: hidden;\" onsubmit=\"return false;\">\\n                <div class=\"form-group col-sm-10\" style=\"padding: 0;\">\\n                    <input type=\"text\" class=\"form-control\" placeholder=\"\" name=\"propertyLinkField\" id=\"propertyLinkField\" readonly=\"\" style=\"width: 100%;padding: 0;\">\\n                </div>\\n                <button class=\"btn btn-primary col-sm-2 copyLinkBtn\">Copy</button>\\n            </form>\\n\\n            <form class=\"signin-form\">\\n\\n                <div class=\"signup-btn\">\\n                    <button class=\"transparent-btn btns cancelBtn\" type=\"button\">CLOSE</button>\\n                </div>\\n\\n            </form>\\n\\n        </div>\\n\\n    </div>\\n') ];\n    }, function() {\n      return [ \"\\n    \", HTML.SECTION({\n        class: \"mar-top-20 mar-btm-20 no-print loginPageHorizontal\"\n      }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"loginPageHorizontal\")), \"\\n    \"), \"\\n\" ];\n    }), \"\\n\" ];\n  }, function() {\n    return [ \"\\n    \", HTML.SECTION({\n      class: \"mar-top-20 mar-btm-20 no-print loginPageHorizontal\"\n    }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"loading\")), \"\\n    \"), \"\\n\" ];\n  });\n}));\n\nTemplate.__checkName(\"propertyList\");\nTemplate[\"propertyList\"] = new Template(\"Template.propertyList\", (function() {\n  var view = this;\n  return HTML.SECTION({\n    class: \"main-holder border-top\",\n    id: function() {\n      return [ \"property_\", Spacebars.mustache(view.lookup(\"_id\")) ];\n    }\n  }, \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"expanded\"));\n  }, function() {\n    return \"\";\n  }, function() {\n    return [ \"\\n            \", HTML.SECTION({\n      class: \"border-top act-div\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"container\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"act-box\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"background-white\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"logo-holder-div\"\n    }, \"\\n                                \", HTML.DIV({\n      class: \"logo-holder\"\n    }, \"\\n                                    \", HTML.UL(\"\\n                                        \", HTML.LI(\"\\n                                            \", HTML.H3({\n      class: \"pad-btm-0\"\n    }, Blaze.View(\"lookup:titleCase\", function() {\n      return Spacebars.mustache(view.lookup(\"titleCase\"), Spacebars.dot(view.lookup(\"address\"), \"address\"));\n    }), Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"address\"), \"area\"));\n    }, function() {\n      return [ \", \", Blaze.View(\"lookup:titleCase\", function() {\n        return Spacebars.mustache(view.lookup(\"titleCase\"), Spacebars.dot(view.lookup(\"address\"), \"area\"));\n      }), \" \" ];\n    }), Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"address\"), \"county\"));\n    }, function() {\n      return [ \", \", Blaze.View(\"lookup:titleCase\", function() {\n        return Spacebars.mustache(view.lookup(\"titleCase\"), Spacebars.dot(view.lookup(\"address\"), \"county\"));\n      }), \" \" ];\n    }), HTML.Raw(' <span class=\"auction-number pad-left-10\"><a href=\"javascript:void(0)\" class=\"managePropertyLink\" style=\"font-size:11px;\">MANAGE</a></span>')), \"\\n                                            \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"auctionId\"));\n    }, function() {\n      return [ \"\\n                                                \", HTML.SPAN({\n        class: \"auction-number\"\n      }, HTML.Raw('<span style=\"font-size:11px;color: #9d9d9d;\">LETTING CODE </span>'), HTML.SPAN({\n        style: \"color:#000;font-size:11px\"\n      }, \":  \", Blaze.View(\"lookup:auction.lettingAuctionCode\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"auction\"), \"lettingAuctionCode\"));\n      }))), \"\\n                                                \", HTML.SPAN({\n        class: \"auction-number pad-left-15\"\n      }, HTML.Raw('<span style=\"font-size:11px;color: #9d9d9d;\">VIEWS </span>'), HTML.SPAN({\n        style: \"color:#000;font-size:11px\"\n      }, \": \", Blaze.View(\"lookup:auction.views\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"auction\"), \"views\"));\n      }))), \"\\n                                                \", HTML.SPAN({\n        class: \"auction-number pad-left-15\"\n      }, HTML.Raw('<span style=\"font-size:11px;color: #9d9d9d;\">APPLICATIONS </span>'), HTML.SPAN({\n        style: \"color:#000;font-size:11px\"\n      }, \": \", Blaze.View(\"lookup:auction.bids\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"auction\"), \"bids\"));\n      }))), \"\\n                                                \", HTML.SPAN({\n        class: \"auction-number pad-left-15\"\n      }, HTML.A({\n        target: \"_blank\",\n        href: function() {\n          return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({\n            route: \"letting\",\n            key: Spacebars.dot(view.lookup(\"auction\"), \"lettingAuctionCode\")\n          }));\n        },\n        class: \"viewListing\",\n        style: \"font-size:11px;\"\n      }, \"VIEW ADVERT\")), HTML.Raw('\\n<span class=\"auction-number pad-left-15\"><a href=\"javascript:void(0);\" class=\"showCopyDlg\" style=\"font-size:11px;\"><i class=\"glyphicon glyphicon-thumbs-up\" aria-hidden=\"true\" style=\"font-size: 11px;\"></i> SHARE</a></span>\\n                                            ') ];\n    }), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                \"), \"\\n\\n                                \", HTML.DIV({\n      class: \"menu\"\n    }, \"\\n                                    \", HTML.UL({\n      class: \"pull-right\",\n      style: \"list-style-type: none;\"\n    }, \"\\n            \", Blaze.Unless(function() {\n      return Spacebars.call(view.lookup(\"auctionId\"));\n    }, function() {\n      return [ \"\\n                                        \", HTML.LI(\"\\n                                            \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showAddAuctionForm\"));\n      }, function() {\n        return HTML.Raw('\\n                                                <button class=\"btns transparent-btn hideAddAuctionForm\" type=\"button\">Cancel</button>\\n                                            ');\n      }, function() {\n        return HTML.Raw('\\n                                                <button class=\"btns blue-btn color-white ActivateBtn\" type=\"button\">Advertise</button>\\n                                                ');\n      }), \"\\n\\n                                        \"), \"\\n            \" ];\n    }), \"\\n                                        \", HTML.LI({\n      class: \"see-more-li\"\n    }, \"\\n                                            \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"expanded\"));\n    }, function() {\n      return [ \"\\n                                                \", HTML.P({\n        class: \"see_more_btn\"\n      }, \"See less\", HTML.SPAN({\n        style: \"margin-left:8px;\"\n      }, HTML.IMG({\n        src: function() {\n          return Spacebars.mustache(view.lookup(\"cdnPath\"), \"/images/accord-top-arrow.png\");\n        }\n      }))), \"\\n                                            \" ];\n    }, function() {\n      return [ \"\\n                                                \", HTML.P({\n        class: \"see_more_btn\"\n      }, \"See more\", HTML.SPAN({\n        style: \"margin-left:8px;\"\n      }, HTML.IMG({\n        src: function() {\n          return Spacebars.mustache(view.lookup(\"cdnPath\"), \"/images/accord-bottom-arrow.png\");\n        }\n      }))), \"\\n                                            \" ];\n    }), \"\\n\\n                                            \", HTML.P({\n      class: \"showEditPropertyForm\"\n    }, HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"showEditPropertyForm\"));\n      },\n      style: \"color: #0c68a7\"\n    }, HTML.Raw('Edit <span class=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>'))), \"\\n\\n                                        \"), \"\\n                                    \"), \"\\n                                \"), \"\\n\\n\\n                            \"), HTML.Raw('\\n\\n\\n                            <!--<div class=\"see-more-btn1\"></div>-->\\n\\n\\n\\n\\n                        ')), \"\\n\\n                        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"showAddAuctionForm\"));\n    }, function() {\n      return [ \"\\n                            \", HTML.DIV({\n        class: \"apt-info apt-info1 background-white clearfix showAddAuctionForm autoFrm\"\n      }, \"\\n                                \", Spacebars.include(view.lookupTemplate(\"advertiseForm\")), HTML.Raw(\"\\n                                <br><br>\\n                            \")), \"\\n                        \" ];\n    }), HTML.Raw(\"\\n\\n                        <!--act-box-->\\n                        \"), Blaze.Unless(function() {\n      return Spacebars.call(view.lookup(\"isSubsLoaded\"));\n    }, function() {\n      return [ \"\\n                            \", HTML.DIV({\n        class: function() {\n          return [ \"apt-info apt-info1 text-center background-white clearfix property_auction_\", Spacebars.mustache(view.lookup(\"auctionId\")) ];\n        }\n      }, \"\\n                                Loading...\\n                            \"), \"\\n                        \" ];\n    }), \"\\n                        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"auction\"));\n    }, function() {\n      return [ \"\\n                            \", HTML.DIV({\n        class: function() {\n          return [ \"apt-info apt-info1 background-white clearfix property_auction_\", Spacebars.mustache(view.lookup(\"auctionId\")) ];\n        }\n      }, \"\\n                                \", HTML.UL({\n        class: \"superbuilt-div\"\n      }, \"\\n                                    \", HTML.LI(HTML.Raw(\"\\n                                        <h5>Rent</h5>\\n                                        \"), HTML.H6(HTML.Raw(\"&euro; \"), Blaze.View(\"lookup:auction.price\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"auction\"), \"price\"));\n      })), \"\\n                                    \"), \"\\n                                    \", HTML.LI(HTML.Raw(\"\\n                                        <h5>Lease</h5>\\n                                        \"), HTML.H6(\"  \", Blaze.View(\"lookup:auction.lease\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"auction\"), \"lease\"));\n      })), \"\\n                                    \"), \"\\n                                    \", HTML.LI(HTML.Raw(\"\\n                                        <h5>Rent Type</h5>\\n                                        \"), HTML.H6(\" \", Blaze.View(\"lookup:titleCase\", function() {\n        return Spacebars.mustache(view.lookup(\"titleCase\"), Spacebars.dot(view.lookup(\"auction\"), \"rentType\"));\n      })), \"\\n                                    \"), \"\\n                                    \", HTML.LI(HTML.Raw(\"\\n                                        <h5>Ready From</h5>\\n                                        \"), HTML.H6({\n        class: \"cursor-ptr color-blue showSubaPopup\",\n        id: \"super-bulit-up-area2\"\n      }, Blaze.View(\"lookup:dateFormat\", function() {\n        return Spacebars.mustache(view.lookup(\"dateFormat\"), Spacebars.dot(view.lookup(\"auction\"), \"readyFrom\"));\n      }), \" \"), \"\\n                                    \"), \"\\n                                    \", HTML.LI(HTML.Raw(\"\\n                                        <h5>Activated On</h5>\\n                                        \"), HTML.H6({\n        class: \"cursor-ptr color-blue showSubaPopup\",\n        id: \"super-bulit-up-area2\"\n      }, Blaze.View(\"lookup:dateFormat\", function() {\n        return Spacebars.mustache(view.lookup(\"dateFormat\"), Spacebars.dot(view.lookup(\"auction\"), \"createdAt\"));\n      }), \" \"), \"\\n                                    \"), \"\\n                                \"), \"\\n                                \", HTML.UL({\n        class: \"bid-button-div left-line pull-right\"\n      }, \"\\n                                    \", HTML.LI(\"\\n                                        \", HTML.A({\n        href: function() {\n          return Spacebars.mustache(view.lookup(\"urlFor\"), Spacebars.kw({\n            route: \"lettingprintview\",\n            key: view.lookup(\"lettingprintviewData\")\n          }));\n        },\n        target: \"_blank\",\n        class: \"transparent-btn btns printView\"\n      }, \"Print KEY\"), \"\\n                                    \"), HTML.Raw('\\n                                    <li>\\n                                        <button class=\"green-btn btns viewApplications\">View Applications</button>\\n                                    </li>\\n                                ')), \"\\n\\n\\n                            \"), \"\\n                        \" ];\n    }), HTML.Raw(\"\\n                        <!--act-box-->\\n                    \")), \"\\n                \"), \"\\n            \"), \"\\n        \" ];\n  }), \"\\n\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"expanded\"));\n  }, function() {\n    return [ HTML.Raw(\"\\n            <!--hide-accord-->\\n            \"), HTML.SECTION({\n      class: function() {\n        return Spacebars.mustache(view.lookup(\"showMyBidsClass\"));\n      }\n    }, \"\\n                \", HTML.DIV({\n      class: \"container\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"act-box\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"background-white\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"logo-holder-div\"\n    }, \"\\n                                \", HTML.DIV({\n      class: \"logo-holder\"\n    }, \"\\n                                    \", HTML.UL(\"\\n                                        \", HTML.LI(\"\\n                                            \", HTML.H3({\n      class: \"pad-btm-0\"\n    }, Blaze.View(\"lookup:titleCase\", function() {\n      return Spacebars.mustache(view.lookup(\"titleCase\"), Spacebars.dot(view.lookup(\"address\"), \"address\"));\n    }), Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"address\"), \"area\"));\n    }, function() {\n      return [ \", \", Blaze.View(\"lookup:titleCase\", function() {\n        return Spacebars.mustache(view.lookup(\"titleCase\"), Spacebars.dot(view.lookup(\"address\"), \"area\"));\n      }), \" \" ];\n    }), Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"address\"), \"county\"));\n    }, function() {\n      return [ \", \", Blaze.View(\"lookup:titleCase\", function() {\n        return Spacebars.mustache(view.lookup(\"titleCase\"), Spacebars.dot(view.lookup(\"address\"), \"county\"));\n      }), \" \" ];\n    }), HTML.Raw(' <span class=\"auction-number pad-left-10\"><a href=\"javascript:void(0)\" class=\"managePropertyLink\" style=\"font-size:11px;\">MANAGE</a></span>')), \"\\n            \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"auctionId\"));\n    }, function() {\n      return [ \"\\n\", HTML.SPAN({\n        class: \"auction-number\"\n      }, HTML.Raw('<span style=\"font-size:11px;color: #9d9d9d;\">AUCTION CODE </span>'), HTML.SPAN({\n        style: \"color:#000;font-size:11px\"\n      }, \":  \", Blaze.View(\"lookup:auction.lettingAuctionCode\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"auction\"), \"lettingAuctionCode\"));\n      }))), \"\\n\", HTML.SPAN({\n        class: \"auction-number pad-left-15\"\n      }, HTML.Raw('<span style=\"font-size:11px;color: #9d9d9d;\">VIEWS </span>'), HTML.SPAN({\n        style: \"color:#000;font-size:11px\"\n      }, \": \", Blaze.View(\"lookup:auction.views\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"auction\"), \"views\"));\n      }))), \"\\n\", HTML.SPAN({\n        class: \"auction-number pad-left-15\"\n      }, HTML.Raw('<span style=\"font-size:11px;color: #9d9d9d;\">APPLICATIONS </span>'), HTML.SPAN({\n        style: \"color:#000;font-size:11px\"\n      }, \": \", Blaze.View(\"lookup:auction.bids\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"auction\"), \"bids\"));\n      }))), \"\\n\", HTML.SPAN({\n        class: \"auction-number pad-left-15\"\n      }, HTML.A({\n        target: \"_blank\",\n        href: function() {\n          return Spacebars.mustache(view.lookup(\"pathFor\"), Spacebars.kw({\n            route: \"letting\",\n            key: Spacebars.dot(view.lookup(\"auction\"), \"lettingAuctionCode\")\n          }));\n        },\n        class: \"viewListing\",\n        style: \"font-size:11px;\"\n      }, \"VIEW ADVERT\")), HTML.Raw('\\n<span class=\"auction-number pad-left-15\"><a href=\"javascript:void(0);\" class=\"showCopyDlg\" style=\"font-size:11px;\"><i class=\"glyphicon glyphicon-thumbs-up\" aria-hidden=\"true\" style=\"font-size: 11px;\"></i> SHARE</a></span>\\n<!--<span class=\"auction-number pad-left-15\"><a href=\"javascript:void(0);\" class=\"viewApplications\">(view)</a></span>-->\\n            ') ];\n    }), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                \"), \"\\n\\n                            \"), \"\\n                        \"), \"\\n                        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"auctionId\"));\n    }, function() {\n      return [ \"\\n                            \", HTML.DIV({\n        class: \"apt-info apt-info1 background-white clearfix\"\n      }, \"\\n                                \", HTML.UL({\n        class: \"superbuilt-div\"\n      }, \"\\n                                    \", HTML.LI(HTML.Raw(\"\\n                                        <h5>Rent</h5>\\n                                        \"), HTML.H6(HTML.Raw(\"&euro; \"), Blaze.View(\"lookup:auction.price\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"auction\"), \"price\"));\n      })), \"\\n                                    \"), \"\\n                                    \", HTML.LI(HTML.Raw(\"\\n                                        <h5>Lease</h5>\\n                                        \"), HTML.H6(\"  \", Blaze.View(\"lookup:auction.lease\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"auction\"), \"lease\"));\n      })), \"\\n                                    \"), \"\\n                                    \", HTML.LI(HTML.Raw(\"\\n                                        <h5>Rent Type</h5>\\n                                        \"), HTML.H6(\" \", Blaze.View(\"lookup:titleCase\", function() {\n        return Spacebars.mustache(view.lookup(\"titleCase\"), Spacebars.dot(view.lookup(\"auction\"), \"rentType\"));\n      })), \"\\n                                    \"), \"\\n                                    \", HTML.LI(HTML.Raw(\"\\n                                        <h5>Ready From</h5>\\n                                        \"), HTML.H6({\n        class: \"cursor-ptr color-blue showSubaPopup\",\n        id: \"super-bulit-up-area2\"\n      }, Blaze.View(\"lookup:dateFormat\", function() {\n        return Spacebars.mustache(view.lookup(\"dateFormat\"), Spacebars.dot(view.lookup(\"auction\"), \"readyFrom\"));\n      }), \" \"), \"\\n                                    \"), \"\\n                                    \", HTML.LI(HTML.Raw(\"\\n                                        <h5>Activated On</h5>\\n                                        \"), HTML.H6({\n        class: \"cursor-ptr color-blue showSubaPopup\",\n        id: \"super-bulit-up-area2\"\n      }, Blaze.View(\"lookup:dateFormat\", function() {\n        return Spacebars.mustache(view.lookup(\"dateFormat\"), Spacebars.dot(view.lookup(\"auction\"), \"createdAt\"));\n      }), \" \"), \"\\n                                    \"), \"\\n                                \"), \"\\n                                \", HTML.UL({\n        class: \"bid-button-div left-line pull-right\"\n      }, \"\\n                                    \", HTML.LI(\"\\n                                        \", HTML.A({\n        href: function() {\n          return Spacebars.mustache(view.lookup(\"urlFor\"), Spacebars.kw({\n            route: \"lettingprintview\",\n            data: view.lookup(\"lettingprintviewData\")\n          }));\n        },\n        target: \"_blank\",\n        class: \"transparent-btn btns printView\"\n      }, \"Print Tokens\"), \"\\n                                    \"), HTML.Raw('\\n                                    <li>\\n                                        <button class=\"green-btn btns viewApplications\">View Applications</button>\\n                                    </li>\\n                                ')), \"\\n\\n\\n                            \"), \"\\n                        \" ];\n    }), \"\\n                        \", HTML.DIV({\n      class: \"apt-info background-white\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"box-bdr\"\n    }, \"\\n                                \", HTML.DIV({\n      class: \" box-inner\"\n    }, \"\\n                                    \", HTML.DIV({\n      class: \"clearfix accord-open-border background-halfwhite\"\n    }, \"\\n                                        \", HTML.DIV({\n      class: \"col-md-2 col-xs-6 col-sm-6\"\n    }, HTML.Raw(\"\\n                                            <h5>Type</h5>\\n                                            \"), HTML.H6({\n      class: \"cursor-ptr color-blue showSubaPopup\",\n      id: \"super-bulit-up-area2\"\n    }, Blaze.View(\"lookup:type\", function() {\n      return Spacebars.mustache(view.lookup(\"type\"));\n    })), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n      class: \"col-md-2 col-xs-6 col-sm-6\"\n    }, HTML.Raw(\"\\n                                            <h5>Beds</h5>\\n                                            \"), HTML.H6(\"  \", Blaze.View(\"lookup:bedroomsCount\", function() {\n      return Spacebars.mustache(view.lookup(\"bedroomsCount\"));\n    }), \" \"), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n      class: \"col-md-2 col-xs-6 col-sm-6\"\n    }, HTML.Raw(\"\\n                                            <h5>Baths</h5>\\n                                            \"), HTML.H6(\"  \", Blaze.View(\"lookup:baths\", function() {\n      return Spacebars.mustache(view.lookup(\"baths\"));\n    }), \" \"), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n      class: \"col-md-2 col-xs-6 col-sm-6\"\n    }, HTML.Raw(\"\\n                                            <h5>Furnished</h5>\\n                                            \"), HTML.H6(\"  \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"furnished\"));\n    }, function() {\n      return \"Yes\";\n    }, function() {\n      return \"No\";\n    })), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n      class: \"col-md-2 col-xs-6 col-sm-6\"\n    }, HTML.Raw(\"\\n                                            <h5>Added On</h5>\\n                                            \"), HTML.H6(\" \", Blaze.View(\"lookup:dateFormat\", function() {\n      return Spacebars.mustache(view.lookup(\"dateFormat\"), view.lookup(\"createdAt\"));\n    }), \" \"), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n      class: \"col-md-2 col-xs-6 col-sm-6\"\n    }, HTML.Raw(\"\\n                                            <h5>Edited On</h5>\\n                                            \"), HTML.H6(\" \", Blaze.View(\"lookup:dateFormat\", function() {\n      return Spacebars.mustache(view.lookup(\"dateFormat\"), view.lookup(\"updatedAt\"));\n    }), \" \"), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                    \", HTML.DIV({\n      class: \"clearfix accord-open-border background-halfwhite\"\n    }, \"\\n                                        \", HTML.DIV({\n      class: \"col-md-2 col-xs-2 col-sm-2\"\n    }, HTML.Raw(\"\\n                                            <h5>Images</h5>\\n                                            \"), HTML.H6(\"\\n                                                \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"gallery\"));\n    }, function() {\n      return [ \"\\n                                                    \", Blaze.View(\"lookup:gallery.length\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"gallery\"), \"length\"));\n      }), \"\\n                                                \" ];\n    }, function() {\n      return \"\\n                                                    0\\n                                                \";\n    }), \"\\n                                            \"), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n      class: \"col-md-3 col-xs-6 col-sm-3\"\n    }, HTML.Raw(\"\\n                                            <h5>Bedrooms</h5>\\n                                            \"), HTML.H6(\"\\n                                                \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"bedrooms\"));\n    }, function() {\n      return [ \"\\n                                                    \", Blaze.Each(function() {\n        return Spacebars.dataMustache(view.lookup(\"objectToPairs\"), view.lookup(\"bedrooms\"));\n      }, function() {\n        return [ Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"key\"));\n        }, function() {\n          return \", \";\n        }), Blaze.View(\"lookup:value.bedType\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"value\"), \"bedType\"));\n        }), \" \", Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"value\"), \"ensuite\"));\n        }, function() {\n          return \"(Ensuite)\";\n        }) ];\n      }), \"\\n                                                \" ];\n    }, function() {\n      return \"\\n                                                    N/A\\n                                                \";\n    }), \"\\n                                            \"), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n      class: \"col-md-3 col-xs-6 col-sm-3 \"\n    }, HTML.Raw(\"\\n                                            <h5>Amenities</h5>\\n                                            \"), HTML.H6(\"\\n                                                \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"amenities\"));\n    }, function() {\n      return [ \"\\n                                                \", Blaze.View(\"lookup:addCommaToEach\", function() {\n        return Spacebars.mustache(view.lookup(\"addCommaToEach\"), view.lookup(\"amenities\"));\n      }), \"\\n                                                \" ];\n    }, function() {\n      return \"\\n                                                    N/A\\n                                                \";\n    }), \"\\n                                            \"), \"\\n                                        \"), HTML.Raw('\\n                                        <!--<div class=\"col-md-3 col-xs-6 col-sm-3\">-->\\n                                            <!--<h5></h5>-->\\n                                            <!--<h6>-->\\n                                                <!--<a href=\"http://www.google.com/maps/place/{{address.geoCodeLat}},{{address.geoCodeLong}}\" target=\"_blank\">-->\\n                                                    <!--<span style=\"margin-right:8px;vertical-align:middle;\" class=\"glyphicon glyphicon-map-marker\" ></span><span style=\"vertical-align:middle;\" class=\"color-blue\">Location</span>-->\\n                                                <!--</a>-->\\n                                            <!--</h6>-->\\n                                        <!--</div>-->\\n                                        '), HTML.DIV({\n      class: \"col-md-3 col-xs-6 col-sm-3\"\n    }, HTML.Raw(\"\\n                                            <h5>BER</h5>\\n                                            \"), HTML.H6(\"\\n                                                \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"BER\"));\n    }, function() {\n      return [ \"\\n                                                    \", Blaze.View(\"lookup:addCommaToEach\", function() {\n        return Spacebars.mustache(view.lookup(\"addCommaToEach\"), view.lookup(\"BER\"));\n      }), \"\\n                                                \" ];\n    }, function() {\n      return \"\\n                                                    N/A\\n                                                \";\n    }), \"\\n                                            \"), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                    \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"contacts\"));\n    }, function() {\n      return [ \"\\n                                    \", HTML.DIV({\n        class: \"clearfix accord-open-border background-halfwhite\"\n      }, \"\\n                                        \", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"contacts\"));\n      }, function() {\n        return [ \"\\n                                        \", HTML.DIV({\n          class: \"col-md-3 col-xs-6 col-sm-3 \"\n        }, HTML.Raw(\"\\n                                            <h5>Contact details of the property owner</h5>\\n                                            \"), HTML.H6(\"\\n                                                \", Blaze.View(\"lookup:name\", function() {\n          return Spacebars.mustache(view.lookup(\"name\"));\n        }), \"\\n                                                \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"phone\"));\n        }, function() {\n          return [ \" (\", Blaze.View(\"lookup:phone\", function() {\n            return Spacebars.mustache(view.lookup(\"phone\"));\n          }), HTML.Raw(\")<br>\") ];\n        }), \"\\n                                                \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"email\"));\n        }, function() {\n          return Blaze.View(\"lookup:email\", function() {\n            return Spacebars.mustache(view.lookup(\"email\"));\n          });\n        }), \"\\n                                            \"), \"\\n                                        \"), \"\\n                                        \" ];\n      }), \"\\n\\n                                    \"), \"\\n                                    \" ];\n    }), \"\\n                                    \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"auctionId\"));\n    }, function() {\n      return [ \"\\n                                    \", HTML.DIV({\n        class: \"clearfix accord-open-border background-halfwhite\"\n      }, \"\\n                                        \", Blaze.Each(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"auction\"), \"contacts\"));\n      }, function() {\n        return [ \"\\n                                        \", HTML.DIV({\n          class: \"col-md-3 col-xs-6 col-sm-3 \"\n        }, HTML.Raw(\"\\n                                            <h5>Contact persons for this advert</h5>\\n                                            \"), HTML.H6(\"\\n                                                \", Blaze.View(\"lookup:name\", function() {\n          return Spacebars.mustache(view.lookup(\"name\"));\n        }), \"\\n                                                \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"phone\"));\n        }, function() {\n          return [ \" (\", Blaze.View(\"lookup:phone\", function() {\n            return Spacebars.mustache(view.lookup(\"phone\"));\n          }), HTML.Raw(\")<br>\") ];\n        }), \"\\n                                                \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"email\"));\n        }, function() {\n          return Blaze.View(\"lookup:email\", function() {\n            return Spacebars.mustache(view.lookup(\"email\"));\n          });\n        }), \"\\n                                            \"), \"\\n                                        \"), \"\\n                                        \" ];\n      }), \"\\n\\n                                    \"), \"\\n                                    \" ];\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV({\n      class: \"clearfix accord-open-border accord-top-border background-halfwhite\"\n    }, \"\\n                                    \", HTML.P({\n      class: \"accor-padd\"\n    }, Blaze.View(\"lookup:nlToBr\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"nlToBr\"), view.lookup(\"about\")));\n    })), \"\\n                                \"), \"\\n\\n                            \"), \"\\n                            \", HTML.DIV({\n      class: \"see-more-btn1 see_more_btn\"\n    }, \"\\n                                \", HTML.P(\"See less\", HTML.SPAN({\n      style: \"margin-left:8px;\"\n    }, HTML.IMG({\n      src: function() {\n        return Spacebars.mustache(view.lookup(\"cdnPath\"), \"/images/accord-top-arrow.png\");\n      }\n    }))), \"\\n                                \", HTML.P({\n      class: \"showEditPropertyForm\"\n    }, HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"showEditPropertyForm\"));\n      },\n      style: \"color: #0c68a7\"\n    }, HTML.Raw('Edit <span class=\"glyphicon glyphicon-pencil\" aria-hidden=\"true\"></span>'))), \"\\n                            \"), \"\\n                        \"), HTML.Raw(\"<!--act-box-->\\n                    \")), \"\\n                \"), \"\\n            \"), \"\\n\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"advertiseForm\");\nTemplate[\"advertiseForm\"] = new Template(\"Template.advertiseForm\", (function() {\n  var view = this;\n  return [ HTML.Raw('<h3>Advertise Form</h3>\\n    <p style=\"text-align: left;margin-bottom: 20px;\">Enter the rent details of the property below and click submit.<br><br></p>\\n\\n    '), HTML.FORM({\n    class: \"signin-form cf-1\",\n    id: \"advertiseFormCF\"\n  }, HTML.Raw('\\n\\n        <input type=\"hidden\" name=\"currency\" value=\"eur\">\\n        '), HTML.INPUT({\n    type: \"hidden\",\n    name: \"propertyId\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"_id\"));\n    }\n  }), \"\\n        \", HTML.DIV({\n    class: \"clearfix\"\n  }, HTML.Raw('\\n            <div class=\"styled-input \">\\n                <input type=\"text\" name=\"price\" id=\"rent\" required=\"\">\\n                <label id=\"rent\" class=\"error\" for=\"rent\">This field is required.</label>\\n                <br>\\n                <label>Rent *</label>\\n                <span></span>\\n            </div>\\n\\n            <div class=\"styled-input \">\\n                <input type=\"text\" name=\"readyFrom\" id=\"readyFrom\">\\n                <label class=\"\" for=\"rent\"></label>\\n                <br>\\n                <label>Ready to move in from?</label>\\n                <span></span>\\n            </div>\\n\\n            <div class=\"styled-input styled-input-select\">\\n                <label>Lease until?</label>\\n                <select name=\"lease\" autocomplete=\"\">\\n\\n\\n\\n                        <option value=\"\">(Select One)</option>\\n\\n\\n\\n                        <option value=\"1 month\">1 month</option>\\n\\n\\n\\n                        <option value=\"2 months\">2 months</option>\\n\\n\\n\\n                        <option value=\"3 months\">3 months</option>\\n\\n\\n\\n                        <option value=\"4 months\">4 months</option>\\n\\n\\n\\n                        <option value=\"5  months\">5  months</option>\\n\\n\\n\\n                        <option value=\"6 months\">6 months</option>\\n\\n\\n\\n                        <option value=\"7 months\">7 months</option>\\n\\n\\n\\n                        <option value=\"8 months\">8 months</option>\\n\\n\\n\\n                        <option value=\"9 months\">9 months</option>\\n\\n\\n\\n                        <option value=\"10 months\">10 months</option>\\n\\n\\n\\n                        <option value=\"11 months\">11 months</option>\\n\\n\\n\\n                        <option value=\"1 year\">1 year</option>\\n\\n\\n\\n                        <option value=\"More than a year\">More than a year</option>\\n\\n\\n\\n                </select>\\n                <span></span>\\n            </div>\\n\\n            <div class=\"styled-input styled-input-select\">\\n                <label>Rent type</label>\\n                <select name=\"rentType\" autocomplete=\"\">\\n                    <option value=\"\">(Select One)</option>\\n                    <option value=\"weekly\">Weekly</option>\\n                    <option value=\"monthly\">Monthly</option>\\n                    <option value=\"other\">Other</option>\\n                </select>\\n                <span></span>\\n            </div>\\n\\n            <div class=\"w-100\"></div>\\n\\n            <div class=\"sep-section\">\\n                <label class=\"sep-label\">Contact person for this advertisement</label>\\n                <div class=\"styled-input underline\">\\n                    <input type=\"text\" name=\"contacts.0.name\">\\n                    <label>Name</label>\\n                    <span></span>\\n                </div>\\n                <div class=\"styled-input underline\">\\n                    <input type=\"text\" name=\"contacts.0.phone\">\\n                    <label>Mobile</label>\\n                    <span></span>\\n                </div>\\n                <div class=\"styled-input underline\">\\n                    <input type=\"email\" name=\"contacts.0.email\">\\n                    <label>Email</label>\\n                    <span></span>\\n                </div>\\n            </div>\\n\\n            <div class=\"w-100\"></div>\\n\\n\\n            '), HTML.DIV({\n    class: \"styled-full-width\"\n  }, \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"advertiseFormSaving\"));\n  }, function() {\n    return HTML.Raw('\\n                    <button type=\"button\" class=\"btns transparent-btn\">Saving</button>\\n                ');\n  }, function() {\n    return HTML.Raw('\\n                    <button type=\"submit\" class=\"btns blue-btn\">Save</button>\\n                ');\n  }), HTML.Raw('\\n                <button type=\"button\" class=\"btns transparent-btn advertiseFormCancelBtn\">Cancel</button>\\n            ')), HTML.Raw('\\n\\n            <div class=\"w-100\"></div>\\n        ')), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"addPropertyForm\");\nTemplate[\"addPropertyForm\"] = new Template(\"Template.addPropertyForm\", (function() {\n  var view = this;\n  return HTML.FORM({\n    class: \"signin-form cf-1\",\n    id: \"addPropertyFormCF\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"clearfix\"\n  }, \"\\n\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isSA\"));\n  }, function() {\n    return HTML.Raw('\\n            <div class=\"styled-full-width\">\\n                <label class=\"cf-title\">Importer</label><br>\\n                <input type=\"text\" name=\"url\" class=\"styled-input-textarea url text-left\" style=\"text-align:left;\" placeholder=\"Enter any url\">\\n            </div>\\n\\n           <input type=\"hidden\" name=\"isImported\" value=\"true\">\\n');\n  }), HTML.Raw('\\n            <div class=\"w-100\"></div>\\n\\n            <div class=\"styled-input \">\\n                <input type=\"text\" name=\"address.address\" id=\"address.address\" required=\"\">\\n                <label id=\"address.address-error\" class=\"error\" for=\"address.address\">This field is required.</label>\\n                <br>\\n                <label>Name and Street *</label>\\n                <span></span>\\n            </div>\\n\\n            <div class=\"styled-input \">\\n                <input type=\"text\" name=\"price\">\\n                <!--<label id=\"address.address-error\" class=\"error\" for=\"address.address\">This field is required.</label>-->\\n                <br>\\n                <label>Rent *</label>\\n                <span></span>\\n            </div>\\n\\n            '), HTML.DIV({\n    class: \"styled-input styled-input-select\"\n  }, HTML.Raw(\"\\n                <label>Country</label>\\n                \"), HTML.SELECT({\n    name: \"address.country\",\n    required: \"\",\n    autocomplete: \"\",\n    class: \"\"\n  }, \"\\n                    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"countries\"));\n  }, function() {\n    return [ \"\\n                        \", HTML.OPTION({\n      value: function() {\n        return [ Spacebars.mustache(view.lookup(\"value\")), \" \", Spacebars.mustache(view.lookup(\"selected\")) ];\n      }\n    }, Blaze.View(\"lookup:label\", function() {\n      return Spacebars.mustache(view.lookup(\"label\"));\n    })), \"\\n                    \" ];\n  }), \"\\n                \"), HTML.Raw(\"\\n                <span></span>\\n            \")), \"\\n            \", HTML.DIV({\n    class: \"styled-input styled-input-select\"\n  }, HTML.Raw(\"\\n                <label>County</label>\\n                \"), HTML.SELECT({\n    name: \"address.county\",\n    required: \"\",\n    autocomplete: \"\",\n    class: \"countySelected\"\n  }, HTML.Raw('\\n                    <option value=\"\">(Select One)</option>\\n                    '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"counties\"));\n  }, function() {\n    return [ \"\\n                        \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"value\"));\n      }\n    }, Blaze.View(\"lookup:label\", function() {\n      return Spacebars.mustache(view.lookup(\"label\"));\n    })), \"\\n                    \" ];\n  }), \"\\n                \"), HTML.Raw(\"\\n                <span></span>\\n            \")), \"\\n\\n            \", HTML.DIV({\n    class: \"styled-input styled-input-select\"\n  }, HTML.Raw(\"\\n                <label>Area *</label>\\n                \"), HTML.SELECT({\n    name: \"address.area\",\n    required: \"\",\n    autocomplete: \"\",\n    class: \"\"\n  }, HTML.Raw('\\n                    <option value=\"\">(Select One)</option>\\n                    '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"areas\"));\n  }, function() {\n    return [ \"\\n                        \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"value\"));\n      }\n    }, Blaze.View(\"lookup:label\", function() {\n      return Spacebars.mustache(view.lookup(\"label\"));\n    })), \"\\n                    \" ];\n  }), \"\\n                \"), HTML.Raw(\"\\n                <span></span>\\n            \")), \"\\n\\n            \", HTML.DIV({\n    class: \"styled-input styled-input-select\"\n  }, HTML.Raw(\"\\n                <label>Property type *</label>\\n                \"), HTML.SELECT({\n    name: \"type\",\n    required: \"\",\n    autocomplete: \"\"\n  }, HTML.Raw('\\n                    <option value=\"\">(Select One)</option>\\n                    '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"propertyTypes\"));\n  }, function() {\n    return [ \"\\n                        \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"value\"));\n      }\n    }, Blaze.View(\"lookup:label\", function() {\n      return Spacebars.mustache(view.lookup(\"label\"));\n    })), \"\\n                    \" ];\n  }), \"\\n                \"), HTML.Raw(\"\\n                <span></span>\\n            \")), HTML.Raw('\\n\\n\\n            <div class=\"styled-input styled-input-select\">\\n                <label>Furnished? *</label>\\n                <select name=\"furnished\" required=\"\" autocomplete=\"\">\\n                    <option value=\"true\">Yes</option>\\n                    <option value=\"false\">No</option>\\n                </select>\\n                <span></span>\\n            </div>\\n\\n            <div class=\"styled-input underline\">\\n                <input type=\"number\" name=\"baths\" id=\"baths\" required=\"\">\\n                <label>Number of bathrooms</label>\\n                <span></span>\\n            </div>\\n\\n            <div class=\"styled-input underline\">\\n                <input type=\"number\" name=\"numBedRoomCount\" id=\"numBedRoomCount\" required=\"\">\\n                <label>Number of bedrooms</label>\\n                <span></span>\\n            </div>\\n\\n            '), Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"numBedRoomCount\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      class: \"styled-full-width\"\n    }, HTML.Raw('\\n                <label class=\"sep-label\">Ensuite? </label>\\n\\n                '), Blaze.Each(function() {\n      return Spacebars.dataMustache(view.lookup(\"ensuiteLoop\"), view.lookup(\"numBedRoomCount\"));\n    }, function() {\n      return [ \"\\n                \", HTML.DIV({\n        class: \"styled-input-select styled-input-checkbox max-20\"\n      }, \"\\n                    \", HTML.DIV({\n        class: \"checkbox disabled\"\n      }, \"\\n                        \", HTML.LABEL(HTML.INPUT({\n        type: \"checkbox\",\n        name: function() {\n          return [ \"bedrooms.\", Spacebars.mustache(view.lookup(\"@index\")), \".ensuite\" ];\n        }\n      }), \"Bedroom \", Blaze.View(\"lookup:i\", function() {\n        return Spacebars.mustache(view.lookup(\"i\"));\n      }), \" Ensuite?\"), \"\\n                    \"), HTML.Raw(\"\\n                    <label>Bed Type</label>\\n                    \"), HTML.SELECT({\n        required: \"\",\n        autocomplete: \"\",\n        name: function() {\n          return [ \"bedrooms.\", Spacebars.mustache(view.lookup(\"@index\")), \".bedType\" ];\n        }\n      }, HTML.Raw('\\n                        <option value=\"single\">Single</option>\\n                        <option value=\"double\">Double</option>\\n                        <option value=\"twin\">Twin</option>\\n                    ')), HTML.Raw(\"\\n                    <span></span>\\n                \")), \"\\n            \" ];\n    }), \"\\n\\n            \"), HTML.Raw('<div class=\"w-100\"></div>\\n            ') ];\n  }), \"\\n\\n            \", HTML.DIV({\n    class: \"styled-full-width\"\n  }, HTML.Raw('\\n                <label class=\"cf-title\">About</label><br>\\n                '), HTML.TEXTAREA({\n    name: \"about\",\n    class: \"styled-input-textarea autoGrowTA\",\n    placeholder: \"Enter any additional info about this letting.\"\n  }), \"\\n\\n            \"), HTML.Raw('\\n\\n            <div class=\"w-100\"></div>\\n\\n            <div class=\"styled-full-width styled-input-checkbox\">\\n                <label class=\"cf-title\">Amenities</label><br>\\n                <div class=\"cb-subsec\">\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Parking\">Parking</label>\\n                    </div>\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Club House\">Club House</label>\\n                    </div>\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Swimming Pool\">Swimming Pool</label>\\n                    </div>\\n                    <div class=\"checkbox disabled\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Mini Theater\">Mini Theater</label>\\n                    </div>\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Gym\">Gym</label>\\n                    </div>\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Meditation Hall\">Meditation Hall</label>\\n                    </div>\\n                    <div class=\"checkbox disabled\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Cable Television\">Cable Television</label>\\n                    </div>\\n                </div>\\n                <div class=\"cb-subsec\">\\n                    <div class=\"checkbox disabled\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Dishwasher\">Dishwasher</label>\\n                    </div>\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Garden / Patio / Balcony\">Garden / Patio / Balcony</label>\\n                    </div>\\n                    <div class=\"checkbox disabled\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Internet\">Internet</label>\\n                    </div>\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Serviced Property\">Serviced Property</label>\\n                    </div>\\n                    <div class=\"checkbox disabled\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Washing Machine\">Washing Machine</label>\\n                    </div>\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Central Heating\">Central Heating</label>\\n                    </div>\\n                </div>\\n                <div class=\"cb-subsec\">\\n                    <div class=\"checkbox disabled\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Dryer\">Dryer</label>\\n                    </div>\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"House Alarm\">House Alarm</label>\\n                    </div>\\n                    <div class=\"checkbox disabled\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Microwave\">Microwave</label>\\n                    </div>\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Pets Allowed\">Pets Allowed</label>\\n                    </div>\\n                    <div class=\"checkbox\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Smoking \">Smoking</label>\\n                    </div>\\n                    <div class=\"checkbox disabled\">\\n                        <label><input type=\"checkbox\" name=\"amenities\" value=\"Wheelchair Access\">Wheelchair Access</label>\\n                    </div>\\n                </div>\\n                <span></span>\\n            </div>\\n\\n            <div class=\"w-100\"></div>\\n\\n            <div class=\"sep-section\">\\n                <label class=\"sep-label\">Contact details of the property owner if any</label>\\n                <div class=\"styled-input underline\">\\n                    <input type=\"text\" name=\"contacts.0.name\">\\n                    <label>Owners Name <i title=\"This info will not be displayed to users. It confidential and will be used only for record purpose.\">(Private)</i></label>\\n                    <span></span>\\n                </div>\\n                <div class=\"styled-input underline\">\\n                    <input type=\"text\" name=\"contacts.0.phone\">\\n                    <label>Owners Mobile <i title=\"This info will not be displayed to users. It confidential and will be used only for record purpose.\">(Private)</i></label>\\n                    <span></span>\\n                </div>\\n                <div class=\"styled-input underline\">\\n                    <input type=\"email\" name=\"contacts.0.email\">\\n                    <label>Owners Email <i title=\"This info will not be displayed to users. It confidential and will be used only for record purpose.\">(Private)</i></label>\\n                    <span></span>\\n                </div>\\n            </div>\\n\\n            <div class=\"w-100\"></div>\\n\\n\\n            <div class=\"styled-full-width\">\\n                <button class=\"btns blue-btn openFileUploader\">Add Images</button>\\n                <!--<label for=\"selectPropertyImages\">Property images</label>-->\\n                <!--<input type=\"file\" multiple=\"true\" class=\"selectPropertyImages\"  id=\"selectPropertyImages\"/>-->\\n                <!--<p class=\"help-block\">Example block-level help text here.</p>-->\\n            </div>\\n\\n            <div class=\"w-100\"></div>\\n\\n\\n            '), Spacebars.include(view.lookupTemplate(\"imageView\")), \"\\n\\n            \", HTML.DIV({\n    class: \"styled-full-width\"\n  }, \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"addPropertyFormSaving\"));\n  }, function() {\n    return HTML.Raw('\\n                    <button type=\"button\" class=\"btns transparent-btn\">Saving</button>\\n                ');\n  }, function() {\n    return HTML.Raw('\\n                    <button type=\"submit\" class=\"btns blue-btn addPropertyFormSaveBtn\">Save</button>\\n                ');\n  }), HTML.Raw('\\n                <button type=\"button\" class=\"btns blue-btn addPropertyFormSaveAdvertiseBtn\">Save and Advertise</button>\\n                <button type=\"button\" class=\"btns transparent-btn addPropertyFormCancelBtn\">Cancel</button>\\n            ')), HTML.Raw('\\n\\n            <div class=\"w-100\"></div>\\n        ')), \"\\n    \");\n}));\n\nTemplate.__checkName(\"addPropertyForm1\");\nTemplate[\"addPropertyForm1\"] = new Template(\"Template.addPropertyForm1\", (function() {\n  var view = this;\n  return Blaze._TemplateWith(function() {\n    return {\n      collection: Spacebars.call(\"Collections.Properties\"),\n      id: Spacebars.call(\"insertPropertiesForm\"),\n      type: Spacebars.call(\"insert\")\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"autoForm\"), function() {\n      return [ \"\\n        \", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"afFieldNames\"));\n      }, function() {\n        return [ \"\\n            \", Blaze._TemplateWith(function() {\n          return {\n            name: Spacebars.call(Spacebars.dot(view.lookup(\".\"), \"name\")),\n            options: Spacebars.call(view.lookup(\"afOptionsFromSchema\"))\n          };\n        }, function() {\n          return Spacebars.include(view.lookupTemplate(\"afQuickField\"));\n        }), \"\\n        \" ];\n      }), HTML.Raw('\\n\\n        <div class=\"form-group\">\\n            <label for=\"selectPropertyImages\">Property images</label>\\n            <input type=\"file\" multiple=\"true\" class=\"selectPropertyImages\" id=\"selectPropertyImages\">\\n            <!--<p class=\"help-block\">Example block-level help text here.</p>-->\\n        </div>\\n\\n        '), Spacebars.include(view.lookupTemplate(\"imageView\")), HTML.Raw('\\n\\n\\n        <button type=\"submit\" class=\"btns blue-btn addPropertyFormSaveBtn\">Save</button>\\n        <button type=\"button\" class=\"btns transparent-btn addPropertyFormCancelBtn\">Cancel</button>\\n\\n    ') ];\n    });\n  });\n}));\n","bodyAttrs":{}}