{"head":"","body":"","js":"\nTemplate.__checkName(\"loginPageHorizontal\");\nTemplate[\"loginPageHorizontal\"] = new Template(\"Template.loginPageHorizontal\", (function() {\n  var view = this;\n  return HTML.SECTION({\n    class: \"mar-top-20 mar-btm-20 no-print loginPageHorizontal\"\n  }, \"\\n\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isTemplateLoaded\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      class: \"container\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"filter-holder\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"head-border-bottom\"\n    }, \"\\n                        \", Spacebars.include(view.lookupTemplate(\"loginFormHorizontal\")), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \" ];\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"loading\")), \"\\n        \" ];\n  }), \"\\n\\n    \");\n}));\n\nTemplate.__checkName(\"socialLoginButtons\");\nTemplate[\"socialLoginButtons\"] = new Template(\"Template.socialLoginButtons\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    id: \"facebook-login\",\n    class: \"blue-btn btns social-button\",\n    \"data-max-rows\": \"1\",\n    \"data-size\": \"medium\",\n    \"data-show-faces\": \"false\",\n    \"data-auto-logout-link\": \"false\"\n  }, Blaze.View(\"lookup:buttonForText\", function() {\n    return Spacebars.mustache(view.lookup(\"buttonForText\"));\n  }), \" with Facebook\"), HTML.Raw('\\n    <!--<div id=\"twitter-login\" style=\"margin-top: 10px;\" class=\"blue-btn btns social-button\" data-max-rows=\"1\" data-size=\"medium\" data-show-faces=\"false\" data-auto-logout-link=\"false\">{{buttonForText}} with Twitter</div>-->\\n    '), HTML.DIV({\n    id: \"google-login\",\n    style: \"margin-top: 10px;\",\n    class: \"blue-btn btns social-button\",\n    \"data-max-rows\": \"1\",\n    \"data-size\": \"medium\",\n    \"data-show-faces\": \"false\",\n    \"data-auto-logout-link\": \"false\"\n  }, Blaze.View(\"lookup:buttonForText\", function() {\n    return Spacebars.mustache(view.lookup(\"buttonForText\"));\n  }), \" with Google\"), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"dontShow\"));\n  }, function() {\n    return HTML.Raw('\\n        <!--Not properly working. will create a new user if there is not existing link.-->\\n        <div id=\"linkedin-login\" style=\"margin-top: 10px;\" class=\"blue-btn btns social-button\" data-max-rows=\"1\" data-size=\"medium\" data-show-faces=\"false\" data-auto-logout-link=\"false\">Login with LinkedIn</div>\\n    ');\n  }), HTML.Raw(\"\\n\\n    <br>\\n    \"), Blaze._TemplateWith(function() {\n    return {\n      messages: Spacebars.call(view.lookup(\"errorMessages\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"loginFormMessages\"));\n  }), HTML.Raw(\"\\n    <br>\") ];\n}));\n\nTemplate.__checkName(\"loginFormHorizontal\");\nTemplate[\"loginFormHorizontal\"] = new Template(\"Template.loginFormHorizontal\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"loginForm onpageSignin-form\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"row\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"socialLoginButtons\")), \"\\n        \"), \"\\n        \", HTML.DIV({\n    class: \"row text-center\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"col-md-6 col-sm-12\"\n  }, \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showForgotForm\"));\n  }, function() {\n    return [ \"\\n                    \", Blaze._TemplateWith(function() {\n      return {\n        onPage: Spacebars.call(true)\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"loginFormResetPasswordView\"));\n    }), \"\\n                \" ];\n  }, function() {\n    return [ \"\\n                    \", Blaze._TemplateWith(function() {\n      return {\n        onPage: Spacebars.call(true)\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"loginFormSignInView\"));\n    }), \"\\n                \" ];\n  }), \"\\n            \"), \"\\n            \", HTML.DIV({\n    class: \"col-md-6 col-sm-12\"\n  }, \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isLandLordMode\"));\n  }, function() {\n    return [ \"\\n                    \", Blaze._TemplateWith(function() {\n      return {\n        onPage: Spacebars.call(true)\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"loginFormSignUpViewLandlord\"));\n    }), \"\\n                \" ];\n  }, function() {\n    return [ \"\\n                    \", Blaze._TemplateWith(function() {\n      return {\n        onPage: Spacebars.call(true)\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"loginFormSignUpView\"));\n    }), \"\\n                \" ];\n  }), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"loginPage\");\nTemplate[\"loginPage\"] = new Template(\"Template.loginPage\", (function() {\n  var view = this;\n  return HTML.SECTION({\n    class: \"mar-top-20 no-print\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"container\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"filter-holder\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"head-border-bottom\"\n  }, \"\\n                    \", Spacebars.include(view.lookupTemplate(\"loginForm\")), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"loginForm\");\nTemplate[\"loginForm\"] = new Template(\"Template.loginForm\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"loginForm\"\n  }, \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showForgotForm\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"loginFormResetPasswordView\")), \"\\n        \" ];\n  }, function() {\n    return [ \"\\n            \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"showSignupForm\"));\n    }, function() {\n      return [ \"\\n                \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isLandLordMode\"));\n      }, function() {\n        return [ \"\\n                    \", Spacebars.include(view.lookupTemplate(\"loginFormSignUpViewLandlord\")), \"\\n                \" ];\n      }, function() {\n        return [ \"\\n                    \", Spacebars.include(view.lookupTemplate(\"loginFormSignUpView\")), \"\\n                \" ];\n      }), \"\\n            \" ];\n    }, function() {\n      return [ \"\\n                \", Spacebars.include(view.lookupTemplate(\"loginFormSignInView\")), \"\\n            \" ];\n    }), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\nTemplate.__checkName(\"loginFormMessages\");\nTemplate[\"loginFormMessages\"] = new Template(\"Template.loginFormMessages\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"info\"));\n  }, function() {\n    return [ \"\\n        \", Blaze.Each(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"info\"));\n    }, function() {\n      return [ \"\\n            \", HTML.DIV({\n        class: \"changePwdAlertMsgs alert alert-info\",\n        role: \"alert\"\n      }, HTML.Raw('\\n                <span class=\"glyphicon glyphicon-info-sign\" aria-hidden=\"true\"></span>&nbsp; '), Blaze.View(\"lookup:reason\", function() {\n        return Spacebars.mustache(view.lookup(\"reason\"));\n      }), \"\\n            \"), \"\\n        \" ];\n    }), \"\\n    \" ];\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"warning\"));\n  }, function() {\n    return [ \"\\n        \", Blaze.Each(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"warning\"));\n    }, function() {\n      return [ \"\\n            \", HTML.DIV({\n        class: \"changePwdAlertMsgs alert alert-warning\",\n        role: \"alert\"\n      }, HTML.Raw('\\n                <span class=\"glyphicon glyphicon-warning-sign\" aria-hidden=\"true\"></span>&nbsp; '), Blaze.View(\"lookup:reason\", function() {\n        return Spacebars.mustache(view.lookup(\"reason\"));\n      }), \"\\n            \"), \"\\n        \" ];\n    }), \"\\n    \" ];\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"success\"));\n  }, function() {\n    return [ \"\\n        \", Blaze.Each(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"success\"));\n    }, function() {\n      return [ \"\\n            \", HTML.DIV({\n        class: \"changePwdAlertMsgs alert alert-success\",\n        role: \"alert\"\n      }, HTML.Raw('\\n                <span class=\"glyphicon glyphicon-ok\" aria-hidden=\"true\"></span>&nbsp; '), Blaze.View(\"lookup:reason\", function() {\n        return Spacebars.mustache(view.lookup(\"reason\"));\n      }), \"\\n            \"), \"\\n        \" ];\n    }), \"\\n    \" ];\n  }), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"errors\"));\n  }, function() {\n    return [ \"\\n        \", Blaze.Each(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"errors\"));\n    }, function() {\n      return [ \"\\n            \", HTML.DIV({\n        class: \"changePwdAlertMsgs alert alert-danger\",\n        role: \"alert\"\n      }, HTML.Raw('\\n                <span class=\"glyphicon glyphicon-exclamation-sign\" aria-hidden=\"true\"></span>&nbsp; '), Blaze.View(\"lookup:reason\", function() {\n        return Spacebars.mustache(view.lookup(\"reason\"));\n      }), \"\\n            \"), \"\\n        \" ];\n    }), \"\\n    \" ];\n  }), \"\\n    \", Blaze.If(function() {\n    return false;\n  }, function() {\n    return HTML.Raw('\\n\\n\\n        <!--<div class=\"changePwdAlertMsgs\">-->\\n            <!--{{#each messages.alerts}}-->\\n        <!--<p class=\"color-text alerts\">{{reason}}</p>-->\\n            <!--{{/each}}-->\\n        <!--</div>-->\\n    ');\n  }) ];\n}));\n","bodyAttrs":{}}