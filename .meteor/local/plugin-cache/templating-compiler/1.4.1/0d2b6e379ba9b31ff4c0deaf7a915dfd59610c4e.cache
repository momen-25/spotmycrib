{"head":"","body":"","js":"\nTemplate.__checkName(\"profile\");\nTemplate[\"profile\"] = new Template(\"Template.profile\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isSubsLoaded\"));\n  }, function() {\n    return [ \"\\n\\n\", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"userLoggedIn\"));\n    }, function() {\n      return [ \"\\n\\n    \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"currentUser\"));\n      }, function() {\n        return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"userProfile\")), \"\\n    \" ];\n      }, function() {\n        return \"\\n\\n    \";\n      }), \"\\n\\n\" ];\n    }, function() {\n      return [ \"\\n    \", HTML.SECTION({\n        class: \"mar-top-20 mar-btm-20 no-print loginPageHorizontal\"\n      }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"loginPageHorizontal\")), \"\\n    \"), \"\\n\" ];\n    }), \"\\n\" ];\n  }, function() {\n    return [ \"\\n    \", HTML.SECTION({\n      class: \"mar-top-20 mar-btm-20 no-print loginPageHorizontal\"\n    }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"loading\")), \"\\n    \"), \"\\n\" ];\n  });\n}));\n\nTemplate.__checkName(\"accountProfileExtended\");\nTemplate[\"accountProfileExtended\"] = new Template(\"Template.accountProfileExtended\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"currentUser\"));\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"userProfile\")), \"\\n    \" ];\n  }, function() {\n    return \"\\n\\n    \";\n  });\n}));\n\nTemplate.__checkName(\"userProfile\");\nTemplate[\"userProfile\"] = new Template(\"Template.userProfile\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    class: \"profile-page\"\n  }, \"\\n        \", HTML.SECTION({\n    class: \"logo-below-div\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"container\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"logo-holder-div\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"logo-holder\"\n  }, \"\\n                        \", HTML.UL(\"\\n                            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"backBtnNeeded\"));\n  }, function() {\n    return HTML.LI(HTML.SPAN({\n      class: \"backBtn\",\n      style: \"cursor: pointer;\"\n    }, HTML.IMG({\n      src: function() {\n        return Spacebars.mustache(view.lookup(\"cdnPath\"), \"/images/back-arrow.png\");\n      }\n    })));\n  }), \"\\n                            \", HTML.LI(\"\\n                                \", HTML.H2(\"\\n                                    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"displayName\"));\n  }, function() {\n    return [ Blaze.View(\"lookup:displayName\", function() {\n      return Spacebars.mustache(view.lookup(\"displayName\"));\n    }), HTML.Raw(\"&#39;s Profile\\n                                            \") ];\n  }, function() {\n    return \"My Profile\\n                                    \";\n  }), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"backBtnNeeded\"));\n  }, function() {\n    return HTML.Raw('\\n                        <div class=\"menu\">\\n                            <ul>\\n                                <li class=\"text-center\">\\n                                    <button class=\"blue-btn btns backBtn\" type=\"button\" style=\"margin-bottom: 5px;\">\\n                                        Back to Property\\n                                    </button>\\n\\n                                </li>\\n                            </ul>\\n                        </div>\\n                    ');\n  }), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n\\n        \", HTML.SECTION({\n    class: \"myprofile-info mar-top-20 mar-btm-30 pad-btm-20\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"container\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"text-center\"\n  }, HTML.Raw('\\n                    <!--<h2 class=\"text-center\">{{displayName}}</h2>-->\\n                    <p class=\"text-center\">Wouldn\\'t it be great if landlords find you? Make your profile public now to find house faster. Its safe and quick. </p>\\n                    '), HTML.H3({\n    class: function() {\n      return [ \"text-center \", Blaze.If(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"isPublic\"));\n      }, function() {\n        return \"green-text\";\n      }, function() {\n        return \"text-warning\";\n      }) ];\n    }\n  }, HTML.SELECT({\n    class: \"togglePublicProfileSetting\"\n  }, HTML.OPTION(HTML.Attrs({\n    value: \"yes\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"isPublicProfileSelectYes\"));\n  }), \"Yes\"), HTML.OPTION(HTML.Attrs({\n    value: \"no\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"isPublicProfileSelectNo\"));\n  }), \"No\")), \"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"isPublic\"));\n  }, function() {\n    return \"Landlords can find and invite me for house viewings.\\n                        \";\n  }, function() {\n    return \"Landlords can't find me.\";\n  }), \"\\n                    \"), \"\\n\", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"isPublic\"));\n  }, function() {\n    return [ \"\\n                    \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"username\"));\n    }, function() {\n      return [ \"\\n                        \", HTML.FORM({\n        class: \"profileurl-form\"\n      }, \"\\n                            \", HTML.DIV({\n        class: \"input-group\"\n      }, \"\\n                                \", HTML.INPUT({\n        type: \"text\",\n        value: function() {\n          return [ \"https://www.spotmycrib.ie/tenant/\", Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"username\")) ];\n        },\n        class: \"form-control profileLinkField\",\n        name: \"profileLinkField\",\n        id: \"profileLinkField\",\n        style: \"\"\n      }), HTML.Raw('\\n                                <span class=\"input-group-btn\">\\n                                <button class=\"btns transparent-btn profileLinkCopyBtn\" type=\"button\">Copy</button>\\n                            </span>\\n                            ')), \"\\n                        \"), \"\\n                    \" ];\n    }), \"\\n\" ];\n  }), \"\\n                \"), \"\\n                \", HTML.DIV({\n    class: \"background-white mar-top-20 pad-btm-30\"\n  }, HTML.Raw('\\n                    <div class=\"padding30\">\\n\\n                    </div>\\n                    '), HTML.DIV({\n    class: \"grey-box \"\n  }, \"\\n                        \", HTML.DIV({\n    class: \"text-center\"\n  }, HTML.Raw(\"<h3>Profile completion</h3>\\n                            \"), HTML.DIV({\n    class: \"progress\",\n    style: \"height: 21px;margin: 0 auto;margin-bottom: 10px;\"\n  }, \"\\n                                \", HTML.DIV({\n    class: function() {\n      return [ \"progress-bar \", Spacebars.mustache(Spacebars.dot(view.lookup(\"progress\"), \"css\")) ];\n    },\n    role: \"progressbar\",\n    \"aria-valuenow\": \"60\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    style: function() {\n      return [ \"width: \", Spacebars.mustache(Spacebars.dot(view.lookup(\"progress\"), \"percent\")), \";height: 21px;line-height: 21px;\" ];\n    }\n  }, \"\\n                                    \", Blaze.View(\"lookup:progress.percent\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"progress\"), \"percent\"));\n  }), \"\\n                                \"), \"\\n                            \"), HTML.Raw(\"\\n\\n                            <p> Complete profiles are given preference. </p>\\n\\n                            \"), Blaze.Each(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"progress\"), \"issues\"));\n  }, function() {\n    return [ \"\\n                                \", HTML.P(Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n                            \" ];\n  }), \"\\n\\n                        \"), \"\\n\\n                        \", HTML.FORM({\n    action: \"\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"inp-wrap mar-btm-20\"\n  }, HTML.Raw(\"\\n                                <label>\\n                                    Email\\n                                </label>\\n                                \"), HTML.DIV({\n    class: \"inp-hold\"\n  }, \"\\n                                    \", HTML.INPUT({\n    type: \"email\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userEmail\"));\n    },\n    class: \"form-control\"\n  }), \"\\n                                    \", HTML.SPAN({\n    class: \"overlay-text\",\n    placeholder: \"abc@gmail.com\"\n  }, Blaze.View(\"lookup:data.userEmail\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userEmail\"));\n  })), HTML.Raw('\\n                                    <!--<span class=\"color-green green-bdr-btm change-clk change-click change-text\">Change</span>-->\\n                                    <!--<button class=\"color-green green-bdr-btm change-clk save-btn transition\" type=\"button\">Save</button>-->\\n                                    <!--<div class=\"cancel-div transition\"><button class=\"color-green green-bdr-btm cancel-clk\" type=\"button\">Cancel</button></div>-->\\n                                ')), \"\\n                            \"), HTML.Raw('\\n                                <!--{{#if data.userEmailVerified}}{{else}}-->\\n                            <!--<div class=\"inp-wrap mar-btm-20\">-->\\n                            <!--<div class=\"request-hold hideen-div\">-->\\n                            <!--<h5>Email not verified?</h5>-->\\n                            <!--<span class=\"color-blue blue-bdr-btm request-clk sendEmailVerification\">Send verification link</span>-->\\n                            <!--<span class=\"sent-req color-grey transition\"><span class=\"fa-check fa color-green pad-right-10\"></span>Request Sent</span>-->\\n\\n                            <!--</div>-->\\n                            <!--</div>-->\\n                                <!--{{/if}}-->\\n                            '), HTML.DIV({\n    class: \"inp-wrap mar-btm-20\"\n  }, HTML.Raw('\\n                                <label>\\n                                    Mobile\\n                                </label>\\n                                <div class=\"alert alert-success mobileValidationErrors\" style=\"\">\\n\\n                                </div>\\n                                '), HTML.DIV({\n    class: \"inp-hold\"\n  }, \"\\n                                    \", HTML.INPUT({\n    type: \"text\",\n    placeholder: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"mobile\"));\n    },\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"mobile\"));\n    },\n    class: \"form-control db-data changeMobileValue\"\n  }), \"\\n                                    \", HTML.SPAN({\n    class: \"overlay-text\"\n  }, Blaze.View(\"lookup:data.userData.profile.mobile\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"mobile\"));\n  })), HTML.Raw('\\n                                    <span class=\"color-blue blue-bdr-btm change-clk change-click change-text\">Change</span>\\n                                    <button class=\"color-blue blue-bdr-btm change-clk save-btn transition changeMobileConfirmation\" type=\"button\">Save</button>\\n                                    <div class=\"cancel-div transition\"><button class=\"color-blue blue-bdr-btm cancel-clk\" type=\"button\">Cancel</button></div>\\n                                ')), \"\\n                            \"), \"\\n                            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasPasswordSetReqCompleted\"));\n  }, function() {\n    return [ \"\\n                            \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"hasPasswordSet\"));\n    }, function() {\n      return HTML.Raw('\\n                                <div class=\"inp-wrap request-hold mar-btm-20 change-pwd-link\">\\n                                    <h5>Change password?</h5>\\n                                    <button class=\"changepass1 changePwdBtn\" type=\"button\">Change Password</button>\\n                                </div>\\n                            ');\n    }, function() {\n      return HTML.Raw('\\n                                <div class=\"inp-wrap request-hold mar-btm-20 change-pwd-link\">\\n                                    <h5>Set password</h5>\\n                                    <button class=\"changepass1 setPwdBtn\" type=\"button\">Set Password</button>\\n                                </div>\\n                            ');\n    }), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.DIV({\n    class: \"inp-wrap request-hold mar-btm-20 change-pwd-link\"\n  }, \"\\n                                \", HTML.H5(Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"services\", \"facebook\"));\n  }, function() {\n    return HTML.Raw('<span class=\"green-text\">Connected to Facebook</span>');\n  }, function() {\n    return \"Link with Facebook\";\n  })), \"\\n                                \", Blaze.Unless(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"services\", \"facebook\"));\n  }, function() {\n    return HTML.Raw('<button class=\"changepass1 linkWithFacebookBtn\" type=\"button\">Link with Facebook</button>');\n  }), \"\\n                            \"), \"\\n                            \", HTML.DIV({\n    class: \"inp-wrap request-hold mar-btm-20 change-pwd-link\"\n  }, \"\\n                                \", HTML.H5(Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"services\", \"twitter\"));\n  }, function() {\n    return HTML.Raw('<span class=\"green-text\">Connected to Twitter</span>');\n  }, function() {\n    return \"Link with Twitter\";\n  })), \"\\n                                \", Blaze.Unless(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"services\", \"twitter\"));\n  }, function() {\n    return HTML.Raw('<button class=\"changepass1 linkWithTwitterBtn\" type=\"button\">Link with Twitter</button>');\n  }), \"\\n                            \"), \"\\n                            \", HTML.DIV({\n    class: \"inp-wrap request-hold mar-btm-20 change-pwd-link\"\n  }, \"\\n                                \", HTML.H5(Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"services\", \"linkedin\"));\n  }, function() {\n    return HTML.Raw('<span class=\"green-text\">Connected to LinkedIn</span>');\n  }, function() {\n    return \"Link with LinkedIn\";\n  })), \"\\n                                \", Blaze.Unless(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"services\", \"linkedin\"));\n  }, function() {\n    return HTML.Raw('<button class=\"changepass1 linkWithLinkedInBtn\" type=\"button\">Link with LinkedIn</button>');\n  }), \"\\n                            \"), \"\\n                            \", HTML.DIV({\n    class: \"inp-wrap request-hold mar-btm-20 change-pwd-link\"\n  }, \"\\n                                \", HTML.H5(Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"services\", \"google\"));\n  }, function() {\n    return HTML.Raw('<span class=\"green-text\">Connected to Google</span>');\n  }, function() {\n    return \"Link with Google\";\n  })), \"\\n                                \", Blaze.Unless(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"currentUser\"), \"services\", \"google\"));\n  }, function() {\n    return HTML.Raw('<button class=\"changepass1 linkWithGoogleBtn\" type=\"button\">Link with Google</button>');\n  }), \"\\n                            \"), \"\\n                            \", HTML.DIV({\n    class: \"inp-wrap mar-btm-20\"\n  }, HTML.Raw(\"\\n                                <label>\\n                                    Employer name\\n                                </label>\\n                                \"), HTML.DIV({\n    class: \"inp-hold\"\n  }, \"\\n                                    \", HTML.INPUT({\n    type: \"text\",\n    placeholder: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"employerName\"));\n    },\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"employerName\"));\n    },\n    class: \"form-control db-data changeEmployerNameValue\"\n  }), \"\\n                                    \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"employerName\"));\n  }, function() {\n    return [ \"\\n                                        \", HTML.SPAN({\n      class: \"overlay-text\",\n      placeholder: \"\"\n    }, Blaze.View(\"lookup:data.userData.profile.references.employerName\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"employerName\"));\n    })), \"\\n                                    \" ];\n  }, function() {\n    return HTML.Raw('\\n                                        <span class=\"overlay-text\" placeholder=\"\"> ? </span>\\n                                    ');\n  }), HTML.Raw('\\n                                    <span class=\"color-blue blue-bdr-btm change-clk change-click change-text\">Update</span>\\n                                    <button class=\"color-blue blue-bdr-btm change-clk save-btn transition changeEmployerNameConfirmation\" type=\"button\">Save</button>\\n                                    <div class=\"cancel-div transition\"><button class=\"color-blue green-bdr-btm cancel-clk\" type=\"button\">Cancel</button></div>\\n                                ')), \"\\n                            \"), \"\\n                            \", HTML.DIV({\n    class: \"inp-wrap mar-btm-20\"\n  }, \"\\n                                \", HTML.LABEL({\n    title: \"This information will not be shared with anyone, it will only be used to calculate your profile completion score. \"\n  }, \"\\n                                    Monthly take home salary (private) \", HTML.A({\n    href: \"javascript:void(0);\",\n    class: \"privacyTermsMore_btn\"\n  }, Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"privacyTermsMore\"));\n  }, function() {\n    return \"less\";\n  }, function() {\n    return \"more\";\n  })), \"\\n                                    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"privacyTermsMore\"));\n  }, function() {\n    return [ HTML.Raw(\"\\n                                        <br>\"), HTML.SPAN(\"This information will not be shared with anyone, it will only be used to calculate your profile completion score. \", HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"pathFor\"), \"privacy\");\n      }\n    }, \"Privacy\")) ];\n  }), \"\\n                                \"), \"\\n                                \", HTML.DIV({\n    class: \"inp-hold\"\n  }, \"\\n                                    \", HTML.INPUT({\n    type: \"text\",\n    placeholder: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"employerTakeHome\"));\n    },\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"employerTakeHome\"));\n    },\n    class: \"form-control db-data changeEmployerTakeHomeValue\"\n  }), \"\\n                                    \", Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"employerTakeHome\"));\n  }, function() {\n    return [ \"\\n                                        \", HTML.SPAN({\n      class: \"overlay-text\",\n      placeholder: \"\"\n    }, Blaze.View(\"lookup:data.userData.profile.references.employerTakeHome\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"employerTakeHome\"));\n    })), \"\\n                                    \" ];\n  }, function() {\n    return HTML.Raw('\\n                                        <span class=\"overlay-text\" placeholder=\"\"> ? </span>\\n                                    ');\n  }), HTML.Raw('\\n                                    <span class=\"color-blue blue-bdr-btm change-clk change-click change-text\">Update</span>\\n                                    <button class=\"color-blue blue-bdr-btm change-clk save-btn transition changeEmployerTakeHomeConfirmation\" type=\"button\">Save</button>\\n                                    <div class=\"cancel-div transition\"><button class=\"color-blue green-bdr-btm cancel-clk\" type=\"button\">Cancel</button></div>\\n                                ')), \"\\n                            \"), \"\\n\\n                            \", Blaze._TemplateWith(function() {\n    return {\n      title: Spacebars.call(\"Passport\"),\n      hasIt: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"hasPassport\")),\n      link: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"passport\", \"url\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"fileUploadArea\"));\n  }), \"\\n                            \", Blaze._TemplateWith(function() {\n    return {\n      title: Spacebars.call(\"Work Reference\"),\n      hasIt: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"hasWorkRef\")),\n      link: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"workRef\", \"url\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"fileUploadArea\"));\n  }), \"\\n                            \", Blaze._TemplateWith(function() {\n    return {\n      title: Spacebars.call(\"Landlord Reference\"),\n      hasIt: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"hasLandlordRef\")),\n      link: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"landlordRef\", \"url\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"fileUploadArea\"));\n  }), \"\\n                            \", Blaze._TemplateWith(function() {\n    return {\n      title: Spacebars.call(\"PPS\"),\n      hasIt: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"hasPPS\")),\n      link: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"PPS\", \"url\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"fileUploadArea\"));\n  }), \"\\n                            \", Blaze._TemplateWith(function() {\n    return {\n      title: Spacebars.call(\"Financial Reference\"),\n      hasIt: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"hasFinancialRef\")),\n      link: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"financialRef\", \"url\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"fileUploadArea\"));\n  }), \"\\n                            \", Blaze._TemplateWith(function() {\n    return {\n      title: Spacebars.call(\"Government ID\"),\n      hasIt: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"hasGovtID\")),\n      link: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"govtID\", \"url\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"fileUploadArea\"));\n  }), \"\\n                            \", Blaze._TemplateWith(function() {\n    return {\n      title: Spacebars.call(\"Resume\"),\n      hasIt: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"hasResume\")),\n      link: Spacebars.call(Spacebars.dot(view.lookup(\"data\"), \"userData\", \"profile\", \"references\", \"resume\", \"url\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"fileUploadArea\"));\n  }), \"\\n\\n\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \"), HTML.Raw(\"\\n\\n    <!-- change password  -->\\n    \"), HTML.DIV({\n    id: \"changepass-dlg\",\n    class: \"changepass-div\",\n    style: \"display:none;\"\n  }, HTML.Raw('\\n        <div class=\"refund-div\"><h2>Change Password</h2></div>\\n        '), HTML.DIV({\n    class: \"profile-text\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"loginFormChangePassword\")), \"\\n        \"), \"\\n    \"), HTML.Raw(\"\\n    <!-- </div> -->\\n\\n    \"), HTML.DIV({\n    id: \"setpass-dlg\",\n    class: \"changepass-div\",\n    style: \"display:none;\"\n  }, HTML.Raw('\\n        <div class=\"refund-div\"><h2>Set Password</h2></div>\\n        '), HTML.DIV({\n    class: \"profile-text\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"loginFormSetPassword\")), \"\\n        \"), \"\\n    \"), \"\\n\\n    \", Blaze.View(\"lookup:showHideFileDlg\", function() {\n    return Spacebars.mustache(view.lookup(\"showHideFileDlg\"));\n  }), \"\\n    \", HTML.DIV({\n    id: \"fileupload-dlg\",\n    class: \"fileupload-dlg\",\n    style: \"display:none;\"\n  }, \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"showFileTemplate\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"fileUploadDlgTemplate\")), \"\\n        \" ];\n  }), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"loginFormSetPassword\");\nTemplate[\"loginFormSetPassword\"] = new Template(\"Template.loginFormSetPassword\", (function() {\n  var view = this;\n  return HTML.FORM(\"\\n\\n        \", HTML.DIV({\n    class: function() {\n      return [ \"styled-input \", Spacebars.mustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password1\")) ];\n    }\n  }, \"\\n            \", HTML.INPUT({\n    type: \"password\",\n    name: \"name\",\n    required: \"\",\n    for: function() {\n      return [ \"currentPassword_\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    },\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"password1\"));\n    },\n    class: \"newpwd login-input--password1 show-pwd\"\n  }), HTML.Raw(\"<br>\\n            \"), HTML.LABEL({\n    for: function() {\n      return [ \"currentPassword_\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }, \"ENTER NEW PASSWORD\"), HTML.Raw('<label class=\"eyebtn\"><img src=\"/images/pass-eye.png\"></label>\\n            <span></span>\\n            '), Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password1\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SPAN({\n      class: \"help-block\",\n      style: \"position: relative;background: none !important;min-height:30px;\"\n    }, \"\\n                    \", Blaze.Each(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password1\"));\n    }, function() {\n      return [ \"\\n                        \", HTML.P(Blaze.View(\"lookup:reason\", function() {\n        return Spacebars.mustache(view.lookup(\"reason\"));\n      })), \"\\n                    \" ];\n    }), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n\\n\\n        \", HTML.DIV({\n    class: function() {\n      return [ \"styled-input \", Spacebars.mustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password2\")) ];\n    }\n  }, \"\\n            \", HTML.INPUT({\n    type: \"password\",\n    name: \"email\",\n    required: \"\",\n    for: function() {\n      return [ \"password_\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    },\n    class: \"newpwdconfirm login-input--password2\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"password2\"));\n    }\n  }), \"\\n            \", HTML.LABEL({\n    for: function() {\n      return [ \"password_\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }, \"CONFIRM NEW PASSWORD\"), HTML.Raw(\"\\n            <span></span>\\n            \"), Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password2\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SPAN({\n      class: \"help-block\",\n      style: \"position: relative;background: none !important;min-height:30px;\"\n    }, \"\\n                    \", Blaze.Each(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password2\"));\n    }, function() {\n      return [ \"\\n                        \", HTML.P(Blaze.View(\"lookup:reason\", function() {\n        return Spacebars.mustache(view.lookup(\"reason\"));\n      })), \"\\n                    \" ];\n    }), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n        \"), HTML.Raw('\\n\\n        <!--<div class=\"styled-input\">-->\\n        <!--<input type=\"password\" name=\"phone\" id=\"phone\" onKeyPress=\"return isNumberKey(event);\" required/>-->\\n        <!--<label>CONFIRM NEW PASSWORD</label>-->\\n        <!--<span></span> </div>-->\\n\\n        <!--<p class=\"color-text\">Passwords do not match!!</p>-->\\n        '), Blaze._TemplateWith(function() {\n    return {\n      messages: Spacebars.call(view.lookup(\"messages\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"loginFormMessages\"));\n  }), \"\\n        \", HTML.UL(HTML.Raw('\\n            <li><button class=\"transparent-btn btns noBtn\" type=\"button\" data-event-category=\"accounts\" data-event-action=\"change-password-cancel\">CANCEL</button></li>\\n            '), HTML.LI(\"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isLoading\"));\n  }, function() {\n    return HTML.Raw('\\n                    <button class=\"transparent-btn btns\">Loading...</button>\\n                ');\n  }, function() {\n    return HTML.Raw('\\n                    <button class=\"blue-btn btns\" type=\"Submit\" data-event-category=\"accounts\" data-event-action=\"change-password\">APPLY</button>\\n                ');\n  }), \"\\n            \"), \"\\n        \"), \"\\n\\n    \");\n}));\n\nTemplate.__checkName(\"loginFormChangePassword\");\nTemplate[\"loginFormChangePassword\"] = new Template(\"Template.loginFormChangePassword\", (function() {\n  var view = this;\n  return HTML.FORM(\"\\n\\n        \", HTML.DIV({\n    class: function() {\n      return [ \"styled-input \", Spacebars.mustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"oldPassword\")) ];\n    }\n  }, \"\\n            \", HTML.INPUT({\n    type: \"password\",\n    name: \"name\",\n    required: \"\",\n    for: function() {\n      return [ \"currentPassword_\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    },\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"oldPassword\"));\n    },\n    class: \"oldpwd login-input--oldPassword show-pwd\"\n  }), HTML.Raw(\"<br>\\n            \"), HTML.LABEL({\n    for: function() {\n      return [ \"currentPassword_\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }, \"ENTER CURRENT PASSWORD\"), HTML.Raw('<label class=\"eyebtn\"><img src=\"/images/pass-eye.png\"></label>\\n            <span></span>\\n            '), Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"oldPassword\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SPAN({\n      class: \"help-block\",\n      style: \"position: relative;background: none !important;min-height:30px;\"\n    }, \"\\n                    \", Blaze.Each(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"oldPassword\"));\n    }, function() {\n      return [ \"\\n                        \", HTML.P(Blaze.View(\"lookup:reason\", function() {\n        return Spacebars.mustache(view.lookup(\"reason\"));\n      })), \"\\n                    \" ];\n    }), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n\\n\\n        \", HTML.DIV({\n    class: function() {\n      return [ \"styled-input \", Spacebars.mustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password\")) ];\n    }\n  }, \"\\n            \", HTML.INPUT({\n    type: \"password\",\n    name: \"email\",\n    required: \"\",\n    for: function() {\n      return [ \"password_\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    },\n    class: \"newpwd login-input--password\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"password\"));\n    }\n  }), \"\\n            \", HTML.LABEL({\n    for: function() {\n      return [ \"password_\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }, \"ENTER NEW PASSWORD\"), HTML.Raw(\"\\n            <span></span>\\n            \"), Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SPAN({\n      class: \"help-block\",\n      style: \"position: relative;background: none !important;min-height:30px;\"\n    }, \"\\n                    \", Blaze.Each(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password\"));\n    }, function() {\n      return [ \"\\n                        \", HTML.P(Blaze.View(\"lookup:reason\", function() {\n        return Spacebars.mustache(view.lookup(\"reason\"));\n      })), \"\\n                    \" ];\n    }), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n        \"), HTML.Raw('\\n\\n        <!--<div class=\"styled-input\">-->\\n        <!--<input type=\"password\" name=\"phone\" id=\"phone\" onKeyPress=\"return isNumberKey(event);\" required/>-->\\n        <!--<label>CONFIRM NEW PASSWORD</label>-->\\n        <!--<span></span> </div>-->\\n\\n        <!--<p class=\"color-text\">Passwords do not match!!</p>-->\\n        '), Blaze._TemplateWith(function() {\n    return {\n      messages: Spacebars.call(view.lookup(\"messages\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"loginFormMessages\"));\n  }), \"\\n        \", HTML.UL(HTML.Raw('\\n            <li><button class=\"transparent-btn btns noBtn\" type=\"button\" data-event-category=\"accounts\" data-event-action=\"change-password-cancel\">CANCEL</button></li>\\n            '), HTML.LI(\"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isLoading\"));\n  }, function() {\n    return HTML.Raw('\\n                    <button class=\"transparent-btn btns\">Loading...</button>\\n                ');\n  }, function() {\n    return HTML.Raw('\\n                    <button class=\"blue-btn btns\" type=\"Submit\" data-event-category=\"accounts\" data-event-action=\"change-password\">APPLY</button>\\n                ');\n  }), \"\\n\\n            \"), \"\\n        \"), \"\\n\\n    \");\n}));\n\nTemplate.__checkName(\"fileUploadArea\");\nTemplate[\"fileUploadArea\"] = new Template(\"Template.fileUploadArea\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"inp-wrap request-hold mar-btm-20 change-pwd-link profileFileUploadArea\"\n  }, \"\\n        \", HTML.SPAN({\n    class: \"col-md-4  col-xs-12\",\n    style: \"padding-left: 0;\"\n  }, HTML.H5(Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  }))), \"\\n        \", HTML.SPAN({\n    class: \"col-md-4  col-xs-6\"\n  }, \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasIt\"));\n  }, function() {\n    return [ \"\\n                \", HTML.A({\n      href: function() {\n        return Spacebars.mustache(view.lookup(\"link\"));\n      },\n      target: \"_blank\"\n    }, \"View\"), \"\\n            \" ];\n  }, function() {\n    return [ \"\\n                \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"uploading\"));\n    }, function() {\n      return HTML.Raw('\\n                    <p class=\"\">Uploading...</p>\\n                ');\n    }, function() {\n      return [ \"\\n                    \", HTML.P({\n        class: \"\"\n      }, \"Please upload your \", Blaze.View(\"lookup:title\", function() {\n        return Spacebars.mustache(view.lookup(\"title\"));\n      })), \"\\n                \" ];\n    }), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n        \", HTML.SPAN({\n    class: \"col-md-3 col-xs-6\"\n  }, HTML.Raw('\\n        <!--<label >-->\\n            <!--<span class=\"btns {{#if hasIt}} transparent-btn {{else}}{{/if}} blue-btn\">{{#if hasIt}}Update{{else}}Upload{{/if}}</span>-->\\n            <!--<input type=\"file\" cate=\"{{title}}\" class=\"uploadBtn\" accept=\"{{validFileExtensions}}\">-->\\n        <!--</label>-->\\n            '), HTML.A({\n    class: function() {\n      return [ \"showUploadDlg btns \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasIt\"));\n      }, function() {\n        return \" transparent-btn \";\n      }, function() {\n        return null;\n      }), \" blue-btn\" ];\n    }\n  }, Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasIt\"));\n  }, function() {\n    return \"Update\";\n  }, function() {\n    return \"Upload\";\n  })), \"\\n        \"), \"\\n    \");\n}));\n\nTemplate.__checkName(\"fileUploadDlgTemplate\");\nTemplate[\"fileUploadDlgTemplate\"] = new Template(\"Template.fileUploadDlgTemplate\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    class: \"refund-div\"\n  }, HTML.H2(Blaze.View(\"lookup:dlgTitle\", function() {\n    return Spacebars.mustache(view.lookup(\"dlgTitle\"));\n  }))), \"\\n    \", HTML.DIV({\n    class: \"profile-text\"\n  }, \"\\n\\n        \", HTML.DIV({\n    class: \"step1\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"hidden-xs\"\n  }, HTML.Raw('\\n                <div class=\"blue-btn btns showCamera\" style=\"display: inline;\">Take a picture from Camera</div>\\n                '), HTML.LABEL({\n    style: \"display: inline;\"\n  }, \"\\n                    \", HTML.DIV({\n    style: \"margin-top: 10px;\",\n    class: function() {\n      return [ \"btns \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasIt\"));\n      }, function() {\n        return \" transparent-btn \";\n      }, function() {\n        return \" blue-btn \";\n      }), \" \" ];\n    }\n  }, Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasIt\"));\n  }, function() {\n    return \"Update\";\n  }, function() {\n    return \"Upload\";\n  }), \" from photos / files\"), \"\\n                \", HTML.INPUT({\n    type: \"file\",\n    cate: function() {\n      return Spacebars.mustache(view.lookup(\"title\"));\n    },\n    class: \"uploadBtn\",\n    accept: function() {\n      return Spacebars.mustache(view.lookup(\"validFileExtensions\"));\n    }\n  }), \"\\n                \"), \"\\n            \"), \"\\n\\n            \", HTML.DIV({\n    class: \"visible-xs\"\n  }, HTML.Raw('\\n                <div class=\"blue-btn btns showCamera\">Take a picture from Camera</div>\\n                '), HTML.LABEL({\n    class: \"mar-top-5\"\n  }, \"\\n                    \", HTML.DIV({\n    style: \"margin-top: 10px;\",\n    class: function() {\n      return [ \"btns \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasIt\"));\n      }, function() {\n        return \" transparent-btn \";\n      }, function() {\n        return \" blue-btn \";\n      }), \" \" ];\n    }\n  }, Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasIt\"));\n  }, function() {\n    return \"Update\";\n  }, function() {\n    return \"Upload\";\n  }), \" from photos / files\"), \"\\n                \", HTML.INPUT({\n    type: \"file\",\n    cate: function() {\n      return Spacebars.mustache(view.lookup(\"title\"));\n    },\n    class: \"uploadBtn\",\n    accept: function() {\n      return Spacebars.mustache(view.lookup(\"validFileExtensions\"));\n    }\n  }), \"\\n                \"), \"\\n            \"), \"\\n\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"uploading\"));\n  }, function() {\n    return HTML.Raw('\\n                <div class=\"radio-bg register uploadingMessageArea\">\\n                    <p class=\"color-text \">Uploading...</p>\\n                </div>\\n            ');\n  }, function() {\n    return [ \"\\n                \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"existingFile\"));\n    }, function() {\n      return [ \"\\n                \", HTML.DIV({\n        class: \"radio-bg register uploadingMessageArea\"\n      }, \"\\n                    \", HTML.P({\n        class: \"color-text \"\n      }, \"Existing file \", Blaze.View(\"lookup:existingFile.name\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"existingFile\"), \"name\"));\n      }), \" \", HTML.A({\n        class: \"\",\n        href: function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"existingFile\"), \"url\"));\n        },\n        target: \"_blank\"\n      }, \"View\")), \"\\n                \"), \"\\n                \" ];\n    }), \"\\n            \" ];\n  }), \"\\n        \"), HTML.Raw('\\n        <div class=\"step2\">\\n            <p>Adjust your image below and click upload at the bottom.</p>\\n            <div id=\"uploadImagePreviewArea\">\\n                <img style=\"display: none;\" class=\"img-responsive\" id=\"cropImage\">\\n            </div>\\n            <div class=\"cropBtns\">\\n\\n                <div class=\"btn-group\">\\n                    <button type=\"button\" class=\"transparent-btn btn zoomInBtn\" data-method=\"zoom\" data-option=\"0.1\" title=\"Zoom In\">\\n            <span class=\"docs-tooltip\" data-toggle=\"tooltip\" data-animation=\"false\" title=\"\" data-original-title=\"Zoom In\">\\n              <span class=\"glyphicon glyphicon-zoom-in\"></span>\\n            </span>\\n                    </button>\\n                    <button type=\"button\" class=\"transparent-btn btn zoomOutBtn\" data-method=\"zoom\" data-option=\"-0.1\" title=\"Zoom Out\">\\n            <span class=\"docs-tooltip\" data-toggle=\"tooltip\" data-animation=\"false\" title=\"\" data-original-title=\"Zoom Out\">\\n              <span class=\"glyphicon glyphicon-zoom-out\"></span>\\n            </span>\\n                    </button>\\n                </div>\\n\\n                <div class=\"btn-group\">\\n                    <button type=\"button\" class=\"transparent-btn btn rotateLeftBtn\" data-method=\"rotate\" data-option=\"-45\" title=\"Rotate Left\">\\n            <span class=\"docs-tooltip\" data-toggle=\"tooltip\" data-animation=\"false\" title=\"\" data-original-title=\"Rotate Left\">\\n              <span class=\"glyphicon glyphicon-repeat\"></span>\\n            </span>\\n                    </button>\\n                    <button type=\"button\" class=\"transparent-btn btn rotateRightBtn\" data-method=\"rotate\" data-option=\"45\" title=\"Rotate Right\">\\n            <span class=\"docs-tooltip\" data-toggle=\"tooltip\" data-animation=\"false\" title=\"\" data-original-title=\"Rotate Right\">\\n              <span class=\"glyphicon glyphicon-repeat\"></span>\\n            </span>\\n                    </button>\\n                </div>\\n\\n                <div class=\"btn-group\">\\n                    <button type=\"button\" class=\"transparent-btn btn resetBtn\" data-method=\"reset\" title=\"Reset\">\\n                        <span class=\"docs-tooltip\" data-toggle=\"tooltip\" data-animation=\"false\" title=\"\" data-original-title=\"Reset\"><span class=\"glyphicon glyphicon-refresh\"></span> Reset</span>\\n                    </button>\\n                </div>\\n\\n\\n            </div>\\n            <button class=\"btns blue-btn getCroppedImage\" style=\"display: inline\">Upload</button>\\n            <button class=\"btns blue-btn goToStep1\" style=\"display: inline\">Back</button>\\n            <button class=\"btns blue-btn closeDlg\" style=\"display: inline\">Cancel</button>\\n        </div>\\n\\n        <!--{{#if isStep 3}}-->\\n        <div class=\"step3\">\\n            <div id=\"finalImageArea\">\\n                <img style=\"display: none;\" class=\"img-responsive\" id=\"finalImage\">\\n            </div>\\n            <!--{{/if}}-->\\n            <button class=\"btns blue-btn closeDlg\" style=\"display: inline\">Close</button>\\n        </div>\\n    ')) ];\n}));\n","bodyAttrs":{}}