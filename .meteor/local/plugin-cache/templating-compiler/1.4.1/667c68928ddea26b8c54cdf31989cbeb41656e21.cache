{"head":"","body":"","js":"\nTemplate.__checkName(\"loginFormSignUpView\");\nTemplate[\"loginFormSignUpView\"] = new Template(\"Template.loginFormSignUpView\", (function() {\n  var view = this;\n  return [ HTML.Raw('<div class=\"refund-div\"><h2>Sign Up</h2></div>\\n\\n    '), HTML.DIV({\n    class: \"profile-text userSignup-div\"\n  }, \"\\n\\n        \", Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"onPage\"));\n  }, function() {\n    return [ \"\\n            \", Blaze._TemplateWith(function() {\n      return {\n        buttonFor: Spacebars.call(\"signup\"),\n        usedInDlg: Spacebars.call(\"signup\")\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"socialLoginButtons\"));\n    }), HTML.Raw('\\n            <div class=\"seperator\" style=\"margin: 0 0 30px 0px;\"><span></span></div>\\n        ') ];\n  }), HTML.Raw(\"\\n\\n        <h5>Enter your details below</h5>\\n\\n        \"), HTML.FORM({\n    class: \"signin-form\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"form-border\"\n  }, \"\\n\\n                \", HTML.DIV({\n    class: function() {\n      return [ \"styled-input \", Spacebars.mustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"fullName\")) ];\n    }\n  }, \"\\n                    \", HTML.INPUT({\n    autocomplete: \"name\",\n    class: \"login-input-fullName\",\n    type: \"text\",\n    name: \"name\",\n    required: \"\",\n    for: function() {\n      return [ \"email-\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    },\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"credentials\"), \"fullName\"));\n    }\n  }), HTML.Raw(\"<br>\\n                    \"), HTML.LABEL({\n    for: function() {\n      return [ \"email-\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }, \"FULL NAME\"), HTML.Raw(\"\\n                    <span></span>\\n                  \"), Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"fullName\"));\n  }, function() {\n    return [ \"\\n                      \", HTML.SPAN({\n      class: \"help-block\"\n    }, \"\\n                        \", Blaze.View(\"lookup:messages.errors.fullName\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"fullName\"));\n    }), \"\\n                      \"), \"\\n                  \" ];\n  }), \"\\n                \"), \"\\n\\n                \", HTML.DIV({\n    class: function() {\n      return [ \"styled-input \", Spacebars.mustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"email\")) ];\n    }\n  }, \"\\n                    \", HTML.INPUT({\n    autocomplete: \"email\",\n    class: \" login-input-email\",\n    type: \"email\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"credentials\"), \"email\"));\n    },\n    name: \"email\",\n    required: \"\",\n    for: function() {\n      return [ \"email-\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }), \"\\n                    \", HTML.LABEL({\n    for: function() {\n      return [ \"email-\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }, \"EMAIL ID\"), HTML.Raw(\"\\n                    <span></span>\\n                  \"), Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"email\"));\n  }, function() {\n    return [ \"\\n                      \", HTML.SPAN({\n      class: \"help-block\"\n    }, \"\\n                        \", Blaze.View(\"lookup:messages.errors.email\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"email\"));\n    }), \"\\n                      \"), \"\\n                  \" ];\n  }), \"\\n                \"), \"\\n\\n                \", HTML.DIV({\n    class: function() {\n      return [ \"styled-input \", Spacebars.mustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password\")) ];\n    }\n  }, \"\\n                    \", HTML.INPUT({\n    autocomplete: \"new-password\",\n    class: \"login-input-password\",\n    type: \"password\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"credentials\"), \"password\"));\n    },\n    name: \"password\",\n    required: \"\",\n    for: function() {\n      return [ \"password-\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }), \"\\n                    \", HTML.LABEL({\n    for: function() {\n      return [ \"password-\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }, \"PASSWORD\"), HTML.Raw(\"\\n                    <span></span>\\n                  \"), Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password\"));\n  }, function() {\n    return [ \"\\n                      \", HTML.SPAN({\n      class: \"help-block\"\n    }, \"\\n                        \", Blaze.Each(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"password\"));\n    }, function() {\n      return [ \"\\n                            \", HTML.P(Blaze.View(\"lookup:reason\", function() {\n        return Spacebars.mustache(view.lookup(\"reason\"));\n      })), \"\\n                        \" ];\n    }), \"\\n                      \"), \"\\n                  \" ];\n  }), \"\\n                \"), \"\\n\\n                \", HTML.DIV({\n    class: function() {\n      return [ \"styled-input \", Spacebars.mustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"mobile\")) ];\n    }\n  }, \"\\n                    \", HTML.INPUT({\n    autocomplete: \"tel\",\n    class: \"login-input-mobile SignupFormMobileField\",\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"credentials\"), \"mobile\"));\n    },\n    name: \"mobile\",\n    for: function() {\n      return [ \"mobile-\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }), \"\\n                    \", HTML.LABEL({\n    for: function() {\n      return [ \"mobile-\", Spacebars.mustache(view.lookup(\"uniqueId\")) ];\n    }\n  }, \"MOBILE\"), HTML.Raw(\"\\n                    <span></span>\\n                  \"), Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"hasError\"), Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"mobile\"));\n  }, function() {\n    return [ \"\\n                      \", HTML.SPAN({\n      class: \"help-block\",\n      style: \"background: #f9f9f9 !important;height: 36px;border-top: 1px solid rgb(68, 68, 68);\"\n    }, \"\\n                        \", Blaze.View(\"lookup:messages.errors.mobile\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"messages\"), \"errors\", \"mobile\"));\n    }), \"\\n                      \"), \"\\n                  \" ];\n  }), \"\\n                \"), \"\\n            \"), \"\\n            \", Blaze._TemplateWith(function() {\n    return {\n      messages: Spacebars.call(view.lookup(\"messages\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"loginFormMessages\"));\n  }), \"\\n            \", HTML.DIV({\n    class: \"signup-btn\"\n  }, \"\\n\", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isLoading\"));\n  }, function() {\n    return HTML.Raw('\\n        <button class=\"transparent-btn btns\">Loading...</button>\\n');\n  }, function() {\n    return HTML.Raw('\\n                <button class=\"blue-btn btns\" type=\"Submit\" data-event-category=\"accounts\" data-event-action=\"register\">SIGN UP</button>\\n');\n  }), \"\\n                \", Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"onPage\"));\n  }, function() {\n    return HTML.Raw('\\n                    <p>Already have an account? <a href=\"javascript:;\"><span style=\"color:#0c67a6;\" data-event-category=\"accounts\" data-event-action=\"signIn\">Sign In</span></a></p>\\n                ');\n  }), \"\\n\\n            \"), \"\\n\\n\\n        \"), \"\\n\\n    \") ];\n}));\n\nTemplate.__checkName(\"loginFormSignUpViewLandlord\");\nTemplate[\"loginFormSignUpViewLandlord\"] = new Template(\"Template.loginFormSignUpViewLandlord\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<!--landLordSignup-->\\n    \\n    \\n    <!--Put your signup code here.-->\\n    \\n    \\n    \\n        \"), HTML.DIV({\n    class: \"landlordSignup-div signup-div\"\n  }, HTML.Raw('\\n    \\n     <div class=\"refund-div\"><h2>Landlord Join Now</h2> </div>\\n      '), HTML.DIV({\n    class: \"profile-text\"\n  }, HTML.Raw('\\n      \\t<div class=\"row\">\\n      \\t\\t<div class=\"col-md-12 rd-details\">\\n      \\t\\t\\t<span>I am a</span>\\n      \\t\\t\\t<label class=\"account-type-label\" for=\"rd1\">\\n                <input class=\"account-type-radio\" name=\"accountType\" value=\"LANDLORD\" type=\"radio\" checked=\"\">\\n                Landlord\\n              </label>\\n              <label class=\"account-type-label\">\\n                <input class=\"account-type-radio\" name=\"accountType\" value=\"LANDLORD\" type=\"radio\">\\n                Agent\\n              </label>\\n              <label class=\"account-type-label\">\\n                <input class=\"account-type-radio\" name=\"accountType\" value=\"LANDLORD\" type=\"radio\">\\n                Building Manager\\n              </label>\\n      \\t\\t\\t<label class=\"account-type-label\">\\n                <input class=\"account-type-radio\" name=\"accountType\" value=\"LANDLORD\" type=\"radio\">\\n                Tenant\\n              </label>\\n      \\t\\t</div>\\n      \\t</div>\\n          \\n              \\n          '), HTML.FORM({\n    class: \"signin-form\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"form-border\"\n  }, HTML.Raw('\\n           <div class=\"row frm-group\">\\n            <div class=\"col-sm-6\">\\n            <div class=\"styled-input\">\\n              <input autocomplete=\"name\" type=\"text\" name=\"name\" class=\"login-input-fullName\" required=\"\"><br>\\n              <label>FULL NAME</label>\\n              <span></span>\\n              </div>\\n            </div>\\n              <div class=\"col-sm-6\">\\n              \\t<div class=\"styled-input\">\\n              <input autocomplete=\"email\" type=\"email\" name=\"email\" class=\"login-input-email\" required=\"\">\\n              <label>EMAIL ID</label>\\n              <span></span> \\n              </div>\\n            </div>\\n              \\n              <div class=\"col-sm-6\">\\n              \\t<div class=\"styled-input\">\\n              <input autocomplete=\"new-password\" type=\"password\" name=\"password\" class=\"login-input-password\" required=\"\">\\n              <label>PASSWORD</label>\\n              <span></span> </div>\\n              </div>\\n\\n              <div class=\"col-sm-6\">\\n              \\t<div class=\"styled-input\">\\n              <input autocomplete=\"tel\" type=\"number\" name=\"mobile\" class=\"login-input-mobile SignupFormMobileField\" required=\"\">\\n              <label>MOBILE</label>\\n              <span></span> \\n              </div>\\n            </div>\\n          </div>\\n\\n                '), Blaze._TemplateWith(function() {\n    return {\n      messages: Spacebars.call(view.lookup(\"messages\"))\n    };\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"loginFormMessages\"));\n  }), \"\\n\\n            \"), \"  \\n          \", HTML.DIV({\n    class: \"signup-btn\"\n  }, \"\\n          \\t\", HTML.DIV({\n    class: \"styled-input\"\n  }, \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isLoading\"));\n  }, function() {\n    return HTML.Raw('\\n                    <button class=\"transparent-btn btns\">Loading...</button>\\n                ');\n  }, function() {\n    return HTML.Raw('\\n                    <button class=\"blue-btn btns\" type=\"submit\">SIGN UP</button>\\n                ');\n  }), \"\\n          \"), \"\\n              \", Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"onPage\"));\n  }, function() {\n    return HTML.Raw('\\n                  <p style=\"padding-top:0;\">Already have an account? <a href=\"javascript:;\"><span style=\"color:#0c67a6;\" data-event-category=\"accounts\" data-event-action=\"signIn\">Sign In</span></a></p>\\n              ');\n  }), \"\\n           \"), \"\\n          \"), \"\\n           \\n      \"), \"\\n  \") ];\n}));\n","bodyAttrs":{}}