[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar EJSON = Package.ejson.EJSON;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package.modules.meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\n/* Package-scope variables */\nvar InjectData;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"staringatlights:inject-data\":{\"lib\":{\"namespace.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/staringatlights_inject-data/lib/namespace.js                            //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nmodule.export({\n  InjectData: function () {\n    return InjectData;\n  }\n});\nvar InjectData = {};\n\n// Replace meteorhacks:inject-data with our new API, this is for compatibility\n// with third party packages that still depend upon the meteorhacks version.\nif (Package['meteorhacks:inject-data']) {\n  Package['meteorhacks:inject-data'].InjectData = InjectData;\n}\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"utils.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/staringatlights_inject-data/lib/utils.js                                //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nvar EJSON;\nmodule.link(\"meteor/ejson\", {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 0);\nvar InjectData;\nmodule.link(\"./namespace\", {\n  InjectData: function (v) {\n    InjectData = v;\n  }\n}, 1);\n\n/**\n * Returns an encoded string that represents an object.\n * @param {object} ejson\n */\nInjectData.encode = InjectData._encode = function (ejson) {\n  var ejsonString = EJSON.stringify(ejson);\n  return encodeURIComponent(ejsonString);\n};\n/**\n * Decodes an encoded string into an object.\n * @param {string} encodedEjson\n */\n\n\nInjectData.decode = InjectData._decode = function (encodedEjson) {\n  var decodedEjsonString = decodeURIComponent(encodedEjson);\n  if (!decodedEjsonString) return null;\n  return EJSON.parse(decodedEjsonString);\n};\n//////////////////////////////////////////////////////////////////////////////////////\n\n},\"client.js\":function module(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////////////\n//                                                                                  //\n// packages/staringatlights_inject-data/lib/client.js                               //\n//                                                                                  //\n//////////////////////////////////////////////////////////////////////////////////////\n                                                                                    //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar InjectData;\nmodule.link(\"./namespace\", {\n  InjectData: function (v) {\n    InjectData = v;\n  }\n}, 1);\n// Automatically parse the inject-data payload on Meteor startup\n// Load it into memory so it can be fetched by InjectData.getData\nMeteor.startup(function () {\n  var dom = document.querySelectorAll('script[type=\"text/inject-data\"]', document);\n  var injectedDataString = dom && dom.length > 0 ? dom[0].innerHTML : '';\n  InjectData._data = InjectData._decode(injectedDataString) || {};\n});\n/**\n * Returns the data payload for the specified key.\n * @param {string} key\n * @param {function} callback\n */\n\nInjectData.getData = function (key, callback) {\n  Meteor.startup(function () {\n    callback(InjectData._data[key]);\n  });\n};\n//////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/staringatlights:inject-data/lib/namespace.js\");\nrequire(\"/node_modules/meteor/staringatlights:inject-data/lib/utils.js\");\nrequire(\"/node_modules/meteor/staringatlights:inject-data/lib/client.js\");\n\n/* Exports */\nPackage._define(\"staringatlights:inject-data\", exports, {\n  InjectData: InjectData\n});\n\n})();\n","servePath":"/packages/staringatlights_inject-data.js","sourceMap":{"version":3,"sources":["packages/staringatlights:inject-data/lib/namespace.js","packages/staringatlights:inject-data/lib/utils.js","packages/staringatlights:inject-data/lib/client.js"],"names":["module","export","InjectData","Package","EJSON","link","v","encode","_encode","ejson","ejsonString","stringify","encodeURIComponent","decode","_decode","encodedEjson","decodedEjsonString","decodeURIComponent","parse","Meteor","startup","dom","document","querySelectorAll","injectedDataString","length","innerHTML","_data","getData","key","callback"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,YAAU,EAAC,YAAU;AAAC,WAAOA,UAAP;AAAkB;AAAzC,CAAd;AACO,IAAMA,UAAU,GAAG,EAAnB;;AAEP;AACA;AACA,IAAIC,OAAO,CAAC,yBAAD,CAAX,EAAwC;AACvCA,SAAO,CAAC,yBAAD,CAAP,CAAmCD,UAAnC,GAAgDA,UAAhD;AACA,C;;;;;;;;;;;ACPD,IAAIE,KAAJ;AAAUJ,MAAM,CAACK,IAAP,CAAY,cAAZ,EAA2B;AAACD,OAAK,EAAC,UAASE,CAAT,EAAW;AAACF,SAAK,GAACE,CAAN;AAAQ;AAA3B,CAA3B,EAAwD,CAAxD;AAA2D,IAAIJ,UAAJ;AAAeF,MAAM,CAACK,IAAP,CAAY,aAAZ,EAA0B;AAACH,YAAU,EAAC,UAASI,CAAT,EAAW;AAACJ,cAAU,GAACI,CAAX;AAAa;AAArC,CAA1B,EAAiE,CAAjE;;AAGpF;AACA;AACA;AACA;AACAJ,UAAU,CAACK,MAAX,GAAoBL,UAAU,CAACM,OAAX,GAAqB,UAASC,KAAT,EAAgB;AACxD,MAAIC,WAAW,GAAGN,KAAK,CAACO,SAAN,CAAgBF,KAAhB,CAAlB;AACA,SAAOG,kBAAkB,CAACF,WAAD,CAAzB;AACA,CAHD;AAKA;AACA;AACA;AACA;;;AACAR,UAAU,CAACW,MAAX,GAAoBX,UAAU,CAACY,OAAX,GAAqB,UAASC,YAAT,EAAuB;AAC/D,MAAIC,kBAAkB,GAAGC,kBAAkB,CAACF,YAAD,CAA3C;AACA,MAAI,CAACC,kBAAL,EAAyB,OAAO,IAAP;AAEzB,SAAOZ,KAAK,CAACc,KAAN,CAAYF,kBAAZ,CAAP;AACA,CALD,C;;;;;;;;;;;AChBA,IAAIG,MAAJ;AAAWnB,MAAM,CAACK,IAAP,CAAY,eAAZ,EAA4B;AAACc,QAAM,EAAC,UAASb,CAAT,EAAW;AAACa,UAAM,GAACb,CAAP;AAAS;AAA7B,CAA5B,EAA2D,CAA3D;AAA8D,IAAIJ,UAAJ;AAAeF,MAAM,CAACK,IAAP,CAAY,aAAZ,EAA0B;AAACH,YAAU,EAAC,UAASI,CAAT,EAAW;AAACJ,cAAU,GAACI,CAAX;AAAa;AAArC,CAA1B,EAAiE,CAAjE;AAGxF;AACA;AACAa,MAAM,CAACC,OAAP,CAAe,YAAW;AACzB,MAAIC,GAAG,GAAGC,QAAQ,CAACC,gBAAT,CACT,iCADS,EAETD,QAFS,CAAV;AAIA,MAAIE,kBAAkB,GAAGH,GAAG,IAAIA,GAAG,CAACI,MAAJ,GAAa,CAApB,GAAwBJ,GAAG,CAAC,CAAD,CAAH,CAAOK,SAA/B,GAA2C,EAApE;AACAxB,YAAU,CAACyB,KAAX,GAAmBzB,UAAU,CAACY,OAAX,CAAmBU,kBAAnB,KAA0C,EAA7D;AACA,CAPD;AASA;AACA;AACA;AACA;AACA;;AACAtB,UAAU,CAAC0B,OAAX,GAAqB,UAASC,GAAT,EAAcC,QAAd,EAAwB;AAC5CX,QAAM,CAACC,OAAP,CAAe,YAAW;AACzBU,YAAQ,CAAC5B,UAAU,CAACyB,KAAX,CAAiBE,GAAjB,CAAD,CAAR;AACA,GAFD;AAGA,CAJD,C","file":"/packages/staringatlights_inject-data.js","sourcesContent":["/* global Package */\nexport const InjectData = {}\n\n// Replace meteorhacks:inject-data with our new API, this is for compatibility\n// with third party packages that still depend upon the meteorhacks version.\nif (Package['meteorhacks:inject-data']) {\n\tPackage['meteorhacks:inject-data'].InjectData = InjectData\n}\n","import { EJSON } from 'meteor/ejson'\nimport { InjectData } from './namespace'\n\n/**\n * Returns an encoded string that represents an object.\n * @param {object} ejson\n */\nInjectData.encode = InjectData._encode = function(ejson) {\n\tvar ejsonString = EJSON.stringify(ejson)\n\treturn encodeURIComponent(ejsonString)\n}\n\n/**\n * Decodes an encoded string into an object.\n * @param {string} encodedEjson\n */\nInjectData.decode = InjectData._decode = function(encodedEjson) {\n\tvar decodedEjsonString = decodeURIComponent(encodedEjson)\n\tif (!decodedEjsonString) return null\n\n\treturn EJSON.parse(decodedEjsonString)\n}\n","import { Meteor } from 'meteor/meteor'\nimport { InjectData } from './namespace'\n\n// Automatically parse the inject-data payload on Meteor startup\n// Load it into memory so it can be fetched by InjectData.getData\nMeteor.startup(function() {\n\tvar dom = document.querySelectorAll(\n\t\t'script[type=\"text/inject-data\"]',\n\t\tdocument\n\t)\n\tvar injectedDataString = dom && dom.length > 0 ? dom[0].innerHTML : ''\n\tInjectData._data = InjectData._decode(injectedDataString) || {}\n})\n\n/**\n * Returns the data payload for the specified key.\n * @param {string} key\n * @param {function} callback\n */\nInjectData.getData = function(key, callback) {\n\tMeteor.startup(function() {\n\t\tcallback(InjectData._data[key])\n\t})\n}\n"]}}]