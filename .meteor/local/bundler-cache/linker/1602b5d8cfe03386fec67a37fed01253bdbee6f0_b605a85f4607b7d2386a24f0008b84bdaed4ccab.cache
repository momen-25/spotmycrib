[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar _ = Package.underscore._;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar ReactiveDict = Package['reactive-dict'].ReactiveDict;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar DDP = Package['ddp-client'].DDP;\nvar DDPServer = Package['ddp-server'].DDPServer;\nvar EJSON = Package.ejson.EJSON;\nvar meteorInstall = Package.modules.meteorInstall;\nvar FastRender = Package['staringatlights:fast-render'].FastRender;\nvar Picker = Package['meteorhacks:picker'].Picker;\nvar InjectData = Package['staringatlights:inject-data'].InjectData;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar SharedRouter, options, pathDef, SharedGroup, group, SharedRoute, Router, Group, Route, result, SsrContext, FlowRouter;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"jns:flow-router-ssr\":{\"lib\":{\"router.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jns_flow-router-ssr/lib/router.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Qs;\nmodule.link(\"qs\", {\n  default(v) {\n    Qs = v;\n  }\n\n}, 0);\nlet PathToRegexp;\nmodule.link(\"path-to-regexp\", {\n  default(v) {\n    PathToRegexp = v;\n  }\n\n}, 1);\nSharedRouter = class {\n  constructor() {\n    this._routes = [];\n    this._routesMap = {}; // holds onRoute callbacks\n\n    this._onRouteCallbacks = [];\n    this.env = {};\n    this.env.trailingSlash = new Meteor.EnvironmentVariable();\n  }\n\n  route(pathDef, options, group) {\n    if (!/^\\/.*/.test(pathDef)) {\n      const message = \"route's path must start with '/'\";\n      throw new Error(message);\n    }\n\n    options = options || {};\n    const currentRoute = new Route(this, pathDef, options, group);\n\n    currentRoute._init();\n\n    this._routes.push(currentRoute);\n\n    if (options.name) {\n      this._routesMap[options.name] = currentRoute;\n    }\n\n    this._triggerRouteRegister(currentRoute);\n\n    return currentRoute;\n  } // XXX this function needs to be cleaned up if possible by removing `if (this.isServer)`\n  // and `if (this.isClient)` if possible\n\n\n  path(pathDef) {\n    let fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let queryParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (this._routesMap[pathDef]) {\n      pathDef = this._routesMap[pathDef].path;\n    }\n\n    let newPath = ''; // Prefix the path with the router global prefix\n\n    if (this._basePath) {\n      newPath += \"/\".concat(this._basePath, \"/\");\n    } // Encode query params\n\n\n    queryParams = this._encodeValues(queryParams);\n    const toPath = PathToRegexp.compile(pathDef);\n    newPath += toPath(fields); // If we have one optional parameter in path definition e.g.\n    // /:category?\n    // and the parameter isn't present, path will be an empty string.\n    // We have this check as a value for path is required by e.g. FlowRouter.go()\n\n    if (!newPath) {\n      newPath = '/';\n    } // Replace multiple slashes with single slash\n\n\n    newPath = newPath.replace(/\\/\\/+/g, '/'); // remove trailing slash\n    // but keep the root slash if it's the only one\n\n    newPath = newPath.match(/^\\/{1}$/) ? newPath : newPath.replace(/\\/$/, ''); // explictly asked to add a trailing slash\n\n    if (this.env.trailingSlash.get() && _.last(newPath) !== '/') {\n      newPath += '/';\n    }\n\n    const strQueryParams = Qs.stringify(queryParams || {});\n\n    if (strQueryParams) {\n      newPath += \"?\".concat(strQueryParams);\n    }\n\n    return newPath;\n  }\n\n  go() {// client only\n  }\n\n  watchPathChange() {// client only\n  }\n\n  group(options) {\n    return new Group(this, options);\n  }\n\n  url() {\n    // We need to remove the leading base path, or \"/\", as it will be inserted\n    // automatically by `Meteor.absoluteUrl` as documented in:\n    // http://docs.meteor.com/#/full/meteor_absoluteurl\n    const completePath = this.path(...arguments);\n    const basePath = this._basePath || '/';\n    const pathWithoutBase = completePath.replace(RegExp(\"^\".concat(basePath)), '');\n    return Meteor.absoluteUrl(pathWithoutBase);\n  } // For client:\n  // .current is not reactive on the client\n  // This is by design. use .getParam() instead\n  // If you really need to watch the path change, use .watchPathChange()\n\n\n  current() {\n    // We can't trust outside, that's why we clone this\n    // Anyway, we can't clone the whole object since it has non-jsonable values\n    // That's why we clone what's really needed.\n    const context = _.clone(this._getCurrentRouteContext());\n\n    context.queryParams = EJSON.clone(context.queryParams);\n    context.params = EJSON.clone(context.params);\n    return context;\n  }\n\n  onRouteRegister(cb) {\n    this._onRouteCallbacks.push(cb);\n  }\n\n  _encodeValues(obj) {\n    const newObj = {};\n    Object.keys(obj).forEach(key => {\n      const value = obj[key];\n      newObj[key] = typeof value !== 'undefined' ? encodeURIComponent(value) : value;\n    });\n    return newObj;\n  }\n\n  _triggerRouteRegister(currentRoute) {\n    // We should only need to send a safe set of fields on the route\n    // object.\n    // This is not to hide what's inside the route object, but to show\n    // these are the public APIs\n    const routePublicApi = _.pick(currentRoute, 'name', 'pathDef', 'path');\n\n    const omittingOptionFields = ['triggersEnter', 'triggersExit', 'name', 'action'];\n    routePublicApi.options = _.omit(currentRoute.options, omittingOptionFields);\n\n    this._onRouteCallbacks.forEach(cb => {\n      cb(routePublicApi);\n    });\n  }\n\n  _getCurrentRouteContext() {\n    throw new Error('Not implemented');\n  }\n\n  _init() {\n    throw new Error('Not implemented');\n  }\n\n  withTrailingSlash(fn) {\n    return this.env.trailingSlash.withValue(true, fn);\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"group.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jns_flow-router-ssr/lib/group.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSharedGroup = class {\n  constructor(router, options, parent) {\n    options = options || {};\n\n    if (options.prefix && !/^\\/.*/.test(options.prefix)) {\n      const message = \"group's prefix must start with '/'\";\n      throw new Error(message);\n    }\n\n    this.prefix = options.prefix || '';\n    this.options = options;\n    this._router = router;\n    this.parent = parent;\n  }\n\n  route(pathDef, options, group) {\n    options = options || {};\n\n    if (!/^\\/.*/.test(pathDef)) {\n      const message = \"route's path must start with '/'\";\n      throw new Error(message);\n    }\n\n    pathDef = this.prefix + pathDef;\n    group = group || this;\n    return this._router.route(pathDef, options, group);\n  }\n\n  group(options) {\n    return new Group(this._router, options, this);\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"route.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jns_flow-router-ssr/lib/route.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nSharedRoute = class {\n  constructor(router, pathDef, options, group) {\n    options = options || {};\n    this.options = options;\n    this.name = options.name;\n    this.pathDef = pathDef; // Route.path is deprecated and will be removed in 3.0\n\n    this.path = this.pathDef;\n    this._router = router;\n    this._action = options.action || Function.prototype;\n    this.group = group;\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_init.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jns_flow-router-ssr/lib/_init.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// Export Router Instance\nFlowRouter = new Router();\nFlowRouter.Router = Router;\nFlowRouter.Route = Route;\nPackage['kadira:flow-router-ssr'] = {\n  FlowRouter\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"router.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jns_flow-router-ssr/server/router.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nRouter = class extends SharedRouter {\n  constructor() {\n    super();\n    this.subscriptions = Function.prototype;\n    this.ssrContext = new Meteor.EnvironmentVariable();\n    this.inSubscription = new Meteor.EnvironmentVariable();\n    this.routeContext = new Meteor.EnvironmentVariable(); // FlowRouter can defer the script loading after rendered the body\n    // It's turned off by default\n\n    this.deferScriptLoading = false; // FlowRouter can cache it's pages to improve SSR performance.\n    // It's turned off by default\n\n    this.pageCacheTimeout = 0; // holds onRoute callbacks\n\n    this._onRouteCallbacks = [];\n    this.triggers = {\n      enter: function () {// client only\n      },\n      exit: function () {// client only\n      }\n    };\n  }\n\n  getParam(key) {\n    const current = this.current();\n\n    if (current) {\n      return current.params[key];\n    }\n  }\n\n  getQueryParam(key) {\n    const current = this.current();\n\n    if (current) {\n      return current.queryParams[key];\n    }\n  }\n\n  getRouteName() {\n    const current = this.current();\n\n    if (current) {\n      return current.route.name;\n    }\n  }\n\n  setDeferScriptLoading(defer) {\n    this.deferScriptLoading = defer;\n  }\n\n  setPageCacheTimeout(timeout) {\n    this.pageCacheTimeout = timeout;\n  }\n\n  _getCurrentRouteContext() {\n    return this.routeContext.get();\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"group.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jns_flow-router-ssr/server/group.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nGroup = class extends SharedGroup {};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"route.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jns_flow-router-ssr/server/route.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nconst Url = require('url');\n\nconst Cheerio = require('cheerio');\n\nconst logger = console;\nlet CACHE_MODE = 'localfile'; //s3, localfile\n\nlet basePath = '/Users/njanjanam/localcache/';\nif (Meteor.isProduction) basePath = '/mnt/flatbid_cache/';\nconsole.log('Base Path is: ' + basePath); ///////////// CUSTOM JNS CODE\n\nfunction slugify(text) {\n  if (!text) return '';\n  const a = 'àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/,:;';\n  const b = 'aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------';\n  const p = new RegExp(a.split('').join('|'), 'g');\n  return text.toString().toLowerCase().replace(/\\s+/g, '') // Replace spaces with \"\"\n  .replace(p, c => b.charAt(a.indexOf(c))) // Replace special chars\n  .replace(/&/g, '-and-') // Replace & with ''\n  .replace(/[^\\w\\-]+/g, '') // Remove all non-word chars\n  .replace(/\\-\\-+/g, '-') // Replace multiple - with single ''\n  .replace(/^-+/, '') // Trim - from start of text\n  .replace(/-+$/, ''); // Trim - from end of text\n}\n\nif (CACHE_MODE == 's3') {\n  var AWS = require('aws-sdk');\n\n  var config = new AWS.Config({\n    accessKeyId: Meteor.settings['galaxy.meteor.com'].env.accessKeyId,\n    secretAccessKey: Meteor.settings['galaxy.meteor.com'].env.secretAccessKey,\n    region: Meteor.settings['galaxy.meteor.com'].env.region\n  });\n  var s3 = new AWS.S3(config);\n  var myBucket = 'flatbid-cache';\n}\n\nfunction emptyBucket(pathName, callback) {\n  var params = {\n    Bucket: myBucket,\n    Prefix: pathName\n  };\n  s3.listObjects(params, function (err, data) {\n    if (err) return callback(err);\n    if (data.Contents.length == 0) return callback();\n    params = {\n      Bucket: myBucket\n    };\n    params.Delete = {\n      Objects: []\n    };\n    data.Contents.forEach(function (content) {\n      params.Delete.Objects.push({\n        Key: content.Key\n      });\n    });\n    var moreThan1k = false;\n\n    if (params.Delete.Objects.length > 1000) {\n      params.Delete.Objects = params.Delete.Objects.slice(0, 1000);\n      moreThan1k = true;\n    }\n\n    s3.deleteObjects(params, function (err, data) {\n      if (err) return callback(err);\n      if (moreThan1k) emptyBucket(pathName, callback);else callback();\n    });\n  });\n}\n\nMeteor.methods({\n  createCache: function (html, cacheKey) {\n    console.log('in createCache method');\n    this.unblock(); // if(Meteor.isDevelopment)return;\n\n    var catchPath = '';\n    if (cacheKey.indexOf('jns-b-') != -1) catchPath += 'BrowsePages/';\n    if (cacheKey.indexOf('jns-rent-') != -1) catchPath += 'LDPages/';\n    if (!catchPath) catchPath += 'All/';\n    if (Meteor.isDevelopment) catchPath = 'dev/' + catchPath;\n    var filename = catchPath + cacheKey + '.html'; ////////////////// AWS S3\n\n    if (CACHE_MODE == 's3') {\n      var params = {\n        Bucket: myBucket,\n        Key: filename,\n        ContentLength: html.size,\n        Body: Date.now() + '{jns}' + html\n      };\n      s3.putObject(params, function (err, data) {\n        console.log('Cache created for: ' + filename + \" Length: \" + html.length); // console.log(data)\n        // console.log(err)\n      });\n    } ////////////////// LOCAL FILE\n\n\n    if (CACHE_MODE == 'localfile') {\n      const fs = require('fs');\n\n      var temPath = basePath + filename;\n      console.log('Catch create in: ' + temPath);\n      fs.writeFileSync(temPath, Date.now() + '{jns}' + html, 'utf8'); // var Minimize = require('minimize')\n      //     , minimize = new Minimize();\n      // minimize.parse(html, function (error, data) {\n      //     console.log('Minimised');\n      //     // console.log(data);\n      //     fs.writeFileSync(temPath , data, 'utf8');\n      // });\n    }\n\n    return; // fs.writeFileSync(temPath , data, 'utf8');\n  },\n  clearCache: function (key) {// console.log('in clearCache method');\n  },\n  clearAllCache: function (key) {\n    console.log('in clearAllCache method');\n    var paths = ['All/', 'BrowsePages/', 'LDPages/'];\n    var key;\n\n    for (var i = 0; i < paths.length; i++) {\n      key = Meteor.isDevelopment ? 'dev/' + paths[i] : paths[i];\n      emptyBucket(key, function (err) {\n        console.log(err);\n      });\n    }\n  }\n}); ///////////// CUSTOM JNS CODE END\n\nRoute = class extends SharedRoute {\n  constructor(router, pathDef, options, group) {\n    super(router, pathDef, options, group);\n    this._cache = {};\n  }\n\n  _init() {\n    const cookieParser = require('cookie-parser');\n\n    Picker.middleware(cookieParser()); // process null subscriptions with FR support\n\n    Picker.middleware(FastRender.handleOnAllRoutes);\n    const route = FlowRouter.basePath + this.pathDef;\n    Picker.route(route, this._handleRoute.bind(this));\n  }\n\n  _handleRoute(params, req, res, next) {\n    if (!this._isHtmlPage(req.url)) {\n      return next();\n    } // This userId will be useful in the at the later on when\n    // it's time to cache the page.\n    // Normally, we can't access `Meteor.userId()` outside of a method\n    // But here, we could do it because we call `FastRender.handleOnAllRoutes`.\n    // It creates a FastRender context and assign it for the current fiber.\n\n\n    try {\n      req.__userId = Meteor.userId();\n    } catch (e) {\n      req.__userId = this.userId;\n    }\n\n    const cachedPage = this._getCachedPage(req.url, req.__userId);\n\n    if (cachedPage) {\n      return this._processFromCache(cachedPage, req, res, next);\n    } // Here we need to processFromSsr,\n    // but also we need to process with FastRender as well.\n    // That's why we bind processFromSsr and pass args as below.\n    // It does not get any arguments from FastRender.\n    // FastRender just trigger the following handler and do it's job\n\n\n    const processFromSsr = this._processFromSsr.bind(this, params, req, res);\n\n    FastRender.handleRoute(processFromSsr, params, req, res, next);\n  }\n\n  _processFromCache(pageInfo, req, res, next) {\n    req.dynamicHead = req.dynamicHead || '';\n    req.dynamicBody = req.dynamicBody || '';\n    req.dynamicHead += pageInfo.head;\n    req.dynamicBody += pageInfo.html; // InjectData.pushData(res, 'fast-render-data', pageInfo.frData);\n    //   console.log('frData length: '+pageInfo.frData.length)\n\n    next(); // console.log('_processFromCache end')\n  }\n\n  _processFromSsr(params, req, res) {\n    // console.log('_processFromSsr')\n    const self = this;\n    const ssrContext = new SsrContext();\n\n    const routeContext = self._buildContext(req, params);\n\n    self._router.ssrContext.withValue(ssrContext, () => {\n      self._router.routeContext.withValue(routeContext, () => {\n        try {\n          // get the data for null subscriptions and add them to the\n          // ssrContext\n          const frData = ''; //InjectData.getData(res, 'fast-render-data');\n\n          if (frData) {\n            ssrContext.addData(frData.collectionData);\n          }\n\n          if (self.options.action) {\n            self.options.action(routeContext.params, routeContext.queryParams);\n          }\n        } catch (ex) {\n          logger.error(\"Error when doing SSR. path:\".concat(req.url, \": \").concat(ex.message));\n          logger.error(ex.stack);\n        }\n      });\n\n      self._injectHtml(req, res, ssrContext);\n\n      console.log('_processFromSsr complete');\n    });\n  }\n\n  _injectHtml(req, res, ssrContext) {\n    const html = ssrContext.getHtml();\n    const head = ssrContext.getHead();\n    req.dynamicHead = req.dynamicHead || '';\n    req.dynamicBody = req.dynamicBody || '';\n    req.dynamicHead += head;\n    req.dynamicBody += html; // cache the page if mentioned a timeout\n\n    if (this._router.pageCacheTimeout) {\n      const pageInfo = {\n        // frData: InjectData.getData(res, 'fast-render-data'),\n        head: head,\n        html: html\n      };\n\n      this._cachePage(req.url, req.__userId, pageInfo, this._router.pageCacheTimeout);\n    }\n  }\n\n  _moveScriptsToBottom(html) {\n    const $ = Cheerio.load(html, {\n      decodeEntities: false\n    });\n    const heads = $('head script');\n    $('body').append(heads); // Remove empty lines caused by removing scripts\n\n    $('head').html($('head').html().replace(/(^[ \\t]*\\n)/gm, ''));\n    return $.html();\n  }\n\n  _buildContext(req, _params) {\n    const queryParams = _params.query; // We need to remove `.query` since it's not part of our params API\n    // But we only need to remove it in our copy.\n    // We should not trigger any side effects\n\n    const params = _.clone(_params);\n\n    delete params.query;\n    const context = {\n      route: this,\n      path: req.url,\n      params,\n      queryParams,\n      // We might change this later on. That's why it's starting with _\n      _serverRequest: req\n    };\n    return context;\n  }\n\n  _isHtmlPage(url) {\n    const pathname = Url.parse(url).pathname;\n    const ext = pathname.split('.').slice(1).join('.'); // if there is no extention, yes that's a html page\n\n    if (!ext) {\n      return true;\n    } // if this is htm or html, yes that's a html page\n\n\n    if (/^htm/.test(ext)) {\n      return true;\n    } // if not we assume this is not as a html page\n    // this doesn't do any harm. But no SSR\n\n\n    return false;\n  }\n\n  _getCachedPage(url, userId) {\n    const cacheInfo = {\n      url,\n      userId\n    }; //////Below is the logic for this extension's default in-build caching system. Enabling it to reduce the number of calls to AWS S3 for most commenly crawled pages by SearchEngines\n\n    var cacheKey = this._getCacheKey(cacheInfo); // console.log('local Cache - cacheKey: '+cacheKey)\n\n\n    const info = this._cache[cacheKey]; // if (info) {\n    //   console.log('Fetching from the memory Cache: '+cacheKey)\n    //   return info.data;\n    // }\n    ///End of inbuild code\n    /////////////JNS CUSTOM CODE START - This will run if the above code didn't find the cache.\n    // var start = new Date().getTime();\n\n    cacheKey = this._getCacheKeyJNS({\n      url,\n      userId\n    });\n    var catchPath = '';\n    if (cacheKey.indexOf('jns-b-') != -1) catchPath += 'BrowsePages/';\n    if (cacheKey.indexOf('jns-rent-') != -1) catchPath += 'LDPages/';\n    if (!catchPath) catchPath += 'All/';\n    if (Meteor.isDevelopment) catchPath = 'dev/' + catchPath;\n    let tmp = false;\n\n    if (CACHE_MODE == 's3') {\n      var url = 'https://s3-eu-west-1.amazonaws.com/flatbid-cache/' + catchPath + cacheKey + '.html';\n\n      try {\n        result = Meteor.http.get(url);\n\n        if (result.statusCode == 200) {\n          tmp = result.content.split('{jns}');\n        }\n      } catch (e) {\n        console.log('s3 Cache fetch failed: ' + cacheKey);\n      }\n    } else if (CACHE_MODE == 'localfile') {\n      const fs = require('fs');\n\n      var temPath = basePath + catchPath + cacheKey + '.html';\n\n      try {\n        tmp = fs.readFileSync(temPath, 'utf8');\n        tmp = tmp.split('{jns}'); //fs.readFileSync('/mnt/flatbid_cache/BrowsePages/guest-jns-b-apartment-for-rent-in-rathbane-limerick-irelandluxurysort1.html' ,'utf8');\n      } catch (e) {\n        console.log('localfile Cache fetch failed: ' + temPath);\n      }\n    }\n\n    try {\n      // if(Meteor.isDevelopment)throw new Meteor.Error('bad', 'stuff happened');\n      if (tmp) {\n        var ftime = parseInt(tmp[0]);\n        var minHTML = tmp[1];\n        var tnow = Date.now();\n        var diff = tnow - ftime;\n        var cacheExpiryTimeinMS = 172800000; //48 * 60 * 60 *1000 //48 hours Default\n\n        if (cacheKey.indexOf('home') != -1) cacheExpiryTimeinMS = 1800000; //60 * 60 *1000 //60 min for home page\n\n        if (cacheKey.indexOf('jns-b-') != -1) cacheExpiryTimeinMS = 1800000; //30 * 60 *1000 //30 min for browse pages\n\n        if (cacheKey.indexOf('jns-rent-') != -1) cacheExpiryTimeinMS = 2280000; // 38 * 60 *1000 //1.5 days for rent pages\n\n        if (cacheKey.indexOf('jns-letting-') != -1) cacheExpiryTimeinMS = 2880000; //48 * 60 *1000 //2 days for letting pages\n        // cacheExpiryTimeinMS = 1 *1000 //1 sec\n\n        console.log('tnow: ' + tnow + ' ftime: ' + ftime + ' diff: ' + diff + ' tmp[0]: ' + tmp[0] + ' cacheExpiryTimeinMS:' + cacheExpiryTimeinMS);\n\n        if (diff < cacheExpiryTimeinMS) {\n          //Cachce has not expired yet.\n          console.log('Successfully fetching from cache: ' + cacheKey); // this.response.writeHead(200, {'Content-Type': 'text/html'});\n          // this.response.end(minHTML);\n\n          return {\n            head: tmp[1],\n            html: tmp[2]\n          };\n        } else {\n          console.log('Cache expired: ' + diff + ' key: ' + cacheKey); // Meteor.call('clearCache',cacheKey);\n        }\n      } else {\n        console.log('No cache: ' + cacheKey);\n      }\n    } catch (e) {\n      console.log('Cache not found: ' + cacheKey);\n    } /////////////JNS CUSTOM CODE END\n\n  }\n\n  _cachePage(url, userId, data, timeout) {\n    var cacheKey = this._getCacheKeyJNS({\n      url,\n      userId\n    });\n\n    Meteor.call('createCache', \"\".concat(data.head, \"{jns}\").concat(data.html), cacheKey); ///Below is the logic for this extension's default in-build caching system. Enabling it to reduce the number of calls to AWS S3 for most commenly crawled pages by SearchEngines\n\n    const cacheInfo = {\n      url,\n      userId\n    };\n    cacheKey = this._getCacheKey(cacheInfo);\n    const existingInfo = this._cache[cacheKey];\n\n    if (existingInfo) {\n      // Sometimes, it's possible get this called multiple times\n      // due to race conditions. So, in that case, simply discard\n      // caching this page.\n      return;\n    }\n\n    const info = {\n      data: data,\n      timeoutHandle: setTimeout(() => {\n        delete this._cache[cacheKey];\n      }, timeout)\n    };\n    console.log('Local Cache created for: ' + cacheKey);\n    this._cache[cacheKey] = info;\n  }\n\n  _getCacheKeyJNS(_ref) {\n    let {\n      userId = '',\n      url\n    } = _ref;\n    var slugged = slugify(url);\n    return (userId ? userId : 'guest') + '-jns-' + (slugged ? slugged : 'home');\n  }\n\n  _getCacheKey(_ref2) {\n    let {\n      userId = '',\n      url\n    } = _ref2;\n    return \"\".concat(userId, \"::\").concat(url);\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ssr_context.js\":function module(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jns_flow-router-ssr/server/ssr_context.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nconst deepMerge = require('deepmerge');\n\nSsrContext = class {\n  constructor() {\n    this._html = '';\n    this._head = '';\n    this._collections = {};\n  }\n\n  getCollection(collName) {\n    let collection = this._collections[collName];\n\n    if (!collection) {\n      const minimongo = Package.minimongo;\n      collection = this._collections[collName] = new minimongo.LocalCollection();\n    }\n\n    return collection;\n  }\n\n  setHtml(html) {\n    this._html = html;\n  }\n\n  getHtml() {\n    return this._html;\n  }\n\n  addToHead(headHtml) {\n    this._head += \"\\n\".concat(headHtml);\n  }\n\n  getHead() {\n    return this._head;\n  }\n\n  addSubscription(name, params) {\n    const fastRenderContext = FastRender.frContext.get();\n\n    if (!fastRenderContext) {\n      throw new Error(\"Cannot add a subscription: \".concat(name, \" without FastRender Context\"));\n    }\n\n    const args = [name].concat(params);\n    const data = fastRenderContext.subscribe(...args);\n    this.addData(data);\n  }\n\n  addData(data) {\n    _.each(data, (collDataCollection, collectionName) => {\n      const collection = this.getCollection(collectionName);\n      collDataCollection.forEach(collData => {\n        collData.forEach(item => {\n          const existingDoc = collection.findOne(item._id);\n\n          if (existingDoc) {\n            const newDoc = deepMerge(existingDoc, item);\n            delete newDoc._id;\n            collection.update(item._id, newDoc);\n          } else {\n            collection.insert(item);\n          }\n        });\n      });\n    });\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_init.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jns_flow-router-ssr/server/_init.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// This is a magic configuration in Meteor which allows some apps to be\n// run with a prefix.\n// This is very important when especially app running in something like\n// sandstrom.io\n// Now it's supported by SSR using this\nFlowRouter.basePath = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"plugins\":{\"ssr_data.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/jns_flow-router-ssr/server/plugins/ssr_data.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _this = this;\n\nconst originalSubscribe = Meteor.subscribe;\n\nMeteor.subscribe = function (pubName) {\n  const params = Array.prototype.slice.call(arguments, 1);\n  const ssrContext = FlowRouter.ssrContext.get();\n\n  if (ssrContext) {\n    FlowRouter.inSubscription.withValue(true, () => {\n      ssrContext.addSubscription(pubName, params);\n    });\n  }\n\n  if (originalSubscribe) {\n    originalSubscribe.apply(this, arguments);\n  }\n\n  return {\n    ready: () => true\n  };\n};\n\nconst Mongo = Package.mongo.Mongo;\nconst originalFind = Mongo.Collection.prototype.find;\n\nMongo.Collection.prototype.find = function (selector, options) {\n  selector = selector || {};\n  const ssrContext = FlowRouter.ssrContext.get();\n\n  if (ssrContext && !FlowRouter.inSubscription.get()) {\n    const collName = this._name;\n    const collection = ssrContext.getCollection(collName);\n    const cursor = collection.find(selector, options);\n    return cursor;\n  }\n\n  return originalFind.call(this, selector, options);\n}; // We must implement this. Otherwise, it'll call the origin prototype's\n// find method\n\n\nMongo.Collection.prototype.findOne = function (selector, options) {\n  options = options || {};\n  options.limit = 1;\n  return this.find(selector, options).fetch()[0];\n};\n\nconst originalAutorun = Tracker.autorun;\n\nTracker.autorun = fn => {\n  // if autorun is in the ssrContext, we need fake and run the callback\n  // in the same eventloop\n  if (FlowRouter.ssrContext.get()) {\n    const c = {\n      firstRun: true,\n      stop: () => {}\n    };\n    fn(c);\n    return c;\n  }\n\n  return originalAutorun.call(Tracker, fn);\n}; // By default, Meteor[call,apply] also inherit SsrContext\n// So, they can't access the full MongoDB dataset because of that\n// Then, we need to remove the SsrContext within Method calls\n\n\n['call', 'apply'].forEach(methodName => {\n  const original = Meteor[methodName];\n\n  Meteor[methodName] = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    const response = FlowRouter.ssrContext.withValue(null, () => {\n      return original.apply(_this, args);\n    });\n    return response;\n  };\n}); // This is not available in the server. But to make it work with SSR\n// We need to have it.\n\nMeteor.loggingIn = () => {\n  return false;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"node_modules\":{\"qs\":{\"package.json\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/qs/package.json                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"qs\",\n  \"version\": \"6.3.0\",\n  \"main\": \"lib/index.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/qs/lib/index.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.useNode();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"path-to-regexp\":{\"package.json\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/path-to-regexp/package.json                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"path-to-regexp\",\n  \"version\": \"1.7.0\",\n  \"main\": \"index.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/path-to-regexp/index.js                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.useNode();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"cheerio\":{\"package.json\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/cheerio/package.json                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"cheerio\",\n  \"version\": \"0.22.0\",\n  \"main\": \"./index.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/cheerio/index.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.useNode();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"cookie-parser\":{\"package.json\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/cookie-parser/package.json                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"cookie-parser\",\n  \"version\": \"1.4.3\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/cookie-parser/index.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.useNode();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"deepmerge\":{\"package.json\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/deepmerge/package.json                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"deepmerge\",\n  \"version\": \"1.3.1\",\n  \"main\": \"index\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/deepmerge/index.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.useNode();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/lib/router.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/lib/group.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/lib/route.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/server/router.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/server/group.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/server/route.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/server/ssr_context.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/lib/_init.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/server/_init.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/server/plugins/ssr_data.js\");\n\n/* Exports */\nPackage._define(\"jns:flow-router-ssr\", {\n  FlowRouter: FlowRouter\n});\n\n})();\n","servePath":"/packages/jns_flow-router-ssr.js","sourceMap":{"version":3,"sources":["packages/jns:flow-router-ssr/lib/router.js","packages/jns:flow-router-ssr/lib/group.js","packages/jns:flow-router-ssr/lib/route.js","packages/jns:flow-router-ssr/lib/_init.js","packages/jns:flow-router-ssr/server/router.js","packages/jns:flow-router-ssr/server/group.js","packages/jns:flow-router-ssr/server/route.js","packages/jns:flow-router-ssr/server/ssr_context.js","packages/jns:flow-router-ssr/server/_init.js","packages/jns:flow-router-ssr/server/plugins/ssr_data.js"],"names":["Qs","module","link","default","v","PathToRegexp","SharedRouter","constructor","_routes","_routesMap","_onRouteCallbacks","env","trailingSlash","Meteor","EnvironmentVariable","route","pathDef","options","group","test","message","Error","currentRoute","Route","_init","push","name","_triggerRouteRegister","path","fields","queryParams","newPath","_basePath","_encodeValues","toPath","compile","replace","match","get","_","last","strQueryParams","stringify","go","watchPathChange","Group","url","completePath","basePath","pathWithoutBase","RegExp","absoluteUrl","current","context","clone","_getCurrentRouteContext","EJSON","params","onRouteRegister","cb","obj","newObj","Object","keys","forEach","key","value","encodeURIComponent","routePublicApi","pick","omittingOptionFields","omit","withTrailingSlash","fn","withValue","SharedGroup","router","parent","prefix","_router","SharedRoute","_action","action","Function","prototype","FlowRouter","Router","Package","subscriptions","ssrContext","inSubscription","routeContext","deferScriptLoading","pageCacheTimeout","triggers","enter","exit","getParam","getQueryParam","getRouteName","setDeferScriptLoading","defer","setPageCacheTimeout","timeout","Url","require","Cheerio","logger","console","CACHE_MODE","isProduction","log","slugify","text","a","b","p","split","join","toString","toLowerCase","c","charAt","indexOf","AWS","config","Config","accessKeyId","settings","secretAccessKey","region","s3","S3","myBucket","emptyBucket","pathName","callback","Bucket","Prefix","listObjects","err","data","Contents","length","Delete","Objects","content","Key","moreThan1k","slice","deleteObjects","methods","createCache","html","cacheKey","unblock","catchPath","isDevelopment","filename","ContentLength","size","Body","Date","now","putObject","fs","temPath","writeFileSync","clearCache","clearAllCache","paths","i","_cache","cookieParser","Picker","middleware","FastRender","handleOnAllRoutes","_handleRoute","bind","req","res","next","_isHtmlPage","__userId","userId","e","cachedPage","_getCachedPage","_processFromCache","processFromSsr","_processFromSsr","handleRoute","pageInfo","dynamicHead","dynamicBody","head","self","SsrContext","_buildContext","frData","addData","collectionData","ex","error","stack","_injectHtml","getHtml","getHead","_cachePage","_moveScriptsToBottom","$","load","decodeEntities","heads","append","_params","query","_serverRequest","pathname","parse","ext","cacheInfo","_getCacheKey","info","_getCacheKeyJNS","tmp","result","http","statusCode","readFileSync","ftime","parseInt","minHTML","tnow","diff","cacheExpiryTimeinMS","call","existingInfo","timeoutHandle","setTimeout","slugged","deepMerge","_html","_head","_collections","getCollection","collName","collection","minimongo","LocalCollection","setHtml","addToHead","headHtml","addSubscription","fastRenderContext","frContext","args","concat","subscribe","each","collDataCollection","collectionName","collData","item","existingDoc","findOne","_id","newDoc","update","insert","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","originalSubscribe","pubName","Array","arguments","apply","ready","Mongo","mongo","originalFind","Collection","find","selector","_name","cursor","limit","fetch","originalAutorun","Tracker","autorun","firstRun","stop","methodName","original","response","loggingIn"],"mappings":"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","file":"/packages/jns_flow-router-ssr.js","sourcesContent":["import Qs from 'qs';\nimport PathToRegexp from 'path-to-regexp';\n\nSharedRouter = class {\n  constructor() {\n    this._routes = [];\n    this._routesMap = {};\n\n    // holds onRoute callbacks\n    this._onRouteCallbacks = [];\n\n    this.env = {};\n    this.env.trailingSlash = new Meteor.EnvironmentVariable();\n  }\n\n  route(pathDef, options, group) {\n    if (!/^\\/.*/.test(pathDef)) {\n      const message = \"route's path must start with '/'\";\n      throw new Error(message);\n    }\n\n    options = options || {};\n\n    const currentRoute = new Route(this, pathDef, options, group);\n    currentRoute._init();\n\n    this._routes.push(currentRoute);\n\n\n    if (options.name) {\n      this._routesMap[options.name] = currentRoute;\n    }\n\n    this._triggerRouteRegister(currentRoute);\n\n    return currentRoute;\n  }\n\n  // XXX this function needs to be cleaned up if possible by removing `if (this.isServer)`\n  // and `if (this.isClient)` if possible\n  path(pathDef, fields = {}, queryParams = {}) {\n    if (this._routesMap[pathDef]) {\n      pathDef = this._routesMap[pathDef].path;\n    }\n\n    let newPath = '';\n\n    // Prefix the path with the router global prefix\n    if (this._basePath) {\n      newPath += `/${this._basePath}/`;\n    }\n\n    // Encode query params\n    queryParams = this._encodeValues(queryParams);\n\n    const toPath = PathToRegexp.compile(pathDef);\n    newPath += toPath(fields);\n\n    // If we have one optional parameter in path definition e.g.\n    // /:category?\n    // and the parameter isn't present, path will be an empty string.\n    // We have this check as a value for path is required by e.g. FlowRouter.go()\n    if (!newPath) {\n      newPath = '/';\n    }\n\n    // Replace multiple slashes with single slash\n    newPath = newPath.replace(/\\/\\/+/g, '/');\n\n    // remove trailing slash\n    // but keep the root slash if it's the only one\n    newPath = newPath.match(/^\\/{1}$/) ? newPath : newPath.replace(/\\/$/, '');\n\n    // explictly asked to add a trailing slash\n    if (this.env.trailingSlash.get() && _.last(newPath) !== '/') {\n      newPath += '/';\n    }\n\n    const strQueryParams = Qs.stringify(queryParams || {});\n\n    if (strQueryParams) {\n      newPath += `?${strQueryParams}`;\n    }\n\n    return newPath;\n  }\n\n  go() {\n    // client only\n  }\n\n  watchPathChange() {\n    // client only\n  }\n\n  group(options) {\n    return new Group(this, options);\n  }\n\n  url(...args) {\n    // We need to remove the leading base path, or \"/\", as it will be inserted\n    // automatically by `Meteor.absoluteUrl` as documented in:\n    // http://docs.meteor.com/#/full/meteor_absoluteurl\n    const completePath = this.path(...args);\n    const basePath = this._basePath || '/';\n    const pathWithoutBase = completePath.replace(RegExp(`^${basePath}`), '');\n    return Meteor.absoluteUrl(pathWithoutBase);\n  }\n\n  // For client:\n  // .current is not reactive on the client\n  // This is by design. use .getParam() instead\n  // If you really need to watch the path change, use .watchPathChange()\n  current() {\n    // We can't trust outside, that's why we clone this\n    // Anyway, we can't clone the whole object since it has non-jsonable values\n    // That's why we clone what's really needed.\n    const context = _.clone(this._getCurrentRouteContext());\n\n    context.queryParams = EJSON.clone(context.queryParams);\n    context.params = EJSON.clone(context.params);\n\n    return context;\n  }\n\n  onRouteRegister(cb) {\n    this._onRouteCallbacks.push(cb);\n  }\n\n  _encodeValues(obj) {\n    const newObj = {};\n    Object.keys(obj).forEach(key => {\n      const value = obj[key];\n      newObj[key] = typeof value !== 'undefined' ? encodeURIComponent(value) : value;\n    });\n\n    return newObj;\n  }\n\n  _triggerRouteRegister(currentRoute) {\n    // We should only need to send a safe set of fields on the route\n    // object.\n    // This is not to hide what's inside the route object, but to show\n    // these are the public APIs\n    const routePublicApi = _.pick(currentRoute, 'name', 'pathDef', 'path');\n    const omittingOptionFields = [\n      'triggersEnter', 'triggersExit', 'name', 'action'\n    ];\n    routePublicApi.options = _.omit(currentRoute.options, omittingOptionFields);\n\n    this._onRouteCallbacks.forEach((cb) => {\n      cb(routePublicApi);\n    });\n  }\n\n  _getCurrentRouteContext() {\n    throw new Error('Not implemented');\n  }\n\n  _init() {\n    throw new Error('Not implemented');\n  }\n\n  withTrailingSlash(fn) {\n    return this.env.trailingSlash.withValue(true, fn);\n  }\n};\n","SharedGroup = class {\n  constructor(router, options, parent) {\n    options = options || {};\n\n    if (options.prefix && !/^\\/.*/.test(options.prefix)) {\n      const message = \"group's prefix must start with '/'\";\n      throw new Error(message);\n    }\n\n    this.prefix = options.prefix || '';\n    this.options = options;\n    this._router = router;\n    this.parent = parent;\n  }\n\n  route(pathDef, options, group) {\n    options = options || {};\n\n    if (!/^\\/.*/.test(pathDef)) {\n      const message = \"route's path must start with '/'\";\n      throw new Error(message);\n    }\n\n    pathDef = this.prefix + pathDef;\n\n    group = group || this;\n\n    return this._router.route(pathDef, options, group);\n  }\n\n  group(options) {\n    return new Group(this._router, options, this);\n  }\n};\n","SharedRoute = class {\n  constructor(router, pathDef, options, group) {\n    options = options || {};\n\n    this.options = options;\n\n    this.name = options.name;\n\n    this.pathDef = pathDef;\n\n    // Route.path is deprecated and will be removed in 3.0\n    this.path = this.pathDef;\n\n    this._router = router;\n\n    this._action = options.action || Function.prototype;\n\n    this.group = group;\n  }\n};\n","// Export Router Instance\nFlowRouter = new Router();\nFlowRouter.Router = Router;\nFlowRouter.Route = Route;\n\nPackage['kadira:flow-router-ssr'] = {FlowRouter};\n","Router = class extends SharedRouter {\n  constructor() {\n    super();\n\n    this.subscriptions = Function.prototype;\n    this.ssrContext = new Meteor.EnvironmentVariable();\n    this.inSubscription = new Meteor.EnvironmentVariable();\n    this.routeContext = new Meteor.EnvironmentVariable();\n\n    // FlowRouter can defer the script loading after rendered the body\n    // It's turned off by default\n    this.deferScriptLoading = false;\n\n    // FlowRouter can cache it's pages to improve SSR performance.\n    // It's turned off by default\n    this.pageCacheTimeout = 0;\n\n    // holds onRoute callbacks\n    this._onRouteCallbacks = [];\n\n    this.triggers = {\n      enter: function() {\n        // client only\n      },\n      exit: function() {\n        // client only\n      }\n    };\n  }\n\n  getParam(key) {\n    const current = this.current();\n    if (current) {\n      return current.params[key];\n    }\n  }\n\n  getQueryParam(key) {\n    const current = this.current();\n    if (current) {\n      return current.queryParams[key];\n    }\n  }\n\n  getRouteName() {\n    const current = this.current();\n    if (current) {\n      return current.route.name;\n    }\n  }\n\n  setDeferScriptLoading(defer) {\n    this.deferScriptLoading = defer;\n  }\n\n  setPageCacheTimeout(timeout) {\n    this.pageCacheTimeout = timeout;\n  }\n\n  _getCurrentRouteContext() {\n    return this.routeContext.get();\n  }\n};\n","Group = class extends SharedGroup {\n};\n","import {Meteor} from \"meteor/meteor\";\n\nconst Url = require('url');\nconst Cheerio = require('cheerio');\nconst logger = console;\nlet CACHE_MODE = 'localfile';//s3, localfile\nlet basePath = '/Users/njanjanam/localcache/'\nif(Meteor.isProduction)basePath = '/mnt/flatbid_cache/'\nconsole.log('Base Path is: '+basePath)\n///////////// CUSTOM JNS CODE\nfunction slugify (text) {\n    if(!text)return '';\n    const a = 'àáäâèéëêìíïîòóöôùúüûñçßÿœæŕśńṕẃǵǹḿǘẍźḧ·/,:;'\n    const b = 'aaaaeeeeiiiioooouuuuncsyoarsnpwgnmuxzh------'\n    const p = new RegExp(a.split('').join('|'), 'g')\n\n    return text.toString().toLowerCase()\n        .replace(/\\s+/g, '')           // Replace spaces with \"\"\n        .replace(p, c =>\n            b.charAt(a.indexOf(c)))     // Replace special chars\n        .replace(/&/g, '-and-')         // Replace & with ''\n        .replace(/[^\\w\\-]+/g, '')       // Remove all non-word chars\n        .replace(/\\-\\-+/g, '-')         // Replace multiple - with single ''\n        .replace(/^-+/, '')             // Trim - from start of text\n        .replace(/-+$/, '')             // Trim - from end of text\n}\nif(CACHE_MODE == 's3'){ \n  var AWS = require('aws-sdk');\n  var config = new AWS.Config({\n      accessKeyId: Meteor.settings['galaxy.meteor.com'].env.accessKeyId, secretAccessKey: Meteor.settings['galaxy.meteor.com'].env.secretAccessKey, region: Meteor.settings['galaxy.meteor.com'].env.region\n  });\n  var s3 = new AWS.S3(config);\n  var myBucket = 'flatbid-cache';\n}\nfunction emptyBucket(pathName,callback){\n    var params = {\n        Bucket: myBucket,\n        Prefix: pathName\n    };\n\n    s3.listObjects(params, function(err, data) {\n        if (err) return callback(err);\n\n        if (data.Contents.length == 0) return callback();\n\n        params = {Bucket: myBucket};\n        params.Delete = {Objects:[]};\n\n        data.Contents.forEach(function(content) {\n            params.Delete.Objects.push({Key: content.Key});\n        });\n        var moreThan1k = false;\n        if(params.Delete.Objects.length > 1000){\n            params.Delete.Objects = params.Delete.Objects.slice(0,1000);\n            moreThan1k = true\n        }\n\n        s3.deleteObjects(params, function(err, data) {\n            if (err) return callback(err);\n            if(moreThan1k)emptyBucket(pathName,callback);\n            else callback();\n        });\n    });\n}\nMeteor.methods({\n    createCache: function (html,cacheKey) {\n        console.log('in createCache method');\n        this.unblock();\n        // if(Meteor.isDevelopment)return;\n\n        var catchPath = '';\n        if(cacheKey.indexOf('jns-b-')!=-1)catchPath += 'BrowsePages/'\n        if(cacheKey.indexOf('jns-rent-')!=-1)catchPath += 'LDPages/'\n        if(!catchPath)catchPath += 'All/'\n        if(Meteor.isDevelopment)catchPath = 'dev/'+catchPath\n        var filename = catchPath + cacheKey +'.html';\n\n        ////////////////// AWS S3\n        if(CACHE_MODE == 's3'){ \n          var params = {\n              Bucket    : myBucket,\n              Key           : filename,\n              ContentLength : html.size,\n              Body          : Date.now()+'{jns}'+html\n          };\n\n          s3.putObject(params, function(err, data) {\n              console.log('Cache created for: '+filename + \" Length: \"+html.length)\n              // console.log(data)\n              // console.log(err)\n          });\n        }\n        ////////////////// LOCAL FILE\n        if(CACHE_MODE == 'localfile'){ \n          const fs = require('fs');\n          var temPath = basePath+filename;\n          console.log('Catch create in: '+temPath)\n          fs.writeFileSync(temPath , Date.now()+'{jns}'+html, 'utf8');\n          // var Minimize = require('minimize')\n          //     , minimize = new Minimize();\n          \n          // minimize.parse(html, function (error, data) {\n          //     console.log('Minimised');\n          //     // console.log(data);\n          //     fs.writeFileSync(temPath , data, 'utf8');\n          // });\n        }\n\n        return;\n        // fs.writeFileSync(temPath , data, 'utf8');\n    },\n    clearCache:function(key){\n        // console.log('in clearCache method');\n    },\n    clearAllCache:function(key){\n        console.log('in clearAllCache method');\n        var paths = ['All/','BrowsePages/','LDPages/']\n        var key;\n        for(var i=0; i< paths.length ;i++){\n            key = Meteor.isDevelopment ? 'dev/'+paths[i] : paths[i]\n            emptyBucket(key,function(err){console.log(err)})\n        }\n    }\n});\n///////////// CUSTOM JNS CODE END\n\nRoute = class extends SharedRoute {\n  constructor(router, pathDef, options, group) {\n    super(router, pathDef, options, group);\n\n    this._cache = {};\n  }\n\n  _init() {\n    const cookieParser = require('cookie-parser');\n    Picker.middleware(cookieParser());\n    // process null subscriptions with FR support\n    Picker.middleware(FastRender.handleOnAllRoutes);\n\n    const route = FlowRouter.basePath + this.pathDef;\n    Picker.route(route, this._handleRoute.bind(this));\n  }\n\n  _handleRoute(params, req, res, next) {\n    if (!this._isHtmlPage(req.url)) {\n      return next();\n    }\n\n    // This userId will be useful in the at the later on when\n    // it's time to cache the page.\n    // Normally, we can't access `Meteor.userId()` outside of a method\n    // But here, we could do it because we call `FastRender.handleOnAllRoutes`.\n    // It creates a FastRender context and assign it for the current fiber.\n    try{\n      req.__userId = Meteor.userId();\n    }catch(e){\n      req.__userId = this.userId;\n    }\n    const cachedPage = this._getCachedPage(req.url, req.__userId);\n    if (cachedPage) {\n      return this._processFromCache(cachedPage, req, res, next);\n    }\n\n    // Here we need to processFromSsr,\n    // but also we need to process with FastRender as well.\n    // That's why we bind processFromSsr and pass args as below.\n    // It does not get any arguments from FastRender.\n    // FastRender just trigger the following handler and do it's job\n    const processFromSsr = this._processFromSsr.bind(this, params, req, res);\n    FastRender.handleRoute(processFromSsr, params, req, res, next);\n  }\n\n  _processFromCache(pageInfo, req, res, next) {\n    req.dynamicHead = req.dynamicHead || '';\n    req.dynamicBody = req.dynamicBody || '';\n\n    req.dynamicHead += pageInfo.head;\n    req.dynamicBody += pageInfo.html;\n\n    // InjectData.pushData(res, 'fast-render-data', pageInfo.frData);\n    //   console.log('frData length: '+pageInfo.frData.length)\n    next();\n      // console.log('_processFromCache end')\n  }\n\n  _processFromSsr(params, req, res) {\n    // console.log('_processFromSsr')\n    const self = this;\n    const ssrContext = new SsrContext();\n    const routeContext = self._buildContext(req, params);\n\n    self._router.ssrContext.withValue(ssrContext, () => {\n      self._router.routeContext.withValue(routeContext, () => {\n        try {\n          // get the data for null subscriptions and add them to the\n          // ssrContext\n          const frData = '';//InjectData.getData(res, 'fast-render-data');\n          if (frData) {\n            ssrContext.addData(frData.collectionData);\n          }\n\n          if (self.options.action) {\n            self.options.action(routeContext.params, routeContext.queryParams);\n          }\n        } catch (ex) {\n          logger.error(`Error when doing SSR. path:${req.url}: ${ex.message}`);\n          logger.error(ex.stack);\n        }\n      });\n\n      self._injectHtml(req, res, ssrContext);\n        console.log('_processFromSsr complete')\n    });\n  }\n\n  _injectHtml(req, res, ssrContext) {\n    const html = ssrContext.getHtml();\n    const head = ssrContext.getHead();\n\n    req.dynamicHead = req.dynamicHead || '';\n    req.dynamicBody = req.dynamicBody || '';\n\n    req.dynamicHead += head;\n    req.dynamicBody += html;\n\n\n    // cache the page if mentioned a timeout\n    if (this._router.pageCacheTimeout) {\n      const pageInfo = {\n        // frData: InjectData.getData(res, 'fast-render-data'),\n        head: head,\n        html: html\n      };\n      this._cachePage(req.url, req.__userId, pageInfo, this._router.pageCacheTimeout);\n    }\n\n  }\n\n  _moveScriptsToBottom(html) {\n    const $ = Cheerio.load(html, {\n      decodeEntities: false\n    });\n    const heads = $('head script');\n    $('body').append(heads);\n\n    // Remove empty lines caused by removing scripts\n    $('head').html($('head').html().replace(/(^[ \\t]*\\n)/gm, ''));\n\n    return $.html();\n  }\n\n  _buildContext(req, _params) {\n    const queryParams = _params.query;\n    // We need to remove `.query` since it's not part of our params API\n    // But we only need to remove it in our copy.\n    // We should not trigger any side effects\n    const params = _.clone(_params);\n    delete params.query;\n\n    const context = {\n      route: this,\n      path: req.url,\n      params,\n      queryParams,\n      // We might change this later on. That's why it's starting with _\n      _serverRequest: req\n    };\n\n    return context;\n  }\n\n  _isHtmlPage(url) {\n    const pathname = Url.parse(url).pathname;\n    const ext = pathname.split('.').slice(1).join('.');\n\n    // if there is no extention, yes that's a html page\n    if (!ext) {\n      return true;\n    }\n\n    // if this is htm or html, yes that's a html page\n    if (/^htm/.test(ext)) {\n      return true;\n    }\n\n    // if not we assume this is not as a html page\n    // this doesn't do any harm. But no SSR\n    return false;\n  }\n\n  _getCachedPage(url, userId) {\n\n    const cacheInfo = {url, userId};\n\n    //////Below is the logic for this extension's default in-build caching system. Enabling it to reduce the number of calls to AWS S3 for most commenly crawled pages by SearchEngines\n    var cacheKey = this._getCacheKey(cacheInfo);\n    // console.log('local Cache - cacheKey: '+cacheKey)\n\n    const info = this._cache[cacheKey];\n    // if (info) {\n    //   console.log('Fetching from the memory Cache: '+cacheKey)\n    //   return info.data;\n    // }\n    ///End of inbuild code\n\n\n\n      /////////////JNS CUSTOM CODE START - This will run if the above code didn't find the cache.\n\n      // var start = new Date().getTime();\n      cacheKey = this._getCacheKeyJNS({url, userId});\n      var catchPath = '';\n      if(cacheKey.indexOf('jns-b-')!=-1)catchPath += 'BrowsePages/'\n      if(cacheKey.indexOf('jns-rent-')!=-1)catchPath += 'LDPages/'\n      if(!catchPath)catchPath += 'All/'\n      if(Meteor.isDevelopment)catchPath = 'dev/'+catchPath\n      let tmp = false;\n      if(CACHE_MODE == 's3'){ \n        var url = 'https://s3-eu-west-1.amazonaws.com/flatbid-cache/'+ catchPath + cacheKey + '.html';\n        try {\n          result = Meteor.http.get(url);\n          if(result.statusCode==200){\n            tmp = result.content.split('{jns}')\n          }\n        }catch(e){\n            console.log('s3 Cache fetch failed: '+cacheKey);\n        }\n      }else if(CACHE_MODE == 'localfile'){ \n        const fs = require('fs');\n        \n        var temPath = basePath+catchPath + cacheKey +'.html';\n        try {\n          tmp = fs.readFileSync(temPath ,'utf8');\n          tmp = tmp.split('{jns}');\n          //fs.readFileSync('/mnt/flatbid_cache/BrowsePages/guest-jns-b-apartment-for-rent-in-rathbane-limerick-irelandluxurysort1.html' ,'utf8');\n        }catch(e){\n            console.log('localfile Cache fetch failed: '+temPath);\n        }\n      }\n      try {\n          // if(Meteor.isDevelopment)throw new Meteor.Error('bad', 'stuff happened');\n          \n          if(tmp){\n              var ftime = parseInt(tmp[0])\n              var minHTML = tmp[1]\n              var tnow = Date.now();\n              var diff = tnow - ftime;\n\n              var cacheExpiryTimeinMS = 172800000; //48 * 60 * 60 *1000 //48 hours Default\n              if(cacheKey.indexOf('home')!=-1)cacheExpiryTimeinMS = 1800000//60 * 60 *1000 //60 min for home page\n              if(cacheKey.indexOf('jns-b-')!=-1)cacheExpiryTimeinMS = 1800000//30 * 60 *1000 //30 min for browse pages\n              if(cacheKey.indexOf('jns-rent-')!=-1)cacheExpiryTimeinMS = 2280000 // 38 * 60 *1000 //1.5 days for rent pages\n              if(cacheKey.indexOf('jns-letting-')!=-1)cacheExpiryTimeinMS = 2880000 //48 * 60 *1000 //2 days for letting pages\n              // cacheExpiryTimeinMS = 1 *1000 //1 sec\n\n              console.log('tnow: '+tnow+' ftime: '+ftime+' diff: '+diff+' tmp[0]: '+tmp[0]+' cacheExpiryTimeinMS:'+cacheExpiryTimeinMS);\n\n              if(diff < cacheExpiryTimeinMS) {//Cachce has not expired yet.\n                  console.log('Successfully fetching from cache: '+cacheKey);\n                  // this.response.writeHead(200, {'Content-Type': 'text/html'});\n                  // this.response.end(minHTML);\n\n                  return {head:tmp[1],html:tmp[2]};\n              }else{\n                  console.log('Cache expired: '+ diff +' key: '+cacheKey);\n                  // Meteor.call('clearCache',cacheKey);\n              }\n          }else{\n              console.log('No cache: '+cacheKey);\n          }\n      }catch(e){\n          console.log('Cache not found: '+cacheKey);\n      }\n      /////////////JNS CUSTOM CODE END\n\n  }\n\n  _cachePage(url, userId, data, timeout) {\n\n      var cacheKey = this._getCacheKeyJNS({url, userId});\n      Meteor.call('createCache',`${data.head}{jns}${data.html}`,cacheKey);\n\n\n    ///Below is the logic for this extension's default in-build caching system. Enabling it to reduce the number of calls to AWS S3 for most commenly crawled pages by SearchEngines\n    const cacheInfo = {url, userId};\n    cacheKey = this._getCacheKey(cacheInfo);\n    const existingInfo = this._cache[cacheKey];\n    if (existingInfo) {\n      // Sometimes, it's possible get this called multiple times\n      // due to race conditions. So, in that case, simply discard\n      // caching this page.\n      return;\n    }\n\n    const info = {\n      data: data,\n      timeoutHandle: setTimeout(() => {\n        delete this._cache[cacheKey];\n      }, timeout)\n    };\n\n    console.log('Local Cache created for: '+cacheKey)\n    this._cache[cacheKey] = info;\n  }\n\n  _getCacheKeyJNS({userId = '', url}) {\n    var slugged = slugify(url);\n    return   (userId ? userId : 'guest' )+'-jns-'+ (slugged ? slugged : 'home' )\n  }\n  _getCacheKey({userId = '', url}) {\n    return `${userId}::${url}`;\n  }\n};\n","const deepMerge = require('deepmerge');\n\nSsrContext = class {\n  constructor() {\n    this._html = '';\n    this._head = '';\n    this._collections = {};\n  }\n\n  getCollection(collName) {\n    let collection = this._collections[collName];\n    if (!collection) {\n      const minimongo = Package.minimongo;\n      collection = this._collections[collName] = new minimongo.LocalCollection();\n    }\n\n    return collection;\n  }\n\n  setHtml(html) {\n    this._html = html;\n  }\n\n  getHtml() {\n    return this._html;\n  }\n\n  addToHead(headHtml) {\n    this._head += `\\n${headHtml}`;\n  }\n\n  getHead() {\n    return this._head;\n  }\n\n  addSubscription(name, params) {\n    const fastRenderContext = FastRender.frContext.get();\n    if (!fastRenderContext) {\n      throw new Error(\n        `Cannot add a subscription: ${name} without FastRender Context`\n      );\n    }\n\n    const args = [name].concat(params);\n    const data = fastRenderContext.subscribe(...args);\n    this.addData(data);\n  }\n\n  addData(data) {\n    _.each(data, (collDataCollection, collectionName) => {\n      const collection = this.getCollection(collectionName);\n      collDataCollection.forEach((collData) => {\n        collData.forEach((item) => {\n          const existingDoc = collection.findOne(item._id);\n          if (existingDoc) {\n            const newDoc = deepMerge(existingDoc, item);\n            delete newDoc._id;\n            collection.update(item._id, newDoc);\n          } else {\n            collection.insert(item);\n          }\n        });\n      });\n    });\n  }\n};\n","// This is a magic configuration in Meteor which allows some apps to be\n// run with a prefix.\n// This is very important when especially app running in something like\n// sandstrom.io\n// Now it's supported by SSR using this\nFlowRouter.basePath = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n","const originalSubscribe = Meteor.subscribe;\n\nMeteor.subscribe = function(pubName) {\n  const params = Array.prototype.slice.call(arguments, 1);\n\n  const ssrContext = FlowRouter.ssrContext.get();\n  if (ssrContext) {\n    FlowRouter.inSubscription.withValue(true, () => {\n      ssrContext.addSubscription(pubName, params);\n    });\n  }\n\n  if (originalSubscribe) {\n    originalSubscribe.apply(this, arguments);\n  }\n\n  return {\n    ready: () => true\n  };\n};\n\nconst Mongo = Package.mongo.Mongo;\nconst originalFind = Mongo.Collection.prototype.find;\n\nMongo.Collection.prototype.find = function(selector, options) {\n  selector = selector || {};\n  const ssrContext = FlowRouter.ssrContext.get();\n  if (ssrContext && !FlowRouter.inSubscription.get()) {\n    const collName = this._name;\n    const collection = ssrContext.getCollection(collName);\n    const cursor = collection.find(selector, options);\n    return cursor;\n  }\n\n  return originalFind.call(this, selector, options);\n};\n\n// We must implement this. Otherwise, it'll call the origin prototype's\n// find method\nMongo.Collection.prototype.findOne = function(selector, options) {\n  options = options || {};\n  options.limit = 1;\n  return this.find(selector, options).fetch()[0];\n};\n\nconst originalAutorun = Tracker.autorun;\n\nTracker.autorun = (fn) => {\n  // if autorun is in the ssrContext, we need fake and run the callback\n  // in the same eventloop\n  if (FlowRouter.ssrContext.get()) {\n    const c = { firstRun: true, stop: () => {} };\n    fn(c);\n    return c;\n  }\n\n  return originalAutorun.call(Tracker, fn);\n};\n\n// By default, Meteor[call,apply] also inherit SsrContext\n// So, they can't access the full MongoDB dataset because of that\n// Then, we need to remove the SsrContext within Method calls\n['call', 'apply'].forEach((methodName) => {\n  const original = Meteor[methodName];\n  Meteor[methodName] = (...args) => {\n    const response = FlowRouter.ssrContext.withValue(null, () => {\n      return original.apply(this, args);\n    });\n\n    return response;\n  };\n});\n\n// This is not available in the server. But to make it work with SSR\n// We need to have it.\nMeteor.loggingIn = () => {\n  return false;\n};\n"]}}]