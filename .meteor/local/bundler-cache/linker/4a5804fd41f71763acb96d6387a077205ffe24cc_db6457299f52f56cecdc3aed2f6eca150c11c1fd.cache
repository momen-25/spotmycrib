[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar MeteorX = Package['montiapm:meteorx'].MeteorX;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\nvar DDP = Package['ddp-client'].DDP;\nvar DDPServer = Package['ddp-server'].DDPServer;\nvar EJSON = Package.ejson.EJSON;\nvar DDPCommon = Package['ddp-common'].DDPCommon;\nvar _ = Package.underscore._;\nvar Random = Package.random.Random;\nvar WebApp = Package.webapp.WebApp;\nvar WebAppInternals = Package.webapp.WebAppInternals;\nvar main = Package.webapp.main;\nvar ECMAScript = Package.ecmascript.ECMAScript;\nvar Email = Package.email.Email;\nvar EmailInternals = Package.email.EmailInternals;\nvar HTTP = Package.http.HTTP;\nvar HTTPInternals = Package.http.HTTPInternals;\nvar meteorInstall = Package.modules.meteorInstall;\nvar MongoInternals = Package.mongo.MongoInternals;\nvar Mongo = Package.mongo.Mongo;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar getClientArchVersion, Kadira, Monti, BaseErrorModel, Retry, HaveAsyncCallback, UniqueId, DefaultUniqueId, CreateUserStack, OptimizedApply, getClientVersions, countKeys, iterate, getProperty, Ntp, handleApiResponse, WaitTimeBuilder, OplogCheck, Tracer, TracerStore, kind, KadiraModel, MethodsModel, PubsubModel, SystemModel, ErrorModel, DocSzCache, DocSzCacheItem, wrapServer, wrapSession, wrapSubscription, wrapOplogObserveDriver, wrapPollingObserveDriver, wrapMultiplexer, wrapForCountingObservers, wrapStringifyDDP, hijackDBOps, TrackUncaughtExceptions, TrackUnhandledRejections, TrackMeteorDebug, setLabels, MAX_BODY_SIZE, MAX_STRINGIFIED_BODY_SIZE;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"montiapm:agent\":{\"lib\":{\"common\":{\"utils.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/common/utils.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\ngetClientArchVersion = function (arch) {\n  const autoupdate = __meteor_runtime_config__.autoupdate;\n\n  if (autoupdate) {\n    return autoupdate.versions[arch] ? autoupdate.versions[arch].version : 'none';\n  } // Meteor 1.7 and older did not have an `autoupdate` object.\n\n\n  switch (arch) {\n    case 'cordova.web':\n      return __meteor_runtime_config__.autoupdateVersionCordova;\n\n    case 'web.browser':\n    case 'web.browser.legacy':\n      // Meteor 1.7 always used the web.browser.legacy version\n      return __meteor_runtime_config__.autoupdateVersion;\n\n    default:\n      return 'none';\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"unify.js\":function module(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/common/unify.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nKadira = {};\nKadira.options = {};\nMonti = Kadira;\n\nif (Meteor.wrapAsync) {\n  Kadira._wrapAsync = Meteor.wrapAsync;\n} else {\n  Kadira._wrapAsync = Meteor._wrapAsync;\n}\n\nif (Meteor.isServer) {\n  var EventEmitter = Npm.require('events').EventEmitter;\n\n  var eventBus = new EventEmitter();\n  eventBus.setMaxListeners(0);\n\n  var buildArgs = function (args) {\n    var eventName = args[0] + '-' + args[1];\n    var args = args.slice(2);\n    args.unshift(eventName);\n    return args;\n  };\n\n  Kadira.EventBus = {};\n  ['on', 'emit', 'removeListener', 'removeAllListeners'].forEach(function (m) {\n    Kadira.EventBus[m] = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var args = buildArgs(args);\n      return eventBus[m].apply(eventBus, args);\n    };\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"default_error_filters.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/common/default_error_filters.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar commonErrRegExps = [/connection timeout\\. no (\\w*) heartbeat received/i, /INVALID_STATE_ERR/i];\nKadira.errorFilters = {\n  filterValidationErrors: function (type, message, err) {\n    if (err && err instanceof Meteor.Error) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n  filterCommonMeteorErrors: function (type, message) {\n    for (var lc = 0; lc < commonErrRegExps.length; lc++) {\n      var regExp = commonErrRegExps[lc];\n\n      if (regExp.test(message)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"send.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/common/send.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nKadira.send = function (payload, path, callback) {\n  if (!Kadira.connected) {\n    throw new Error(\"You need to connect with Kadira first, before sending messages!\");\n  }\n\n  path = path.substr(0, 1) != '/' ? \"/\" + path : path;\n  var endpoint = Kadira.options.endpoint + path;\n  var retryCount = 0;\n  var retry = new Retry({\n    minCount: 1,\n    minTimeout: 0,\n    baseTimeout: 1000 * 5,\n    maxTimeout: 1000 * 60\n  });\n\n  var sendFunction = Kadira._getSendFunction();\n\n  tryToSend();\n\n  function tryToSend(err) {\n    if (retryCount < 5) {\n      retry.retryLater(retryCount++, send);\n    } else {\n      console.warn('Error sending error traces to Monti APM server');\n      if (callback) callback(err);\n    }\n  }\n\n  function send() {\n    sendFunction(endpoint, payload, function (err, res) {\n      if (err && !res) {\n        tryToSend(err);\n      } else if (res.statusCode == 200) {\n        if (callback) callback(null, res.data);\n      } else {\n        if (callback) callback(new Meteor.Error(res.statusCode, res.content));\n      }\n    });\n  }\n};\n\nKadira._getSendFunction = function () {\n  return Meteor.isServer ? Kadira._serverSend : Kadira._clientSend;\n};\n\nKadira._clientSend = function (endpoint, payload, callback) {\n  httpRequest('POST', endpoint, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    content: JSON.stringify(payload)\n  }, callback);\n};\n\nKadira._serverSend = function () {\n  throw new Error('Kadira._serverSend is not supported. Use coreApi instead.');\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"models\":{\"base_error.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/models/base_error.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nBaseErrorModel = function (options) {\n  this._filters = [];\n};\n\nBaseErrorModel.prototype.addFilter = function (filter) {\n  if (typeof filter === 'function') {\n    this._filters.push(filter);\n  } else {\n    throw new Error(\"Error filter must be a function\");\n  }\n};\n\nBaseErrorModel.prototype.removeFilter = function (filter) {\n  var index = this._filters.indexOf(filter);\n\n  if (index >= 0) {\n    this._filters.splice(index, 1);\n  }\n};\n\nBaseErrorModel.prototype.applyFilters = function (type, message, error, subType) {\n  for (var lc = 0; lc < this._filters.length; lc++) {\n    var filter = this._filters[lc];\n\n    try {\n      var validated = filter(type, message, error, subType);\n      if (!validated) return false;\n    } catch (ex) {\n      // we need to remove this filter\n      // we may ended up in a error cycle\n      this._filters.splice(lc, 1);\n\n      throw new Error(\"an error thrown from a filter you've suplied\", ex.message);\n    }\n  }\n\n  return true;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"0model.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/models/0model.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nKadiraModel = function () {};\n\nKadiraModel.prototype._getDateId = function (timestamp) {\n  var remainder = timestamp % (1000 * 60);\n  var dateId = timestamp - remainder;\n  return dateId;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function module(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/models/methods.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nconst {\n  DDSketch\n} = require('monti-apm-sketches-js');\n\nvar METHOD_METRICS_FIELDS = ['wait', 'db', 'http', 'email', 'async', 'compute', 'total'];\n\nMethodsModel = function (metricsThreshold) {\n  this.methodMetricsByMinute = Object.create(null);\n  this.errorMap = Object.create(null);\n  this._metricsThreshold = _.extend({\n    \"wait\": 100,\n    \"db\": 100,\n    \"http\": 1000,\n    \"email\": 100,\n    \"async\": 100,\n    \"compute\": 100,\n    \"total\": 200\n  }, metricsThreshold || Object.create(null)); //store max time elapsed methods for each method, event(metrics-field)\n\n  this.maxEventTimesForMethods = Object.create(null);\n  this.tracerStore = new TracerStore({\n    interval: 1000 * 60,\n    //process traces every minute\n    maxTotalPoints: 30,\n    //for 30 minutes\n    archiveEvery: 5 //always trace for every 5 minutes,\n\n  });\n  this.tracerStore.start();\n};\n\n_.extend(MethodsModel.prototype, KadiraModel.prototype);\n\nMethodsModel.prototype._getMetrics = function (timestamp, method) {\n  var dateId = this._getDateId(timestamp);\n\n  if (!this.methodMetricsByMinute[dateId]) {\n    this.methodMetricsByMinute[dateId] = {\n      methods: Object.create(null)\n    };\n  }\n\n  var methods = this.methodMetricsByMinute[dateId].methods; //initialize method\n\n  if (!methods[method]) {\n    methods[method] = {\n      count: 0,\n      errors: 0,\n      fetchedDocSize: 0,\n      sentMsgSize: 0,\n      histogram: new DDSketch({\n        alpha: 0.02\n      })\n    };\n    METHOD_METRICS_FIELDS.forEach(function (field) {\n      methods[method][field] = 0;\n    });\n  }\n\n  return this.methodMetricsByMinute[dateId].methods[method];\n};\n\nMethodsModel.prototype.setStartTime = function (timestamp) {\n  this.metricsByMinute[dateId].startTime = timestamp;\n};\n\nMethodsModel.prototype.processMethod = function (methodTrace) {\n  var dateId = this._getDateId(methodTrace.at); //append metrics to previous values\n\n\n  this._appendMetrics(dateId, methodTrace);\n\n  if (methodTrace.errored) {\n    this.methodMetricsByMinute[dateId].methods[methodTrace.name].errors++;\n  }\n\n  this.tracerStore.addTrace(methodTrace);\n};\n\nMethodsModel.prototype._appendMetrics = function (id, methodTrace) {\n  var methodMetrics = this._getMetrics(id, methodTrace.name); // startTime needs to be converted into serverTime before sending\n\n\n  if (!this.methodMetricsByMinute[id].startTime) {\n    this.methodMetricsByMinute[id].startTime = methodTrace.at;\n  } //merge\n\n\n  METHOD_METRICS_FIELDS.forEach(function (field) {\n    var value = methodTrace.metrics[field];\n\n    if (value > 0) {\n      methodMetrics[field] += value;\n    }\n  });\n  methodMetrics.count++;\n  methodMetrics.histogram.add(methodTrace.metrics.total);\n  this.methodMetricsByMinute[id].endTime = methodTrace.metrics.at;\n};\n\nMethodsModel.prototype.trackDocSize = function (method, size) {\n  var timestamp = Ntp._now();\n\n  var dateId = this._getDateId(timestamp);\n\n  var methodMetrics = this._getMetrics(dateId, method);\n\n  methodMetrics.fetchedDocSize += size;\n};\n\nMethodsModel.prototype.trackMsgSize = function (method, size) {\n  var timestamp = Ntp._now();\n\n  var dateId = this._getDateId(timestamp);\n\n  var methodMetrics = this._getMetrics(dateId, method);\n\n  methodMetrics.sentMsgSize += size;\n};\n/*\n  There are two types of data\n\n  1. methodMetrics - metrics about the methods (for every 10 secs)\n  2. methodRequests - raw method request. normally max, min for every 1 min and errors always\n*/\n\n\nMethodsModel.prototype.buildPayload = function (buildDetailedInfo) {\n  var payload = {\n    methodMetrics: [],\n    methodRequests: []\n  }; //handling metrics\n\n  var methodMetricsByMinute = this.methodMetricsByMinute;\n  this.methodMetricsByMinute = Object.create(null); //create final paylod for methodMetrics\n\n  for (var key in methodMetricsByMinute) {\n    var methodMetrics = methodMetricsByMinute[key]; // converting startTime into the actual serverTime\n\n    var startTime = methodMetrics.startTime;\n    methodMetrics.startTime = Kadira.syncedDate.syncTime(startTime);\n\n    for (var methodName in methodMetrics.methods) {\n      METHOD_METRICS_FIELDS.forEach(function (field) {\n        methodMetrics.methods[methodName][field] /= methodMetrics.methods[methodName].count;\n      });\n    }\n\n    payload.methodMetrics.push(methodMetricsByMinute[key]);\n  } //collect traces and send them with the payload\n\n\n  payload.methodRequests = this.tracerStore.collectTraces();\n  return payload;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"pubsub.js\":function module(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/models/pubsub.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar logger = Npm.require('debug')('kadira:pubsub');\n\nconst {\n  DDSketch\n} = require('monti-apm-sketches-js');\n\nPubsubModel = function () {\n  this.metricsByMinute = Object.create(null);\n  this.subscriptions = Object.create(null);\n  this.tracerStore = new TracerStore({\n    interval: 1000 * 60,\n    //process traces every minute\n    maxTotalPoints: 30,\n    //for 30 minutes\n    archiveEvery: 5 //always trace for every 5 minutes,\n\n  });\n  this.tracerStore.start();\n};\n\nPubsubModel.prototype._trackSub = function (session, msg) {\n  logger('SUB:', session.id, msg.id, msg.name, msg.params);\n\n  var publication = this._getPublicationName(msg.name);\n\n  var subscriptionId = msg.id;\n\n  var timestamp = Ntp._now();\n\n  var metrics = this._getMetrics(timestamp, publication);\n\n  metrics.subs++;\n  this.subscriptions[msg.id] = {\n    // We use localTime here, because when we used synedTime we might get\n    // minus or more than we've expected\n    //   (before serverTime diff changed overtime)\n    startTime: timestamp,\n    publication: publication,\n    params: msg.params,\n    id: msg.id\n  }; //set session startedTime\n\n  session._startTime = session._startTime || timestamp;\n};\n\n_.extend(PubsubModel.prototype, KadiraModel.prototype);\n\nPubsubModel.prototype._trackUnsub = function (session, sub) {\n  logger('UNSUB:', session.id, sub._subscriptionId);\n\n  var publication = this._getPublicationName(sub._name);\n\n  var subscriptionId = sub._subscriptionId;\n  var subscriptionState = this.subscriptions[subscriptionId];\n  var startTime = null; //sometime, we don't have these states\n\n  if (subscriptionState) {\n    startTime = subscriptionState.startTime;\n  } else {\n    //if this is null subscription, which is started automatically\n    //hence, we don't have a state\n    startTime = session._startTime;\n  } //in case, we can't get the startTime\n\n\n  if (startTime) {\n    var timestamp = Ntp._now();\n\n    var metrics = this._getMetrics(timestamp, publication); //track the count\n\n\n    if (sub._name != null) {\n      // we can't track subs for `null` publications.\n      // so we should not track unsubs too\n      metrics.unsubs++;\n    } //use the current date to get the lifeTime of the subscription\n\n\n    metrics.lifeTime += timestamp - startTime; //this is place we can clean the subscriptionState if exists\n\n    delete this.subscriptions[subscriptionId];\n  }\n};\n\nPubsubModel.prototype._trackReady = function (session, sub, trace) {\n  logger('READY:', session.id, sub._subscriptionId); //use the current time to track the response time\n\n  var publication = this._getPublicationName(sub._name);\n\n  var subscriptionId = sub._subscriptionId;\n\n  var timestamp = Ntp._now();\n\n  var metrics = this._getMetrics(timestamp, publication);\n\n  var subscriptionState = this.subscriptions[subscriptionId];\n\n  if (subscriptionState && !subscriptionState.readyTracked) {\n    var resTime = timestamp - subscriptionState.startTime;\n    metrics.resTime += resTime;\n    subscriptionState.readyTracked = true;\n    metrics.histogram.add(resTime);\n  }\n\n  if (trace) {\n    this.tracerStore.addTrace(trace);\n  }\n};\n\nPubsubModel.prototype._trackError = function (session, sub, trace) {\n  logger('ERROR:', session.id, sub._subscriptionId); //use the current time to track the response time\n\n  var publication = this._getPublicationName(sub._name);\n\n  var subscriptionId = sub._subscriptionId;\n\n  var timestamp = Ntp._now();\n\n  var metrics = this._getMetrics(timestamp, publication);\n\n  metrics.errors++;\n\n  if (trace) {\n    this.tracerStore.addTrace(trace);\n  }\n};\n\nPubsubModel.prototype._getMetrics = function (timestamp, publication) {\n  var dateId = this._getDateId(timestamp);\n\n  if (!this.metricsByMinute[dateId]) {\n    this.metricsByMinute[dateId] = {\n      // startTime needs to be convert to serverTime before sending to the server\n      startTime: timestamp,\n      pubs: Object.create(null)\n    };\n  }\n\n  if (!this.metricsByMinute[dateId].pubs[publication]) {\n    this.metricsByMinute[dateId].pubs[publication] = {\n      subs: 0,\n      unsubs: 0,\n      resTime: 0,\n      activeSubs: 0,\n      activeDocs: 0,\n      lifeTime: 0,\n      totalObservers: 0,\n      cachedObservers: 0,\n      createdObservers: 0,\n      deletedObservers: 0,\n      errors: 0,\n      observerLifetime: 0,\n      polledDocuments: 0,\n      oplogUpdatedDocuments: 0,\n      oplogInsertedDocuments: 0,\n      oplogDeletedDocuments: 0,\n      initiallyAddedDocuments: 0,\n      liveAddedDocuments: 0,\n      liveChangedDocuments: 0,\n      liveRemovedDocuments: 0,\n      polledDocSize: 0,\n      fetchedDocSize: 0,\n      initiallyFetchedDocSize: 0,\n      liveFetchedDocSize: 0,\n      initiallySentMsgSize: 0,\n      liveSentMsgSize: 0,\n      histogram: new DDSketch({\n        alpha: 0.02\n      })\n    };\n  }\n\n  return this.metricsByMinute[dateId].pubs[publication];\n};\n\nPubsubModel.prototype._getPublicationName = function (name) {\n  return name || \"null(autopublish)\";\n};\n\nPubsubModel.prototype._getSubscriptionInfo = function () {\n  var self = this;\n  var activeSubs = Object.create(null);\n  var activeDocs = Object.create(null);\n  var totalDocsSent = Object.create(null);\n  var totalDataSent = Object.create(null);\n  var totalObservers = Object.create(null);\n  var cachedObservers = Object.create(null);\n  iterate(Meteor.server.sessions, session => {\n    iterate(session._namedSubs, countSubData);\n    iterate(session._universalSubs, countSubData);\n  });\n  var avgObserverReuse = Object.create(null);\n\n  _.each(totalObservers, function (value, publication) {\n    avgObserverReuse[publication] = cachedObservers[publication] / totalObservers[publication];\n  });\n\n  return {\n    activeSubs: activeSubs,\n    activeDocs: activeDocs,\n    avgObserverReuse: avgObserverReuse\n  };\n\n  function countSubData(sub) {\n    var publication = self._getPublicationName(sub._name);\n\n    countSubscriptions(sub, publication);\n    countDocuments(sub, publication);\n    countObservers(sub, publication);\n  }\n\n  function countSubscriptions(sub, publication) {\n    activeSubs[publication] = activeSubs[publication] || 0;\n    activeSubs[publication]++;\n  }\n\n  function countDocuments(sub, publication) {\n    activeDocs[publication] = activeDocs[publication] || 0;\n    iterate(sub._documents, collection => {\n      activeDocs[publication] += countKeys(collection);\n    });\n  }\n\n  function countObservers(sub, publication) {\n    totalObservers[publication] = totalObservers[publication] || 0;\n    cachedObservers[publication] = cachedObservers[publication] || 0;\n    totalObservers[publication] += sub._totalObservers;\n    cachedObservers[publication] += sub._cachedObservers;\n  }\n};\n\nPubsubModel.prototype.buildPayload = function (buildDetailInfo) {\n  var metricsByMinute = this.metricsByMinute;\n  this.metricsByMinute = Object.create(null);\n  var payload = {\n    pubMetrics: []\n  };\n\n  var subscriptionData = this._getSubscriptionInfo();\n\n  var activeSubs = subscriptionData.activeSubs;\n  var activeDocs = subscriptionData.activeDocs;\n  var avgObserverReuse = subscriptionData.avgObserverReuse; //to the averaging\n\n  for (var dateId in metricsByMinute) {\n    var dateMetrics = metricsByMinute[dateId]; // We need to convert startTime into actual serverTime\n\n    dateMetrics.startTime = Kadira.syncedDate.syncTime(dateMetrics.startTime);\n\n    for (var publication in metricsByMinute[dateId].pubs) {\n      var singlePubMetrics = metricsByMinute[dateId].pubs[publication]; // We only calculate resTime for new subscriptions\n\n      singlePubMetrics.resTime /= singlePubMetrics.subs;\n      singlePubMetrics.resTime = singlePubMetrics.resTime || 0; // We only track lifeTime in the unsubs\n\n      singlePubMetrics.lifeTime /= singlePubMetrics.unsubs;\n      singlePubMetrics.lifeTime = singlePubMetrics.lifeTime || 0; // Count the average for observer lifetime\n\n      if (singlePubMetrics.deletedObservers > 0) {\n        singlePubMetrics.observerLifetime /= singlePubMetrics.deletedObservers;\n      } // If there are two ore more dateIds, we will be using the currentCount for all of them.\n      // We can come up with a better solution later on.\n\n\n      singlePubMetrics.activeSubs = activeSubs[publication] || 0;\n      singlePubMetrics.activeDocs = activeDocs[publication] || 0;\n      singlePubMetrics.avgObserverReuse = avgObserverReuse[publication] || 0;\n    }\n\n    payload.pubMetrics.push(metricsByMinute[dateId]);\n  } //collect traces and send them with the payload\n\n\n  payload.pubRequests = this.tracerStore.collectTraces();\n  return payload;\n};\n\nPubsubModel.prototype.incrementHandleCount = function (trace, isCached) {\n  var timestamp = Ntp._now();\n\n  var publicationName = this._getPublicationName(trace.name);\n\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  var session = getProperty(Meteor.server.sessions, trace.session);\n\n  if (session) {\n    var sub = getProperty(session._namedSubs, trace.id);\n\n    if (sub) {\n      sub._totalObservers = sub._totalObservers || 0;\n      sub._cachedObservers = sub._cachedObservers || 0;\n    }\n  } // not sure, we need to do this? But I don't need to break the however\n\n\n  sub = sub || {\n    _totalObservers: 0,\n    _cachedObservers: 0\n  };\n  publication.totalObservers++;\n  sub._totalObservers++;\n\n  if (isCached) {\n    publication.cachedObservers++;\n    sub._cachedObservers++;\n  }\n};\n\nPubsubModel.prototype.trackCreatedObserver = function (info) {\n  var timestamp = Ntp._now();\n\n  var publicationName = this._getPublicationName(info.name);\n\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  publication.createdObservers++;\n};\n\nPubsubModel.prototype.trackDeletedObserver = function (info) {\n  var timestamp = Ntp._now();\n\n  var publicationName = this._getPublicationName(info.name);\n\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  publication.deletedObservers++;\n  publication.observerLifetime += new Date().getTime() - info.startTime;\n};\n\nPubsubModel.prototype.trackDocumentChanges = function (info, op) {\n  // It's possibel that info to be null\n  // Specially when getting changes at the very begining.\n  // This may be false, but nice to have a check\n  if (!info) {\n    return;\n  }\n\n  var timestamp = Ntp._now();\n\n  var publicationName = this._getPublicationName(info.name);\n\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  if (op.op === \"d\") {\n    publication.oplogDeletedDocuments++;\n  } else if (op.op === \"i\") {\n    publication.oplogInsertedDocuments++;\n  } else if (op.op === \"u\") {\n    publication.oplogUpdatedDocuments++;\n  }\n};\n\nPubsubModel.prototype.trackPolledDocuments = function (info, count) {\n  var timestamp = Ntp._now();\n\n  var publicationName = this._getPublicationName(info.name);\n\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  publication.polledDocuments += count;\n};\n\nPubsubModel.prototype.trackLiveUpdates = function (info, type, count) {\n  var timestamp = Ntp._now();\n\n  var publicationName = this._getPublicationName(info.name);\n\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  if (type === \"_addPublished\") {\n    publication.liveAddedDocuments += count;\n  } else if (type === \"_removePublished\") {\n    publication.liveRemovedDocuments += count;\n  } else if (type === \"_changePublished\") {\n    publication.liveChangedDocuments += count;\n  } else if (type === \"_initialAdds\") {\n    publication.initiallyAddedDocuments += count;\n  } else {\n    throw new Error(\"Kadira: Unknown live update type\");\n  }\n};\n\nPubsubModel.prototype.trackDocSize = function (name, type, size) {\n  var timestamp = Ntp._now();\n\n  var publicationName = this._getPublicationName(name);\n\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  if (type === \"polledFetches\") {\n    publication.polledDocSize += size;\n  } else if (type === \"liveFetches\") {\n    publication.liveFetchedDocSize += size;\n  } else if (type === \"cursorFetches\") {\n    publication.fetchedDocSize += size;\n  } else if (type === \"initialFetches\") {\n    publication.initiallyFetchedDocSize += size;\n  } else {\n    throw new Error(\"Kadira: Unknown docs fetched type\");\n  }\n};\n\nPubsubModel.prototype.trackMsgSize = function (name, type, size) {\n  var timestamp = Ntp._now();\n\n  var publicationName = this._getPublicationName(name);\n\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  if (type === \"liveSent\") {\n    publication.liveSentMsgSize += size;\n  } else if (type === \"initialSent\") {\n    publication.initiallySentMsgSize += size;\n  } else {\n    throw new Error(\"Kadira: Unknown docs fetched type\");\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"system.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/models/system.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet createHistogram;\nmodule.link(\"../utils.js\", {\n  createHistogram(v) {\n    createHistogram = v;\n  }\n\n}, 0);\nlet GCMetrics;\nmodule.link(\"../hijack/gc.js\", {\n  default(v) {\n    GCMetrics = v;\n  }\n\n}, 1);\nlet getFiberMetrics, resetFiberMetrics;\nmodule.link(\"../hijack/async.js\", {\n  getFiberMetrics(v) {\n    getFiberMetrics = v;\n  },\n\n  resetFiberMetrics(v) {\n    resetFiberMetrics = v;\n  }\n\n}, 2);\nlet getMongoDriverStats, resetMongoDriverStats;\nmodule.link(\"../hijack/mongo-driver-events.js\", {\n  getMongoDriverStats(v) {\n    getMongoDriverStats = v;\n  },\n\n  resetMongoDriverStats(v) {\n    resetMongoDriverStats = v;\n  }\n\n}, 3);\n\nvar EventLoopMonitor = Npm.require('evloop-monitor');\n\nSystemModel = function () {\n  this.startTime = Ntp._now();\n  this.newSessions = 0;\n  this.sessionTimeout = 1000 * 60 * 30; //30 min\n\n  this.evloopHistogram = createHistogram();\n  this.evloopMonitor = new EventLoopMonitor(200);\n  this.evloopMonitor.start();\n  this.evloopMonitor.on('lag', lag => {\n    // store as microsecond\n    this.evloopHistogram.add(lag * 1000);\n  });\n  this.gcMetrics = new GCMetrics();\n  this.gcMetrics.start();\n  this.cpuTime = process.hrtime();\n  this.previousCpuUsage = process.cpuUsage();\n  this.cpuHistory = [];\n  this.currentCpuUsage = 0;\n  setInterval(() => {\n    this.cpuUsage();\n  }, 2000);\n};\n\n_.extend(SystemModel.prototype, KadiraModel.prototype);\n\nSystemModel.prototype.buildPayload = function () {\n  var metrics = {};\n\n  var now = Ntp._now();\n\n  metrics.startTime = Kadira.syncedDate.syncTime(this.startTime);\n  metrics.endTime = Kadira.syncedDate.syncTime(now);\n  metrics.sessions = countKeys(Meteor.server.sessions);\n  let memoryUsage = process.memoryUsage();\n  metrics.memory = memoryUsage.rss / (1024 * 1024);\n  metrics.memoryArrayBuffers = (memoryUsage.arrayBuffers || 0) / (1024 * 1024);\n  metrics.memoryExternal = memoryUsage.external / (1024 * 1024);\n  metrics.memoryHeapUsed = memoryUsage.heapUsed / (1024 * 1024);\n  metrics.memoryHeapTotal = memoryUsage.heapTotal / (1024 * 1024);\n  metrics.newSessions = this.newSessions;\n  this.newSessions = 0;\n  metrics.activeRequests = process._getActiveRequests().length;\n  metrics.activeHandles = process._getActiveHandles().length; // track eventloop metrics\n\n  metrics.pctEvloopBlock = this.evloopMonitor.status().pctBlock;\n  metrics.evloopHistogram = this.evloopHistogram;\n  this.evloopHistogram = createHistogram();\n  metrics.gcMajorDuration = this.gcMetrics.metrics.gcMajor;\n  metrics.gcMinorDuration = this.gcMetrics.metrics.gcMinor;\n  metrics.gcIncrementalDuration = this.gcMetrics.metrics.gcIncremental;\n  metrics.gcWeakCBDuration = this.gcMetrics.metrics.gcWeakCB;\n  this.gcMetrics.reset();\n  const driverMetrics = getMongoDriverStats();\n  resetMongoDriverStats();\n  metrics.mongoPoolSize = driverMetrics.poolSize;\n  metrics.mongoPoolPrimaryCheckouts = driverMetrics.primaryCheckouts;\n  metrics.mongoPoolOtherCheckouts = driverMetrics.otherCheckouts;\n  metrics.mongoPoolCheckoutTime = driverMetrics.checkoutTime;\n  metrics.mongoPoolMaxCheckoutTime = driverMetrics.maxCheckoutTime;\n  metrics.mongoPoolPending = driverMetrics.pending;\n  metrics.mongoPoolCheckedOutConnections = driverMetrics.checkedOut;\n  metrics.mongoPoolCreatedConnections = driverMetrics.created;\n  const fiberMetrics = getFiberMetrics();\n  resetFiberMetrics();\n  metrics.createdFibers = fiberMetrics.created;\n  metrics.activeFibers = fiberMetrics.active;\n  metrics.fiberPoolSize = fiberMetrics.poolSize;\n  metrics.pcpu = 0;\n  metrics.pcpuUser = 0;\n  metrics.pcpuSystem = 0;\n\n  if (this.cpuHistory.length > 0) {\n    let lastCpuUsage = this.cpuHistory[this.cpuHistory.length - 1];\n    metrics.pcpu = lastCpuUsage.usage * 100;\n    metrics.pcpuUser = lastCpuUsage.user * 100;\n    metrics.pcpuSystem = lastCpuUsage.sys * 100;\n  }\n\n  metrics.cpuHistory = this.cpuHistory.map(entry => {\n    return {\n      time: Kadira.syncedDate.syncTime(entry.time),\n      usage: entry.usage,\n      sys: entry.sys,\n      user: entry.user\n    };\n  });\n  this.cpuHistory = [];\n  this.startTime = now;\n  return {\n    systemMetrics: [metrics]\n  };\n};\n\nfunction hrtimeToMS(hrtime) {\n  return hrtime[0] * 1000 + hrtime[1] / 1000000;\n}\n\nSystemModel.prototype.cpuUsage = function () {\n  var elapTimeMS = hrtimeToMS(process.hrtime(this.cpuTime));\n  var elapUsage = process.cpuUsage(this.previousCpuUsage);\n  var elapUserMS = elapUsage.user / 1000;\n  var elapSystMS = elapUsage.system / 1000;\n  var totalUsageMS = elapUserMS + elapSystMS;\n  var totalUsagePercent = totalUsageMS / elapTimeMS;\n  this.cpuHistory.push({\n    time: Ntp._now(),\n    usage: totalUsagePercent,\n    user: elapUserMS / elapTimeMS,\n    sys: elapSystMS / elapUsage.system\n  });\n  this.currentCpuUsage = totalUsagePercent * 100;\n  Kadira.docSzCache.setPcpu(this.currentCpuUsage);\n  this.cpuTime = process.hrtime();\n  this.previousCpuUsage = process.cpuUsage();\n};\n\nSystemModel.prototype.handleSessionActivity = function (msg, session) {\n  if (msg.msg === 'connect' && !msg.session) {\n    this.countNewSession(session);\n  } else if (['sub', 'method'].indexOf(msg.msg) != -1) {\n    if (!this.isSessionActive(session)) {\n      this.countNewSession(session);\n    }\n  }\n\n  session._activeAt = Date.now();\n};\n\nSystemModel.prototype.countNewSession = function (session) {\n  if (!isLocalAddress(session.socket)) {\n    this.newSessions++;\n  }\n};\n\nSystemModel.prototype.isSessionActive = function (session) {\n  var inactiveTime = Date.now() - session._activeAt;\n\n  return inactiveTime < this.sessionTimeout;\n}; // ------------------------------------------------------------------------- //\n// http://regex101.com/r/iF3yR3/2\n\n\nvar isLocalHostRegex = /^(?:.*\\.local|localhost)(?:\\:\\d+)?|127(?:\\.\\d{1,3}){3}|192\\.168(?:\\.\\d{1,3}){2}|10(?:\\.\\d{1,3}){3}|172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2}$/; // http://regex101.com/r/hM5gD8/1\n\nvar isLocalAddressRegex = /^127(?:\\.\\d{1,3}){3}|192\\.168(?:\\.\\d{1,3}){2}|10(?:\\.\\d{1,3}){3}|172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2}$/;\n\nfunction isLocalAddress(socket) {\n  var host = socket.headers['host'];\n  if (host) return isLocalHostRegex.test(host);\n  var address = socket.headers['x-forwarded-for'] || socket.remoteAddress;\n  if (address) return isLocalAddressRegex.test(address);\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"errors.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/models/errors.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nErrorModel = function (appId) {\n  BaseErrorModel.call(this);\n  var self = this;\n  this.appId = appId;\n  this.errors = {};\n  this.startTime = Date.now();\n  this.maxErrors = 10;\n};\n\nObject.assign(ErrorModel.prototype, KadiraModel.prototype);\nObject.assign(ErrorModel.prototype, BaseErrorModel.prototype);\n\nErrorModel.prototype.buildPayload = function () {\n  var metrics = _.values(this.errors);\n\n  this.startTime = Ntp._now();\n  metrics.forEach(function (metric) {\n    metric.startTime = Kadira.syncedDate.syncTime(metric.startTime);\n  });\n  this.errors = {};\n  return {\n    errors: metrics\n  };\n};\n\nErrorModel.prototype.errorCount = function () {\n  return _.values(this.errors).length;\n};\n\nErrorModel.prototype.trackError = function (ex, trace) {\n  var key = trace.type + ':' + ex.message;\n\n  if (this.errors[key]) {\n    this.errors[key].count++;\n  } else if (this.errorCount() < this.maxErrors) {\n    var errorDef = this._formatError(ex, trace);\n\n    if (this.applyFilters(errorDef.type, errorDef.name, ex, errorDef.subType)) {\n      this.errors[key] = this._formatError(ex, trace);\n    }\n  }\n};\n\nErrorModel.prototype._formatError = function (ex, trace) {\n  var time = Date.now();\n  var stack = ex.stack; // to get Meteor's Error details\n\n  if (ex.details) {\n    stack = \"Details: \" + ex.details + \"\\r\\n\" + stack;\n  } // Update trace's error event with the next stack\n\n\n  var errorEvent = trace.events && trace.events[trace.events.length - 1];\n  var errorObject = errorEvent && errorEvent[2] && errorEvent[2].error;\n\n  if (errorObject) {\n    errorObject.stack = stack;\n  }\n\n  return {\n    appId: this.appId,\n    name: ex.message,\n    type: trace.type,\n    startTime: time,\n    subType: trace.subType || trace.name,\n    trace: trace,\n    stacks: [{\n      stack: stack\n    }],\n    count: 1\n  };\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"http.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/models/http.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nconst {\n  DDSketch\n} = require('monti-apm-sketches-js');\n\nconst METHOD_METRICS_FIELDS = ['db', 'http', 'email', 'async', 'compute', 'total', 'fs'];\n\nconst HttpModel = function () {\n  this.metricsByMinute = Object.create(null);\n  this.tracerStore = new TracerStore({\n    interval: 1000 * 10,\n    maxTotalPoints: 30,\n    archiveEvery: 10\n  });\n  this.tracerStore.start();\n};\n\n_.extend(HttpModel.prototype, KadiraModel.prototype);\n\nHttpModel.prototype.processRequest = function (trace, req, res) {\n  const dateId = this._getDateId(trace.at);\n\n  this._appendMetrics(dateId, trace, res);\n\n  this.tracerStore.addTrace(trace);\n};\n\nHttpModel.prototype._getMetrics = function (timestamp, routeId) {\n  const dateId = this._getDateId(timestamp);\n\n  if (!this.metricsByMinute[dateId]) {\n    this.metricsByMinute[dateId] = {\n      routes: Object.create(null)\n    };\n  }\n\n  const routes = this.metricsByMinute[dateId].routes;\n\n  if (!routes[routeId]) {\n    routes[routeId] = {\n      histogram: new DDSketch({\n        alpha: 0.02\n      }),\n      count: 0,\n      errors: 0,\n      statusCodes: Object.create(null)\n    };\n    METHOD_METRICS_FIELDS.forEach(function (field) {\n      routes[routeId][field] = 0;\n    });\n  }\n\n  return this.metricsByMinute[dateId].routes[routeId];\n};\n\nHttpModel.prototype._appendMetrics = function (dateId, trace, res) {\n  var requestMetrics = this._getMetrics(dateId, trace.name);\n\n  if (!this.metricsByMinute[dateId].startTime) {\n    this.metricsByMinute[dateId].startTime = trace.at;\n  } // merge\n\n\n  METHOD_METRICS_FIELDS.forEach(field => {\n    var value = trace.metrics[field];\n\n    if (value > 0) {\n      requestMetrics[field] += value;\n    }\n  });\n  const statusCode = res.statusCode;\n  let statusMetric;\n\n  if (statusCode < 200) {\n    statusMetric = '1xx';\n  } else if (statusCode < 300) {\n    statusMetric = '2xx';\n  } else if (statusCode < 400) {\n    statusMetric = '3xx';\n  } else if (statusCode < 500) {\n    statusMetric = '4xx';\n  } else if (statusCode < 600) {\n    statusMetric = '5xx';\n  }\n\n  requestMetrics.statusCodes[statusMetric] = requestMetrics.statusCodes[statusMetric] || 0;\n  requestMetrics.statusCodes[statusMetric] += 1;\n  requestMetrics.count += 1;\n  requestMetrics.histogram.add(trace.metrics.total);\n  this.metricsByMinute[dateId].endTime = trace.metrics.at;\n};\n\nHttpModel.prototype.buildPayload = function () {\n  var payload = {\n    httpMetrics: [],\n    httpRequests: []\n  };\n  var metricsByMinute = this.metricsByMinute;\n  this.metricsByMinute = Object.create(null);\n\n  for (var key in metricsByMinute) {\n    var metrics = metricsByMinute[key]; // convert startTime into the actual serverTime\n\n    var startTime = metrics.startTime;\n    metrics.startTime = Kadira.syncedDate.syncTime(startTime);\n\n    for (var requestName in metrics.routes) {\n      METHOD_METRICS_FIELDS.forEach(function (field) {\n        metrics.routes[requestName][field] /= metrics.routes[requestName].count;\n      });\n    }\n\n    payload.httpMetrics.push(metricsByMinute[key]);\n  }\n\n  payload.httpRequests = this.tracerStore.collectTraces();\n  return payload;\n};\n\nmodule.exportDefault(HttpModel);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"jobs.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/jobs.js                                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Jobs = Kadira.Jobs = {};\n\nJobs.getAsync = function (id, callback) {\n  Kadira.coreApi.getJob(id).then(function (data) {\n    callback(null, data);\n  }).catch(function (err) {\n    callback(err);\n  });\n};\n\nJobs.setAsync = function (id, changes, callback) {\n  Kadira.coreApi.updateJob(id, changes).then(function (data) {\n    callback(null, data);\n  }).catch(function (err) {\n    callback(err);\n  });\n};\n\nJobs.set = Kadira._wrapAsync(Jobs.setAsync);\nJobs.get = Kadira._wrapAsync(Jobs.getAsync);\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"retry.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/retry.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// Retry logic with an exponential backoff.\n//\n// options:\n//  baseTimeout: time for initial reconnect attempt (ms).\n//  exponent: exponential factor to increase timeout each attempt.\n//  maxTimeout: maximum time between retries (ms).\n//  minCount: how many times to reconnect \"instantly\".\n//  minTimeout: time to wait for the first `minCount` retries (ms).\n//  fuzz: factor to randomize retry times by (to avoid retry storms).\n//TODO: remove this class and use Meteor Retry in a later version of meteor.\nRetry = class {\n  constructor() {\n    let {\n      baseTimeout = 1000,\n      // 1 second\n      exponent = 2.2,\n      // The default is high-ish to ensure a server can recover from a\n      // failure caused by load.\n      maxTimeout = 5 * 60000,\n      // 5 minutes\n      minTimeout = 10,\n      minCount = 2,\n      fuzz = 0.5 // +- 25%\n\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.baseTimeout = baseTimeout;\n    this.exponent = exponent;\n    this.maxTimeout = maxTimeout;\n    this.minTimeout = minTimeout;\n    this.minCount = minCount;\n    this.fuzz = fuzz;\n    this.retryTimer = null;\n  } // Reset a pending retry, if any.\n\n\n  clear() {\n    if (this.retryTimer) clearTimeout(this.retryTimer);\n    this.retryTimer = null;\n  } // Calculate how long to wait in milliseconds to retry, based on the\n  // `count` of which retry this is.\n\n\n  _timeout(count) {\n    if (count < this.minCount) return this.minTimeout;\n    let timeout = Math.min(this.maxTimeout, this.baseTimeout * Math.pow(this.exponent, count)); // fuzz the timeout randomly, to avoid reconnect storms when a\n    // server goes down.\n\n    timeout = timeout * (Random.fraction() * this.fuzz + (1 - this.fuzz / 2));\n    return Math.ceil(timeout);\n  } // Call `fn` after a delay, based on the `count` of which retry this is.\n\n\n  retryLater(count, fn) {\n    const timeout = this._timeout(count);\n\n    if (this.retryTimer) clearTimeout(this.retryTimer);\n    this.retryTimer = setTimeout(fn, timeout);\n    return timeout;\n  }\n\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"utils.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/utils.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  createHistogram: () => createHistogram\n});\n\nconst {\n  DDSketch\n} = require('monti-apm-sketches-js');\n\nHaveAsyncCallback = function (args) {\n  var lastArg = args[args.length - 1];\n  return typeof lastArg == 'function';\n};\n\nUniqueId = function (start) {\n  this.id = 0;\n};\n\nUniqueId.prototype.get = function () {\n  return \"\" + this.id++;\n};\n\nDefaultUniqueId = new UniqueId(); // creates a stack trace, removing frames in montiapm:agent's code\n\nCreateUserStack = function (error) {\n  const stack = (error || new Error()).stack.split('\\n');\n  let toRemove = 1; // Find how many frames need to be removed\n  // to make the user's code the first frame\n\n  for (; toRemove < stack.length; toRemove++) {\n    if (stack[toRemove].indexOf('montiapm:agent') === -1) {\n      break;\n    }\n  }\n\n  return stack.slice(toRemove).join('\\n');\n}; // Optimized version of apply which tries to call as possible as it can\n// Then fall back to apply\n// This is because, v8 is very slow to invoke apply.\n\n\nOptimizedApply = function OptimizedApply(context, fn, args) {\n  var a = args;\n\n  switch (a.length) {\n    case 0:\n      return fn.call(context);\n\n    case 1:\n      return fn.call(context, a[0]);\n\n    case 2:\n      return fn.call(context, a[0], a[1]);\n\n    case 3:\n      return fn.call(context, a[0], a[1], a[2]);\n\n    case 4:\n      return fn.call(context, a[0], a[1], a[2], a[3]);\n\n    case 5:\n      return fn.call(context, a[0], a[1], a[2], a[3], a[4]);\n\n    default:\n      return fn.apply(context, a);\n  }\n};\n\ngetClientVersions = function () {\n  return {\n    'web.cordova': getClientArchVersion('web.cordova'),\n    'web.browser': getClientArchVersion('web.browser'),\n    'web.browser.legacy': getClientArchVersion('web.browser.legacy')\n  };\n}; // Returns number of keys of an object, or size of a Map or Set\n\n\ncountKeys = function (obj) {\n  if (obj instanceof Map || obj instanceof Set) {\n    return obj.size;\n  }\n\n  return Object.keys(obj).length;\n}; // Iterates objects and maps.\n// Callback is called with a value and key\n\n\niterate = function (obj, callback) {\n  if (obj instanceof Map) {\n    return obj.forEach(callback);\n  }\n\n  for (var key in obj) {\n    var value = obj[key];\n    callback(value, key);\n  }\n}; // Returns a property from an object, or an entry from a map\n\n\ngetProperty = function (obj, key) {\n  if (obj instanceof Map) {\n    return obj.get(key);\n  }\n\n  return obj[key];\n};\n\nfunction createHistogram() {\n  return new DDSketch({\n    alpha: 0.02\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ntp.js\":function module(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/ntp.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar logger = getLogger();\n\nNtp = function (endpoint) {\n  this.path = '/simplentp/sync';\n  this.setEndpoint(endpoint);\n  this.diff = 0;\n  this.synced = false;\n  this.reSyncCount = 0;\n  this.reSync = new Retry({\n    baseTimeout: 1000 * 60,\n    maxTimeout: 1000 * 60 * 10,\n    minCount: 0\n  });\n};\n\nNtp._now = function () {\n  var now = Date.now();\n\n  if (typeof now == 'number') {\n    return now;\n  } else if (now instanceof Date) {\n    // some extenal JS libraries override Date.now and returns a Date object\n    // which directly affect us. So we need to prepare for that\n    return now.getTime();\n  } else {\n    // trust me. I've seen now === undefined\n    return new Date().getTime();\n  }\n};\n\nNtp.prototype.setEndpoint = function (endpoint) {\n  this.endpoint = endpoint + this.path;\n};\n\nNtp.prototype.getTime = function () {\n  return Ntp._now() + Math.round(this.diff);\n};\n\nNtp.prototype.syncTime = function (localTime) {\n  return localTime + Math.ceil(this.diff);\n};\n\nNtp.prototype.sync = function () {\n  logger('init sync');\n  var self = this;\n  var retryCount = 0;\n  var retry = new Retry({\n    baseTimeout: 1000 * 20,\n    maxTimeout: 1000 * 60,\n    minCount: 1,\n    minTimeout: 0\n  });\n  syncTime();\n\n  function syncTime() {\n    if (retryCount < 5) {\n      logger('attempt time sync with server', retryCount); // if we send 0 to the retryLater, cacheDns will run immediately\n\n      retry.retryLater(retryCount++, cacheDns);\n    } else {\n      logger('maximum retries reached');\n      self.reSync.retryLater(self.reSyncCount++, function () {\n        var args = [].slice.call(arguments);\n        self.sync.apply(self, args);\n      });\n    }\n  } // first attempt is to cache dns. So, calculation does not\n  // include DNS resolution time\n\n\n  function cacheDns() {\n    self.getServerTime(function (err) {\n      if (!err) {\n        calculateTimeDiff();\n      } else {\n        syncTime();\n      }\n    });\n  }\n\n  function calculateTimeDiff() {\n    var clientStartTime = new Date().getTime();\n    self.getServerTime(function (err, serverTime) {\n      if (!err && serverTime) {\n        // (Date.now() + clientStartTime)/2 : Midpoint between req and res\n        var networkTime = (new Date().getTime() - clientStartTime) / 2;\n        var serverStartTime = serverTime - networkTime;\n        self.diff = serverStartTime - clientStartTime;\n        self.synced = true; // we need to send 1 into retryLater.\n\n        self.reSync.retryLater(self.reSyncCount++, function () {\n          var args = [].slice.call(arguments);\n          self.sync.apply(self, args);\n        });\n        logger('successfully updated diff value', self.diff);\n      } else {\n        syncTime();\n      }\n    });\n  }\n};\n\nNtp.prototype.getServerTime = function (callback) {\n  var self = this;\n\n  if (Meteor.isServer) {\n    Kadira.coreApi.get(self.path, {\n      noRetries: true\n    }).then(content => {\n      var serverTime = parseInt(content);\n      callback(null, serverTime);\n    }).catch(err => {\n      callback(err);\n    });\n  } else {\n    httpRequest('GET', self.endpoint + \"?noCache=\".concat(new Date().getTime(), \"-\").concat(Math.random()), function (err, res) {\n      if (err) {\n        callback(err);\n      } else {\n        var serverTime = parseInt(res.content);\n        callback(null, serverTime);\n      }\n    });\n  }\n};\n\nfunction getLogger() {\n  if (Meteor.isServer) {\n    return Npm.require('debug')(\"kadira:ntp\");\n  } else {\n    return function (message) {\n      var canLogKadira = Meteor._localStorage.getItem('LOG_KADIRA') !== null && typeof console !== 'undefined';\n\n      if (canLogKadira) {\n        if (message) {\n          message = \"kadira:ntp \" + message;\n          arguments[0] = message;\n        }\n\n        console.log.apply(console, arguments);\n      }\n    };\n  }\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"sourcemaps.js\":function module(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/sourcemaps.js                                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar url = Npm.require('url');\n\nvar path = Npm.require('path');\n\nvar fs = Npm.require('fs');\n\nvar logger = Npm.require('debug')('kadira:apm:sourcemaps'); // Meteor 1.7 and older used clientPaths\n\n\nvar clientPaths = __meteor_bootstrap__.configJson.clientPaths;\nvar clientArchs = __meteor_bootstrap__.configJson.clientArchs;\nvar serverDir = __meteor_bootstrap__.serverDir;\nvar absClientPaths;\n\nif (clientArchs) {\n  absClientPaths = clientArchs.reduce((result, arch) => {\n    result[arch] = path.resolve(path.dirname(serverDir), arch);\n    return result;\n  }, {});\n} else {\n  absClientPaths = Object.keys(clientPaths).reduce((result, key) => {\n    result[key] = path.resolve(serverDir, path.dirname(clientPaths[key]));\n    return result;\n  }, {});\n}\n\nhandleApiResponse = function () {\n  let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var unavailable = [];\n\n  if (typeof body === 'string') {\n    try {\n      body = JSON.parse(body);\n    } catch (e) {\n      logger('failed parsing body', e, body);\n      return;\n    }\n  }\n\n  var neededSourcemaps = body.neededSourcemaps || [];\n  logger('body', neededSourcemaps);\n  var promises = neededSourcemaps.map(sourcemap => {\n    if (!Kadira.options.uploadSourceMaps) {\n      return unavailable.push(sourcemap);\n    }\n\n    return getSourcemapPath(sourcemap.arch, sourcemap.file.path).then(function (sourceMapPath) {\n      if (sourceMapPath === null) {\n        unavailable.push(sourcemap);\n      } else {\n        sendSourcemap(sourcemap, sourceMapPath);\n      }\n    });\n  });\n  Promise.all(promises).then(function () {\n    if (unavailable.length > 0) {\n      logger('sending unavailable sourcemaps', unavailable);\n      Kadira.coreApi.sendData({\n        unavailableSourcemaps: unavailable\n      }).then(function (body) {\n        handleApiResponse(body);\n      }).catch(function (err) {\n        console.log('Monti APM: unable to send data', err);\n      });\n    }\n  });\n};\n\nfunction sendSourcemap(sourcemap, sourcemapPath) {\n  logger('Sending sourcemap', sourcemap, sourcemapPath);\n  var stream = fs.createReadStream(sourcemapPath);\n  stream.on('error', err => {\n    console.log('Monti APM: error while uploading sourcemap', err);\n  });\n  var arch = sourcemap.arch;\n  var archVersion = sourcemap.archVersion;\n  var file = encodeURIComponent(sourcemap.file.path);\n  Kadira.coreApi.sendStream(\"/sourcemap?arch=\".concat(arch, \"&archVersion=\").concat(archVersion, \"&file=\").concat(file), stream).catch(function (err) {\n    console.log('Monti APM: error uploading sourcemap', err);\n  });\n}\n\nfunction preparePath(urlPath) {\n  urlPath = path.posix.normalize(urlPath);\n\n  if (urlPath[0] === '/') {\n    urlPath = urlPath.slice(1);\n  }\n\n  return urlPath;\n}\n\nfunction checkForDynamicImport(arch, urlPath) {\n  const filePath = preparePath(urlPath);\n  return new Promise(function (resolve) {\n    const archPath = absClientPaths[arch];\n    const dynamicPath = path.join(archPath, 'dynamic', filePath) + '.map';\n    fs.stat(dynamicPath, function (err) {\n      resolve(err ? null : dynamicPath);\n    });\n  });\n}\n\nfunction getSourcemapPath(arch, urlPath) {\n  return new Promise((resolve, reject) => {\n    var clientProgram = WebApp.clientPrograms[arch];\n\n    if (!clientProgram || !clientProgram.manifest) {\n      return resolve(null);\n    }\n\n    var fileInfo = clientProgram.manifest.find(file => {\n      return file.url && file.url.startsWith(urlPath);\n    });\n\n    if (fileInfo && fileInfo.sourceMap) {\n      return resolve(path.join(absClientPaths[arch], fileInfo.sourceMap));\n    }\n\n    checkForDynamicImport(arch, urlPath).then(resolve).catch(reject);\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"wait_time_builder.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/wait_time_builder.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar WAITON_MESSAGE_FIELDS = ['msg', 'id', 'method', 'name', 'waitTime']; // This is way how we can build waitTime and it's breakdown\n\nWaitTimeBuilder = function () {\n  this._waitListStore = {};\n  this._currentProcessingMessages = {};\n  this._messageCache = {};\n};\n\nWaitTimeBuilder.prototype.register = function (session, msgId) {\n  var self = this;\n\n  var mainKey = self._getMessageKey(session.id, msgId);\n\n  var inQueue = session.inQueue || [];\n\n  if (typeof inQueue.toArray === 'function') {\n    // latest version of Meteor uses a double-ended-queue for the inQueue\n    // info: https://www.npmjs.com/package/double-ended-queue\n    inQueue = inQueue.toArray();\n  }\n\n  var waitList = inQueue.map(function (msg) {\n    var key = self._getMessageKey(session.id, msg.id);\n\n    return self._getCacheMessage(key, msg);\n  });\n  waitList = waitList || []; //add currently processing ddp message if exists\n\n  var currentlyProcessingMessage = this._currentProcessingMessages[session.id];\n\n  if (currentlyProcessingMessage) {\n    var key = self._getMessageKey(session.id, currentlyProcessingMessage.id);\n\n    waitList.unshift(this._getCacheMessage(key, currentlyProcessingMessage));\n  }\n\n  this._waitListStore[mainKey] = waitList;\n};\n\nWaitTimeBuilder.prototype.build = function (session, msgId) {\n  var mainKey = this._getMessageKey(session.id, msgId);\n\n  var waitList = this._waitListStore[mainKey] || [];\n  delete this._waitListStore[mainKey];\n  var filteredWaitList = waitList.map(this._cleanCacheMessage.bind(this));\n  return filteredWaitList;\n};\n\nWaitTimeBuilder.prototype._getMessageKey = function (sessionId, msgId) {\n  return sessionId + \"::\" + msgId;\n};\n\nWaitTimeBuilder.prototype._getCacheMessage = function (key, msg) {\n  var self = this;\n  var cachedMessage = self._messageCache[key];\n\n  if (!cachedMessage) {\n    self._messageCache[key] = cachedMessage = _.pick(msg, WAITON_MESSAGE_FIELDS);\n    cachedMessage._key = key;\n    cachedMessage._registered = 1;\n  } else {\n    cachedMessage._registered++;\n  }\n\n  return cachedMessage;\n};\n\nWaitTimeBuilder.prototype._cleanCacheMessage = function (msg) {\n  msg._registered--;\n\n  if (msg._registered == 0) {\n    delete this._messageCache[msg._key];\n  } // need to send a clean set of objects\n  // otherwise register can go with this\n\n\n  return _.pick(msg, WAITON_MESSAGE_FIELDS);\n};\n\nWaitTimeBuilder.prototype.trackWaitTime = function (session, msg, unblock) {\n  var self = this;\n  var started = Date.now();\n  self._currentProcessingMessages[session.id] = msg;\n  var unblocked = false;\n\n  var wrappedUnblock = function () {\n    if (!unblocked) {\n      var waitTime = Date.now() - started;\n\n      var key = self._getMessageKey(session.id, msg.id);\n\n      var cachedMessage = self._messageCache[key];\n\n      if (cachedMessage) {\n        cachedMessage.waitTime = waitTime;\n      }\n\n      delete self._currentProcessingMessages[session.id];\n      unblocked = true;\n      unblock();\n    }\n  };\n\n  return wrappedUnblock;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"check_for_oplog.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/check_for_oplog.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// expose for testing purpose\nOplogCheck = {};\n\nOplogCheck._070 = function (cursorDescription) {\n  var options = cursorDescription.options;\n\n  if (options.limit) {\n    return {\n      code: \"070_LIMIT_NOT_SUPPORTED\",\n      reason: \"Meteor 0.7.0 does not support limit with oplog.\",\n      solution: \"Upgrade your app to Meteor version 0.7.2 or later.\"\n    };\n  }\n\n  ;\n\n  var exists$ = _.any(cursorDescription.selector, function (value, field) {\n    if (field.substr(0, 1) === '$') return true;\n  });\n\n  if (exists$) {\n    return {\n      code: \"070_$_NOT_SUPPORTED\",\n      reason: \"Meteor 0.7.0 supports only equal checks with oplog.\",\n      solution: \"Upgrade your app to Meteor version 0.7.2 or later.\"\n    };\n  }\n\n  ;\n\n  var onlyScalers = _.all(cursorDescription.selector, function (value, field) {\n    return typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\" || value === null || value instanceof Meteor.Collection.ObjectID;\n  });\n\n  if (!onlyScalers) {\n    return {\n      code: \"070_ONLY_SCALERS\",\n      reason: \"Meteor 0.7.0 only supports scalers as comparators.\",\n      solution: \"Upgrade your app to Meteor version 0.7.2 or later.\"\n    };\n  }\n\n  return true;\n};\n\nOplogCheck._071 = function (cursorDescription) {\n  var options = cursorDescription.options;\n  var matcher = new Minimongo.Matcher(cursorDescription.selector);\n\n  if (options.limit) {\n    return {\n      code: \"071_LIMIT_NOT_SUPPORTED\",\n      reason: \"Meteor 0.7.1 does not support limit with oplog.\",\n      solution: \"Upgrade your app to Meteor version 0.7.2 or later.\"\n    };\n  }\n\n  ;\n  return true;\n};\n\nOplogCheck.env = function () {\n  if (!process.env.MONGO_OPLOG_URL) {\n    return {\n      code: \"NO_ENV\",\n      reason: \"You haven't added oplog support for your the Meteor app.\",\n      solution: \"Add oplog support for your Meteor app. see: http://goo.gl/Co1jJc\"\n    };\n  } else {\n    return true;\n  }\n};\n\nOplogCheck.disableOplog = function (cursorDescription) {\n  if (cursorDescription.options._disableOplog) {\n    return {\n      code: \"DISABLE_OPLOG\",\n      reason: \"You've disable oplog for this cursor explicitly with _disableOplog option.\"\n    };\n  } else {\n    return true;\n  }\n}; // when creating Minimongo.Matcher object, if that's throws an exception\n// meteor won't do the oplog support\n\n\nOplogCheck.miniMongoMatcher = function (cursorDescription) {\n  if (Minimongo.Matcher) {\n    try {\n      var matcher = new Minimongo.Matcher(cursorDescription.selector);\n      return true;\n    } catch (ex) {\n      return {\n        code: \"MINIMONGO_MATCHER_ERROR\",\n        reason: \"There's something wrong in your mongo query: \" + ex.message,\n        solution: \"Check your selector and change it accordingly.\"\n      };\n    }\n  } else {\n    // If there is no Minimongo.Matcher, we don't need to check this\n    return true;\n  }\n};\n\nOplogCheck.miniMongoSorter = function (cursorDescription) {\n  var matcher = new Minimongo.Matcher(cursorDescription.selector);\n\n  if (Minimongo.Sorter && cursorDescription.options.sort) {\n    try {\n      var sorter = new Minimongo.Sorter(cursorDescription.options.sort, {\n        matcher: matcher\n      });\n      return true;\n    } catch (ex) {\n      return {\n        code: \"MINIMONGO_SORTER_ERROR\",\n        reason: \"Some of your sort specifiers are not supported: \" + ex.message,\n        solution: \"Check your sort specifiers and chage them accordingly.\"\n      };\n    }\n  } else {\n    return true;\n  }\n};\n\nOplogCheck.fields = function (cursorDescription) {\n  var options = cursorDescription.options;\n\n  if (options.fields) {\n    try {\n      LocalCollection._checkSupportedProjection(options.fields);\n\n      return true;\n    } catch (e) {\n      if (e.name === \"MinimongoError\") {\n        return {\n          code: \"NOT_SUPPORTED_FIELDS\",\n          reason: \"Some of the field filters are not supported: \" + e.message,\n          solution: \"Try removing those field filters.\"\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  return true;\n};\n\nOplogCheck.skip = function (cursorDescription) {\n  if (cursorDescription.options.skip) {\n    return {\n      code: \"SKIP_NOT_SUPPORTED\",\n      reason: \"Skip does not support with oplog.\",\n      solution: \"Try to avoid using skip. Use range queries instead: http://goo.gl/b522Av\"\n    };\n  }\n\n  return true;\n};\n\nOplogCheck.where = function (cursorDescription) {\n  var matcher = new Minimongo.Matcher(cursorDescription.selector);\n\n  if (matcher.hasWhere()) {\n    return {\n      code: \"WHERE_NOT_SUPPORTED\",\n      reason: \"Meteor does not support queries with $where.\",\n      solution: \"Try to remove $where from your query. Use some alternative.\"\n    };\n  }\n\n  ;\n  return true;\n};\n\nOplogCheck.geo = function (cursorDescription) {\n  var matcher = new Minimongo.Matcher(cursorDescription.selector);\n\n  if (matcher.hasGeoQuery()) {\n    return {\n      code: \"GEO_NOT_SUPPORTED\",\n      reason: \"Meteor does not support queries with geo partial operators.\",\n      solution: \"Try to remove geo partial operators from your query if possible.\"\n    };\n  }\n\n  ;\n  return true;\n};\n\nOplogCheck.limitButNoSort = function (cursorDescription) {\n  var options = cursorDescription.options;\n\n  if (options.limit && !options.sort) {\n    return {\n      code: \"LIMIT_NO_SORT\",\n      reason: \"Meteor oplog implementation does not support limit without a sort specifier.\",\n      solution: \"Try adding a sort specifier.\"\n    };\n  }\n\n  ;\n  return true;\n};\n\nOplogCheck.olderVersion = function (cursorDescription, driver) {\n  if (driver && !driver.constructor.cursorSupported) {\n    return {\n      code: \"OLDER_VERSION\",\n      reason: \"Your Meteor version does not have oplog support.\",\n      solution: \"Upgrade your app to Meteor version 0.7.2 or later.\"\n    };\n  }\n\n  return true;\n};\n\nOplogCheck.gitCheckout = function (cursorDescription, driver) {\n  if (!Meteor.release) {\n    return {\n      code: \"GIT_CHECKOUT\",\n      reason: \"Seems like your Meteor version is based on a Git checkout and it doesn't have the oplog support.\",\n      solution: \"Try to upgrade your Meteor version.\"\n    };\n  }\n\n  return true;\n};\n\nvar preRunningMatchers = [OplogCheck.env, OplogCheck.disableOplog, OplogCheck.miniMongoMatcher];\nvar globalMatchers = [OplogCheck.fields, OplogCheck.skip, OplogCheck.where, OplogCheck.geo, OplogCheck.limitButNoSort, OplogCheck.miniMongoSorter, OplogCheck.olderVersion, OplogCheck.gitCheckout];\nvar versionMatchers = [[/^0\\.7\\.1/, OplogCheck._071], [/^0\\.7\\.0/, OplogCheck._070]];\n\nKadira.checkWhyNoOplog = function (cursorDescription, observerDriver) {\n  if (typeof Minimongo == 'undefined') {\n    return {\n      code: \"CANNOT_DETECT\",\n      reason: \"You are running an older Meteor version and Kadira can't check oplog state.\",\n      solution: \"Try updating your Meteor app\"\n    };\n  }\n\n  var result = runMatchers(preRunningMatchers, cursorDescription, observerDriver);\n\n  if (result !== true) {\n    return result;\n  }\n\n  var meteorVersion = Meteor.release;\n\n  for (var lc = 0; lc < versionMatchers.length; lc++) {\n    var matcherInfo = versionMatchers[lc];\n\n    if (matcherInfo[0].test(meteorVersion)) {\n      var matched = matcherInfo[1](cursorDescription, observerDriver);\n\n      if (matched !== true) {\n        return matched;\n      }\n    }\n  }\n\n  result = runMatchers(globalMatchers, cursorDescription, observerDriver);\n\n  if (result !== true) {\n    return result;\n  }\n\n  return {\n    code: \"OPLOG_SUPPORTED\",\n    reason: \"This query should support oplog. It's weird if it's not.\",\n    solution: \"Please contact Kadira support and let's discuss.\"\n  };\n};\n\nfunction runMatchers(matcherList, cursorDescription, observerDriver) {\n  for (var lc = 0; lc < matcherList.length; lc++) {\n    var matcher = matcherList[lc];\n    var matched = matcher(cursorDescription, observerDriver);\n\n    if (matched !== true) {\n      return matched;\n    }\n  }\n\n  return true;\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tracer\":{\"tracer.js\":function module(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/tracer/tracer.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar eventLogger = Npm.require('debug')('kadira:tracer');\n\nvar REPETITIVE_EVENTS = {\n  'db': true,\n  'http': true,\n  'email': true,\n  'wait': true,\n  'async': true,\n  'custom': true,\n  'fs': true\n};\nvar TRACE_TYPES = ['sub', 'method', 'http'];\nvar MAX_TRACE_EVENTS = 1500;\n\nTracer = function Tracer() {\n  this._filters = [];\n  this._filterFields = ['password'];\n  this.maxArrayItemsToFilter = 20;\n}; //In the future, we might wan't to track inner fiber events too.\n//Then we can't serialize the object with methods\n//That's why we use this method of returning the data\n\n\nTracer.prototype.start = function (name, type) {\n  let {\n    sessionId,\n    msgId,\n    userId\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // for backward compatibility\n  if (typeof name === 'object' && typeof type === 'object') {\n    let session = name;\n    let msg = type;\n    sessionId = session.id;\n    msgId = msg.id;\n    userId = session.userId;\n\n    if (msg.msg == 'method') {\n      type = 'method';\n      name = msg.method;\n    } else if (msg.msg == 'sub') {\n      type = 'sub';\n      name = msg.name;\n    } else {\n      return null;\n    }\n  }\n\n  if (TRACE_TYPES.indexOf(type) === -1) {\n    console.warn(\"Monti APM: unknown trace type \\\"\".concat(type, \"\\\"\"));\n    return null;\n  }\n\n  var traceInfo = {\n    _id: \"\".concat(sessionId, \"::\").concat(msgId || DefaultUniqueId.get()),\n    type,\n    name,\n    session: sessionId,\n    id: msgId,\n    events: [],\n    userId\n  };\n  return traceInfo;\n};\n\nTracer.prototype.event = function (traceInfo, type, data, metaData) {\n  // do not allow to proceed, if already completed or errored\n  var lastEvent = this.getLastEvent(traceInfo);\n\n  if ( // trace completed but has not been processed\n  lastEvent && ['complete', 'error'].indexOf(lastEvent.type) >= 0 || // trace completed and processed.\n  traceInfo.isEventsProcessed) {\n    return false;\n  }\n\n  var event = {\n    type,\n    at: Ntp._now(),\n    endAt: null,\n    nested: []\n  }; // special handling for events that are not repetitive\n\n  if (!REPETITIVE_EVENTS[type]) {\n    event.endAt = event.at;\n  }\n\n  if (data) {\n    var info = _.pick(traceInfo, 'type', 'name');\n\n    event.data = this._applyFilters(type, data, info, \"start\");\n  }\n\n  if (metaData && metaData.name) {\n    event.name = metaData.name;\n  }\n\n  if (Kadira.options.eventStackTrace) {\n    event.stack = CreateUserStack();\n  }\n\n  eventLogger(\"%s %s\", type, traceInfo._id);\n\n  if (lastEvent && !lastEvent.endAt) {\n    if (!lastEvent.nested) {\n      console.error('Monti: invalid trace. Please share the trace below at');\n      console.error('Monti: https://github.com/monti-apm/monti-apm-agent/issues/14');\n      console.dir(traceInfo, {\n        depth: 10\n      });\n    }\n\n    var lastNested = lastEvent.nested[lastEvent.nested.length - 1]; // Only nest one level\n\n    if (!lastNested || lastNested.endAt) {\n      lastEvent.nested.push(event);\n      return event;\n    }\n\n    return false;\n  }\n\n  traceInfo.events.push(event);\n  return event;\n};\n\nTracer.prototype.eventEnd = function (traceInfo, event, data) {\n  if (event.endAt) {\n    // Event already ended or is not a repititive event\n    return false;\n  }\n\n  event.endAt = Ntp._now();\n\n  if (data) {\n    var info = _.pick(traceInfo, 'type', 'name');\n\n    event.data = Object.assign(event.data || {}, this._applyFilters(\"\".concat(event.type, \"end\"), data, info, 'end'));\n  }\n\n  eventLogger(\"%s %s\", event.type + 'end', traceInfo._id);\n  return true;\n};\n\nTracer.prototype.getLastEvent = function (traceInfo) {\n  return traceInfo.events[traceInfo.events.length - 1];\n};\n\nTracer.prototype.endLastEvent = function (traceInfo) {\n  var lastEvent = this.getLastEvent(traceInfo);\n\n  if (!lastEvent.endAt) {\n    this.eventEnd(traceInfo, lastEvent);\n    lastEvent.forcedEnd = true;\n    return true;\n  }\n\n  return false;\n}; // Most of the time, all of the nested events are async\n// which is not helpful. This returns true if\n// there are nested events other than async.\n\n\nTracer.prototype._hasUsefulNested = function (event) {\n  return !event.nested.every(event => {\n    return event.type === 'async';\n  });\n};\n\nTracer.prototype.buildEvent = function (event) {\n  let depth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let trace = arguments.length > 2 ? arguments[2] : undefined;\n  var elapsedTimeForEvent = event.endAt - event.at;\n  var builtEvent = [event.type];\n  var nested = [];\n  builtEvent.push(elapsedTimeForEvent);\n  builtEvent.push(event.data || {});\n\n  if (event.nested.length && this._hasUsefulNested(event)) {\n    let prevEnd = event.at;\n\n    for (let i = 0; i < event.nested.length; i++) {\n      var nestedEvent = event.nested[i];\n\n      if (!nestedEvent.endAt) {\n        this.eventEnd(trace, nestedEvent);\n        nestedEvent.forcedEnd = true;\n      }\n\n      var computeTime = nestedEvent.at - prevEnd;\n\n      if (computeTime > 0) {\n        nested.push(['compute', computeTime]);\n      }\n\n      nested.push(this.buildEvent(nestedEvent, depth + 1, trace));\n      prevEnd = nestedEvent.endAt;\n    }\n  }\n\n  if (nested.length || event.stack || event.forcedEnd || event.name) {\n    builtEvent.push({\n      stack: event.stack,\n      nested: nested.length ? nested : undefined,\n      forcedEnd: event.forcedEnd,\n      name: event.name\n    });\n  }\n\n  return builtEvent;\n};\n\nTracer.prototype.buildTrace = function (traceInfo) {\n  var firstEvent = traceInfo.events[0];\n  var lastEvent = traceInfo.events[traceInfo.events.length - 1];\n  var processedEvents = [];\n\n  if (firstEvent.type !== 'start') {\n    console.warn('Monti APM: trace has not started yet');\n    return null;\n  } else if (lastEvent.type !== 'complete' && lastEvent.type !== 'error') {\n    //trace is not completed or errored yet\n    console.warn('Monti APM: trace has not completed or errored yet');\n    return null;\n  } else {\n    //build the metrics\n    traceInfo.errored = lastEvent.type === 'error';\n    traceInfo.at = firstEvent.at;\n    var metrics = {\n      total: lastEvent.at - firstEvent.at\n    };\n    var totalNonCompute = 0;\n    firstEvent = ['start', 0];\n\n    if (traceInfo.events[0].data) {\n      firstEvent.push(traceInfo.events[0].data);\n    }\n\n    processedEvents.push(firstEvent);\n\n    for (var lc = 1; lc < traceInfo.events.length - 1; lc += 1) {\n      var prevEvent = traceInfo.events[lc - 1];\n      var event = traceInfo.events[lc];\n\n      if (!event.endAt) {\n        console.error('Monti APM: no end event for type: ', event.type);\n        return null;\n      }\n\n      var computeTime = event.at - prevEvent.endAt;\n\n      if (computeTime > 0) {\n        processedEvents.push(['compute', computeTime]);\n      }\n\n      var builtEvent = this.buildEvent(event, 0, traceInfo);\n      processedEvents.push(builtEvent);\n      metrics[event.type] = metrics[event.type] || 0;\n      metrics[event.type] += builtEvent[1];\n      totalNonCompute += builtEvent[1];\n    }\n  }\n\n  computeTime = lastEvent.at - traceInfo.events[traceInfo.events.length - 2].endAt;\n  if (computeTime > 0) processedEvents.push(['compute', computeTime]);\n  var lastEventData = [lastEvent.type, 0];\n  if (lastEvent.data) lastEventData.push(lastEvent.data);\n  processedEvents.push(lastEventData);\n\n  if (processedEvents.length > MAX_TRACE_EVENTS) {\n    const removeCount = processedEvents.length - MAX_TRACE_EVENTS;\n    processedEvents.splice(MAX_TRACE_EVENTS, removeCount);\n  }\n\n  metrics.compute = metrics.total - totalNonCompute;\n  traceInfo.metrics = metrics;\n  traceInfo.events = processedEvents;\n  traceInfo.isEventsProcessed = true;\n  return traceInfo;\n};\n\nTracer.prototype.addFilter = function (filterFn) {\n  this._filters.push(filterFn);\n};\n\nTracer.prototype.redactField = function (field) {\n  this._filterFields.push(field);\n};\n\nTracer.prototype._applyFilters = function (eventType, data, info) {\n  this._filters.forEach(function (filterFn) {\n    data = filterFn(eventType, _.clone(data), info);\n  });\n\n  return data;\n};\n\nTracer.prototype._applyObjectFilters = function (toFilter) {\n  const filterObject = obj => {\n    let cloned;\n\n    this._filterFields.forEach(function (field) {\n      if (field in obj) {\n        cloned = cloned || Object.assign({}, obj);\n        cloned[field] = 'Monti: redacted';\n      }\n    });\n\n    return cloned;\n  };\n\n  if (Array.isArray(toFilter)) {\n    let cloned; // There could be thousands or more items in the array, and this usually runs\n    // before the data is validated. For performance reasons we limit how\n    // many to check\n\n    let length = Math.min(toFilter.length, this.maxArrayItemsToFilter);\n\n    for (let i = 0; i < length; i++) {\n      if (typeof toFilter[i] === 'object' && toFilter[i] !== null) {\n        let result = filterObject(toFilter[i]);\n\n        if (result) {\n          cloned = cloned || [...toFilter];\n          cloned[i] = result;\n        }\n      }\n    }\n\n    return cloned || toFilter;\n  }\n\n  return filterObject(toFilter) || toFilter;\n};\n\nKadira.tracer = new Tracer(); // need to expose Tracer to provide default set of filters\n\nKadira.Tracer = Tracer;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"default_filters.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/tracer/default_filters.js                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// strip sensitive data sent to Monti APM engine.\n// possible to limit types by providing an array of types to strip\n// possible types are: \"start\", \"db\", \"http\", \"email\"\nTracer.stripSensitive = function stripSensitive(typesToStrip, receiverType, name) {\n  typesToStrip = typesToStrip || [];\n  var strippedTypes = {};\n  typesToStrip.forEach(function (type) {\n    strippedTypes[type] = true;\n  });\n  return function (type, data, info) {\n    if (typesToStrip.length > 0 && !strippedTypes[type]) return data;\n    if (receiverType && receiverType != info.type) return data;\n    if (name && name != info.name) return data;\n\n    if (type == \"start\") {\n      if (data.params) {\n        data.params = \"[stripped]\";\n      }\n\n      if (data.headers) {\n        data.headers = \"[stripped]\";\n      }\n\n      if (data.body) {\n        data.body = \"[stripped]\";\n      }\n    } else if (type == \"db\") {\n      data.selector = \"[stripped]\";\n    } else if (type == \"http\") {\n      data.url = \"[stripped]\";\n    } else if (type == \"email\") {\n      [\"from\", \"to\", \"cc\", \"bcc\", \"replyTo\"].forEach(function (item) {\n        if (data[item]) {\n          data[item] = \"[stripped]\";\n        }\n      });\n    }\n\n    return data;\n  };\n}; // Strip sensitive data sent to Monti APM engine.\n// In contrast to stripSensitive, this one has an allow list of what to keep\n// to guard against forgetting to strip new fields\n// In the future this one might replace Tracer.stripSensitive\n// options\n\n\nTracer.stripSensitiveThorough = function stripSensitive() {\n  return function (type, data) {\n    let fieldsToKeep = [];\n\n    if (type == \"start\") {\n      fieldsToKeep = ['userId'];\n    } else if (type === 'waitend') {\n      fieldsToKeep = ['waitOn'];\n    } else if (type == \"db\") {\n      fieldsToKeep = ['coll', 'func', 'cursor', 'limit', 'docsFetched', 'docSize', 'oplog', 'fields', 'wasMultiplexerReady', 'queueLength', 'elapsedPollingTime', 'noOfCachedDocs'];\n    } else if (type == \"http\") {\n      fieldsToKeep = ['method', 'statusCode'];\n    } else if (type == \"email\") {\n      fieldsToKeep = [];\n    } else if (type === 'custom') {\n      // This is supplied by the user so we assume they are only giving data that can be sent\n      fieldsToKeep = Object.keys(data);\n    } else if (type === 'error') {\n      fieldsToKeep = ['error'];\n    }\n\n    Object.keys(data).forEach(key => {\n      if (fieldsToKeep.indexOf(key) === -1) {\n        data[key] = '[stripped]';\n      }\n    });\n    return data;\n  };\n}; // strip selectors only from the given list of collection names\n\n\nTracer.stripSelectors = function stripSelectors(collectionList, receiverType, name) {\n  collectionList = collectionList || [];\n  var collMap = {};\n  collectionList.forEach(function (collName) {\n    collMap[collName] = true;\n  });\n  return function (type, data, info) {\n    if (type != \"db\" || data && !collMap[data.coll]) {\n      return data;\n    }\n\n    if (receiverType && receiverType != info.type) return data;\n    if (name && name != info.name) return data;\n    data.selector = \"[stripped]\";\n    return data;\n  };\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tracer_store.js\":function module(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/tracer/tracer_store.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar logger = Npm.require('debug')('kadira:ts');\n\nTracerStore = function TracerStore(options) {\n  options = options || {};\n  this.maxTotalPoints = options.maxTotalPoints || 30;\n  this.interval = options.interval || 1000 * 60;\n  this.archiveEvery = options.archiveEvery || this.maxTotalPoints / 6; //store max total on the past 30 minutes (or past 30 items)\n\n  this.maxTotals = Object.create(null); //store the max trace of the current interval\n\n  this.currentMaxTrace = Object.create(null); //archive for the traces\n\n  this.traceArchive = [];\n  this.processedCnt = Object.create(null); //group errors by messages between an interval\n\n  this.errorMap = Object.create(null);\n};\n\nTracerStore.prototype.addTrace = function (trace) {\n  var kind = [trace.type, trace.name].join('::');\n\n  if (!this.currentMaxTrace[kind]) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if (this.currentMaxTrace[kind].metrics.total < trace.metrics.total) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if (trace.errored) {\n    this._handleErrors(trace);\n  }\n};\n\nTracerStore.prototype.collectTraces = function () {\n  var traces = this.traceArchive;\n  this.traceArchive = []; // convert at(timestamp) into the actual serverTime\n\n  traces.forEach(function (trace) {\n    trace.at = Kadira.syncedDate.syncTime(trace.at);\n  });\n  return traces;\n};\n\nTracerStore.prototype.start = function () {\n  this._timeoutHandler = setInterval(this.processTraces.bind(this), this.interval);\n};\n\nTracerStore.prototype.stop = function () {\n  if (this._timeoutHandler) {\n    clearInterval(this._timeoutHandler);\n  }\n};\n\nTracerStore.prototype._handleErrors = function (trace) {\n  // sending error requests as it is\n  var lastEvent = trace.events[trace.events.length - 1];\n\n  if (lastEvent && lastEvent[2]) {\n    var error = lastEvent[2].error; // grouping errors occured (reset after processTraces)\n\n    var errorKey = [trace.type, trace.name, error.message].join(\"::\");\n\n    if (!this.errorMap[errorKey]) {\n      var erroredTrace = EJSON.clone(trace);\n      this.errorMap[errorKey] = erroredTrace;\n      this.traceArchive.push(erroredTrace);\n    }\n  } else {\n    logger('last events is not an error: ', JSON.stringify(trace.events));\n  }\n};\n\nTracerStore.prototype.processTraces = function () {\n  var self = this;\n  let kinds = new Set();\n  Object.keys(this.maxTotals).forEach(key => {\n    kinds.add(key);\n  });\n  Object.keys(this.currentMaxTrace).forEach(key => {\n    kinds.add(key);\n  });\n\n  for (kind of kinds) {\n    self.processedCnt[kind] = self.processedCnt[kind] || 0;\n    var currentMaxTrace = self.currentMaxTrace[kind];\n    var currentMaxTotal = currentMaxTrace ? currentMaxTrace.metrics.total : 0;\n    self.maxTotals[kind] = self.maxTotals[kind] || []; //add the current maxPoint\n\n    self.maxTotals[kind].push(currentMaxTotal);\n    var exceedingPoints = self.maxTotals[kind].length - self.maxTotalPoints;\n\n    if (exceedingPoints > 0) {\n      self.maxTotals[kind].splice(0, exceedingPoints);\n    }\n\n    var archiveDefault = self.processedCnt[kind] % self.archiveEvery == 0;\n    self.processedCnt[kind]++;\n\n    var canArchive = archiveDefault || self._isTraceOutlier(kind, currentMaxTrace);\n\n    if (canArchive && currentMaxTrace) {\n      self.traceArchive.push(currentMaxTrace);\n    } //reset currentMaxTrace\n\n\n    self.currentMaxTrace[kind] = null;\n  }\n\n  ; //reset the errorMap\n\n  self.errorMap = Object.create(null);\n};\n\nTracerStore.prototype._isTraceOutlier = function (kind, trace) {\n  if (trace) {\n    var dataSet = this.maxTotals[kind];\n    return this._isOutlier(dataSet, trace.metrics.total, 3);\n  } else {\n    return false;\n  }\n};\n/*\n  Data point must exists in the dataSet\n*/\n\n\nTracerStore.prototype._isOutlier = function (dataSet, dataPoint, maxMadZ) {\n  var median = this._getMedian(dataSet);\n\n  var mad = this._calculateMad(dataSet, median);\n\n  var madZ = this._funcMedianDeviation(median)(dataPoint) / mad;\n  return madZ > maxMadZ;\n};\n\nTracerStore.prototype._getMedian = function (dataSet) {\n  var sortedDataSet = _.clone(dataSet).sort(function (a, b) {\n    return a - b;\n  });\n\n  return this._pickQuartile(sortedDataSet, 2);\n};\n\nTracerStore.prototype._pickQuartile = function (dataSet, num) {\n  var pos = (dataSet.length + 1) * num / 4;\n\n  if (pos % 1 == 0) {\n    return dataSet[pos - 1];\n  } else {\n    pos = pos - pos % 1;\n    return (dataSet[pos - 1] + dataSet[pos]) / 2;\n  }\n};\n\nTracerStore.prototype._calculateMad = function (dataSet, median) {\n  var medianDeviations = _.map(dataSet, this._funcMedianDeviation(median));\n\n  var mad = this._getMedian(medianDeviations);\n\n  return mad;\n};\n\nTracerStore.prototype._funcMedianDeviation = function (median) {\n  return function (x) {\n    return Math.abs(median - x);\n  };\n};\n\nTracerStore.prototype._getMean = function (dataPoints) {\n  if (dataPoints.length > 0) {\n    var total = 0;\n    dataPoints.forEach(function (point) {\n      total += point;\n    });\n    return total / dataPoints.length;\n  } else {\n    return 0;\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"docsize_cache.js\":function module(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/docsize_cache.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar LRU = Npm.require('lru-cache');\n\nvar crypto = Npm.require('crypto');\n\nvar jsonStringify = Npm.require('json-stringify-safe');\n\nDocSzCache = function (maxItems, maxValues) {\n  this.items = new LRU({\n    max: maxItems\n  });\n  this.maxValues = maxValues;\n  this.cpuUsage = 0;\n}; // This is called from SystemModel.prototype.cpuUsage and saves cpu usage.\n\n\nDocSzCache.prototype.setPcpu = function (pcpu) {\n  this.cpuUsage = pcpu;\n};\n\nDocSzCache.prototype.getSize = function (coll, query, opts, data) {\n  // If the dataset is null or empty we can't calculate the size\n  // Do not process this data and return 0 as the document size.\n  if (!(data && (data.length || typeof data.size === 'function' && data.size()))) {\n    return 0;\n  }\n\n  var key = this.getKey(coll, query, opts);\n  var item = this.items.get(key);\n\n  if (!item) {\n    item = new DocSzCacheItem(this.maxValues);\n    this.items.set(key, item);\n  }\n\n  if (this.needsUpdate(item)) {\n    var doc = {};\n\n    if (typeof data.get === 'function') {\n      // This is an IdMap\n      data.forEach(function (element) {\n        doc = element;\n        return false; // return false to stop loop. We only need one doc.\n      });\n    } else {\n      doc = data[0];\n    }\n\n    var size = Buffer.byteLength(jsonStringify(doc), 'utf8');\n    item.addData(size);\n  }\n\n  return item.getValue();\n};\n\nDocSzCache.prototype.getKey = function (coll, query, opts) {\n  return jsonStringify([coll, query, opts]);\n}; // returns a score between 0 and 1 for a cache item\n// this score is determined by:\n//  * available cache item slots\n//  * time since last updated\n//  * cpu usage of the application\n\n\nDocSzCache.prototype.getItemScore = function (item) {\n  return [(item.maxValues - item.values.length) / item.maxValues, (Date.now() - item.updated) / 60000, (100 - this.cpuUsage) / 100].map(function (score) {\n    return score > 1 ? 1 : score;\n  }).reduce(function (total, score) {\n    return (total || 0) + score;\n  }) / 3;\n};\n\nDocSzCache.prototype.needsUpdate = function (item) {\n  // handle newly made items\n  if (!item.values.length) {\n    return true;\n  }\n\n  var currentTime = Date.now();\n  var timeSinceUpdate = currentTime - item.updated;\n\n  if (timeSinceUpdate > 1000 * 60) {\n    return true;\n  }\n\n  return this.getItemScore(item) > 0.5;\n};\n\nDocSzCacheItem = function (maxValues) {\n  this.maxValues = maxValues;\n  this.updated = 0;\n  this.values = [];\n};\n\nDocSzCacheItem.prototype.addData = function (value) {\n  this.values.push(value);\n  this.updated = Date.now();\n\n  if (this.values.length > this.maxValues) {\n    this.values.shift();\n  }\n};\n\nDocSzCacheItem.prototype.getValue = function () {\n  function sortNumber(a, b) {\n    return a - b;\n  }\n\n  var sorted = this.values.sort(sortNumber);\n  var median = 0;\n\n  if (sorted.length % 2 === 0) {\n    var idx = sorted.length / 2;\n    median = (sorted[idx] + sorted[idx - 1]) / 2;\n  } else {\n    var idx = Math.floor(sorted.length / 2);\n    median = sorted[idx];\n  }\n\n  return median;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"kadira.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/kadira.js                                                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet HttpModel;\nmodule.link(\"./models/http\", {\n  default(v) {\n    HttpModel = v;\n  }\n\n}, 0);\nlet packageMap;\nmodule.link(\"./.meteor-package-versions\", {\n  default(v) {\n    packageMap = v;\n  }\n\n}, 1);\n\nvar hostname = Npm.require('os').hostname();\n\nvar logger = Npm.require('debug')('kadira:apm');\n\nvar Fibers = Npm.require('fibers');\n\nvar KadiraCore = Npm.require('monti-apm-core').Kadira;\n\nKadira.models = {};\nKadira.options = {};\nKadira.env = {\n  currentSub: null,\n  // keep current subscription inside ddp\n  kadiraInfo: new Meteor.EnvironmentVariable()\n};\nKadira.waitTimeBuilder = new WaitTimeBuilder();\nKadira.errors = [];\nKadira.errors.addFilter = Kadira.errors.push.bind(Kadira.errors);\nKadira.models.methods = new MethodsModel();\nKadira.models.pubsub = new PubsubModel();\nKadira.models.system = new SystemModel();\nKadira.models.http = new HttpModel();\nKadira.docSzCache = new DocSzCache(100000, 10);\n\nKadira.connect = function (appId, appSecret, options) {\n  options = options || {};\n  options.appId = appId;\n  options.appSecret = appSecret;\n  options.payloadTimeout = options.payloadTimeout || 1000 * 20;\n  options.endpoint = options.endpoint || \"https://engine.montiapm.com\";\n  options.clientEngineSyncDelay = options.clientEngineSyncDelay || 10000;\n  options.thresholds = options.thresholds || {};\n  options.isHostNameSet = !!options.hostname;\n  options.hostname = options.hostname || hostname;\n  options.proxy = options.proxy || null;\n  options.recordIPAddress = options.recordIPAddress || 'full';\n  options.eventStackTrace = options.eventStackTrace || false;\n\n  if (options.documentSizeCacheSize) {\n    Kadira.docSzCache = new DocSzCache(options.documentSizeCacheSize, 10);\n  } // remove trailing slash from endpoint url (if any)\n\n\n  if (_.last(options.endpoint) === '/') {\n    options.endpoint = options.endpoint.substr(0, options.endpoint.length - 1);\n  } // error tracking is enabled by default\n\n\n  if (options.enableErrorTracking === undefined) {\n    options.enableErrorTracking = true;\n  } // uploading sourcemaps is enabled by default in production\n\n\n  if (options.uploadSourceMaps === undefined && Meteor.isProduction) {\n    options.uploadSourceMaps = true;\n  }\n\n  Kadira.options = options;\n  Kadira.options.authHeaders = {\n    'KADIRA-APP-ID': Kadira.options.appId,\n    'KADIRA-APP-SECRET': Kadira.options.appSecret\n  };\n\n  if (appId && appSecret) {\n    options.appId = options.appId.trim();\n    options.appSecret = options.appSecret.trim();\n    Kadira.coreApi = new KadiraCore({\n      appId: options.appId,\n      appSecret: options.appSecret,\n      endpoint: options.endpoint,\n      hostname: options.hostname,\n      agentVersion: packageMap['montiapm:agent'] || '<unknown>'\n    });\n\n    Kadira.coreApi._checkAuth().then(function () {\n      logger('connected to app: ', appId);\n      console.log('Monti APM: Successfully connected');\n\n      Kadira._sendAppStats();\n\n      Kadira._schedulePayloadSend();\n    }).catch(function (err) {\n      if (err.message === \"Unauthorized\") {\n        console.log('Monti APM: authentication failed - check your appId & appSecret');\n      } else {\n        console.log('Monti APM: unable to connect. ' + err.message);\n      }\n    });\n  } else {\n    throw new Error('Monti APM: required appId and appSecret');\n  }\n\n  Kadira.syncedDate = new Ntp(options.endpoint);\n  Kadira.syncedDate.sync();\n  Kadira.models.error = new ErrorModel(appId); // handle pre-added filters\n\n  var addFilterFn = Kadira.models.error.addFilter.bind(Kadira.models.error);\n  Kadira.errors.forEach(addFilterFn);\n  Kadira.errors = Kadira.models.error; // setting runtime info, which will be sent to kadira\n\n  __meteor_runtime_config__.kadira = {\n    appId: appId,\n    endpoint: options.endpoint,\n    clientEngineSyncDelay: options.clientEngineSyncDelay,\n    recordIPAddress: options.recordIPAddress\n  };\n\n  if (options.enableErrorTracking) {\n    Kadira.enableErrorTracking();\n  } else {\n    Kadira.disableErrorTracking();\n  } // start tracking errors\n\n\n  Meteor.startup(function () {\n    TrackUncaughtExceptions();\n    TrackUnhandledRejections();\n    TrackMeteorDebug();\n  });\n  Meteor.publish(null, function () {\n    var options = __meteor_runtime_config__.kadira;\n    this.added('kadira_settings', Random.id(), options);\n    this.ready();\n  }); // notify we've connected\n\n  Kadira.connected = true;\n}; //track how many times we've sent the data (once per minute)\n\n\nKadira._buildPayload = function () {\n  var payload = {\n    host: Kadira.options.hostname,\n    clientVersions: getClientVersions()\n  };\n\n  var buildDetailedInfo = Kadira._isDetailedInfo();\n\n  _.extend(payload, Kadira.models.methods.buildPayload(buildDetailedInfo));\n\n  _.extend(payload, Kadira.models.pubsub.buildPayload(buildDetailedInfo));\n\n  _.extend(payload, Kadira.models.system.buildPayload());\n\n  _.extend(payload, Kadira.models.http.buildPayload());\n\n  if (Kadira.options.enableErrorTracking) {\n    _.extend(payload, Kadira.models.error.buildPayload());\n  }\n\n  return payload;\n};\n\nKadira._countDataSent = 0;\nKadira._detailInfoSentInterval = Math.ceil(1000 * 60 / Kadira.options.payloadTimeout);\n\nKadira._isDetailedInfo = function () {\n  return Kadira._countDataSent++ % Kadira._detailInfoSentInterval == 0;\n};\n\nKadira._sendAppStats = function () {\n  var appStats = {};\n  appStats.release = Meteor.release;\n  appStats.protocolVersion = '1.0.0';\n  appStats.packageVersions = [];\n  appStats.clientVersions = getClientVersions();\n\n  _.each(Package, function (v, name) {\n    appStats.packageVersions.push({\n      name: name,\n      version: packageMap[name] || null\n    });\n  });\n\n  Kadira.coreApi.sendData({\n    startTime: new Date(),\n    appStats: appStats\n  }).then(function (body) {\n    handleApiResponse(body);\n  }).catch(function (err) {\n    console.error('Monti APM Error on sending appStats:', err.message);\n  });\n};\n\nKadira._schedulePayloadSend = function () {\n  setTimeout(function () {\n    Kadira._schedulePayloadSend();\n\n    Kadira._sendPayload();\n  }, Kadira.options.payloadTimeout);\n};\n\nKadira._sendPayload = function () {\n  new Fibers(function () {\n    var payload = Kadira._buildPayload();\n\n    Kadira.coreApi.sendData(payload).then(function (body) {\n      handleApiResponse(body);\n    }).catch(function (err) {\n      console.log('Monti APM Error:', err.message);\n    });\n  }).run();\n}; // this return the __kadiraInfo from the current Fiber by default\n// if called with 2nd argument as true, it will get the kadira info from\n// Meteor.EnvironmentVariable\n//\n// WARNNING: returned info object is the reference object.\n//  Changing it might cause issues when building traces. So use with care\n\n\nKadira._getInfo = function (currentFiber, useEnvironmentVariable) {\n  currentFiber = currentFiber || Fibers.current;\n\n  if (currentFiber) {\n    if (useEnvironmentVariable) {\n      return Kadira.env.kadiraInfo.get();\n    }\n\n    return currentFiber.__kadiraInfo;\n  }\n}; // this does not clone the info object. So, use with care\n\n\nKadira._setInfo = function (info) {\n  Fibers.current.__kadiraInfo = info;\n};\n\nKadira.startContinuousProfiling = function () {\n  MontiProfiler.startContinuous(function onProfile(_ref) {\n    let {\n      profile,\n      startTime,\n      endTime\n    } = _ref;\n\n    if (!Kadira.connected) {\n      return;\n    }\n\n    Kadira.coreApi.sendData({\n      profiles: [{\n        profile,\n        startTime,\n        endTime\n      }]\n    }).catch(e => console.log('Monti: err sending cpu profile', e));\n  });\n};\n\nKadira.enableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = true;\n  Kadira.options.enableErrorTracking = true;\n};\n\nKadira.disableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = false;\n  Kadira.options.enableErrorTracking = false;\n};\n\nKadira.trackError = function (type, message, options) {\n  if (Kadira.options.enableErrorTracking && type && message) {\n    options = options || {};\n    options.subType = options.subType || 'server';\n    options.stacks = options.stacks || '';\n    var error = {\n      message: message,\n      stack: options.stacks\n    };\n    var trace = {\n      type: type,\n      subType: options.subType,\n      name: message,\n      errored: true,\n      at: Kadira.syncedDate.getTime(),\n      events: [['start', 0, {}], ['error', 0, {\n        error: error\n      }]],\n      metrics: {\n        total: 0\n      }\n    };\n    Kadira.models.error.trackError(error, trace);\n  }\n};\n\nKadira.ignoreErrorTracking = function (err) {\n  err._skipKadira = true;\n};\n\nKadira.startEvent = function (name) {\n  let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var kadiraInfo = Kadira._getInfo();\n\n  if (kadiraInfo) {\n    return Kadira.tracer.event(kadiraInfo.trace, 'custom', data, {\n      name\n    });\n  }\n\n  return false;\n};\n\nKadira.endEvent = function (event, data) {\n  var kadiraInfo = Kadira._getInfo(); // The event could be false if it could not be started.\n  // Handle it here instead of requiring the app to.\n\n\n  if (kadiraInfo && event) {\n    Kadira.tracer.eventEnd(kadiraInfo.trace, event, data);\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hijack\":{\"wrap_server.js\":function module(require){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/wrap_server.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Fiber = Npm.require('fibers');\n\nwrapServer = function (serverProto) {\n  var originalHandleConnect = serverProto._handleConnect;\n\n  serverProto._handleConnect = function (socket, msg) {\n    originalHandleConnect.call(this, socket, msg);\n    var session = socket._meteorSession; // sometimes it is possible for _meteorSession to be undefined\n    // one such reason would be if DDP versions are not matching\n    // if then, we should not process it\n\n    if (!session) {\n      return;\n    }\n\n    Kadira.EventBus.emit('system', 'createSession', msg, socket._meteorSession);\n\n    if (Kadira.connected) {\n      Kadira.models.system.handleSessionActivity(msg, socket._meteorSession);\n    }\n  };\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"wrap_session.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/wrap_session.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet MeteorDebugIgnore;\nmodule.link(\"./error\", {\n  MeteorDebugIgnore(v) {\n    MeteorDebugIgnore = v;\n  }\n\n}, 0);\nconst MAX_PARAMS_LENGTH = 4000;\n\nwrapSession = function (sessionProto) {\n  var originalProcessMessage = sessionProto.processMessage;\n\n  sessionProto.processMessage = function (msg) {\n    if (true) {\n      var kadiraInfo = {\n        session: this.id,\n        userId: this.userId\n      };\n\n      if (msg.msg == 'method' || msg.msg == 'sub') {\n        kadiraInfo.trace = Kadira.tracer.start(this, msg);\n        Kadira.waitTimeBuilder.register(this, msg.id);\n\n        let params = Kadira.tracer._applyObjectFilters(msg.params || []); // use JSON instead of EJSON to save the CPU\n\n\n        let stringifiedParams = JSON.stringify(params); // The params could be several mb or larger.\n        // Truncate if it is large\n\n        if (stringifiedParams.length > MAX_PARAMS_LENGTH) {\n          stringifiedParams = \"Monti APM: params are too big. First \".concat(MAX_PARAMS_LENGTH, \" characters: \").concat(stringifiedParams.slice(0, MAX_PARAMS_LENGTH));\n        }\n\n        var startData = {\n          userId: this.userId,\n          params: stringifiedParams\n        };\n        Kadira.tracer.event(kadiraInfo.trace, 'start', startData);\n        var waitEventId = Kadira.tracer.event(kadiraInfo.trace, 'wait', {}, kadiraInfo);\n        msg._waitEventId = waitEventId;\n        msg.__kadiraInfo = kadiraInfo;\n\n        if (msg.msg == 'sub') {\n          // start tracking inside processMessage allows us to indicate\n          // wait time as well\n          Kadira.EventBus.emit('pubsub', 'subReceived', this, msg);\n\n          Kadira.models.pubsub._trackSub(this, msg);\n        }\n      } // Update session last active time\n\n\n      Kadira.EventBus.emit('system', 'ddpMessageReceived', this, msg);\n      Kadira.models.system.handleSessionActivity(msg, this);\n    }\n\n    return originalProcessMessage.call(this, msg);\n  }; // adding the method context to the current fiber\n\n\n  var originalMethodHandler = sessionProto.protocol_handlers.method;\n\n  sessionProto.protocol_handlers.method = function (msg, unblock) {\n    var self = this; //add context\n\n    var kadiraInfo = msg.__kadiraInfo;\n\n    if (kadiraInfo) {\n      Kadira._setInfo(kadiraInfo); // end wait event\n\n\n      var waitList = Kadira.waitTimeBuilder.build(this, msg.id);\n      Kadira.tracer.eventEnd(kadiraInfo.trace, msg._waitEventId, {\n        waitOn: waitList\n      });\n      unblock = Kadira.waitTimeBuilder.trackWaitTime(this, msg, unblock);\n      var response = Kadira.env.kadiraInfo.withValue(kadiraInfo, function () {\n        return originalMethodHandler.call(self, msg, unblock);\n      });\n      unblock();\n    } else {\n      var response = originalMethodHandler.call(self, msg, unblock);\n    }\n\n    return response;\n  }; //to capture the currently processing message\n\n\n  var orginalSubHandler = sessionProto.protocol_handlers.sub;\n\n  sessionProto.protocol_handlers.sub = function (msg, unblock) {\n    var self = this; //add context\n\n    var kadiraInfo = msg.__kadiraInfo;\n\n    if (kadiraInfo) {\n      Kadira._setInfo(kadiraInfo); // end wait event\n\n\n      var waitList = Kadira.waitTimeBuilder.build(this, msg.id);\n      Kadira.tracer.eventEnd(kadiraInfo.trace, msg._waitEventId, {\n        waitOn: waitList\n      });\n      unblock = Kadira.waitTimeBuilder.trackWaitTime(this, msg, unblock);\n      var response = Kadira.env.kadiraInfo.withValue(kadiraInfo, function () {\n        return orginalSubHandler.call(self, msg, unblock);\n      });\n      unblock();\n    } else {\n      var response = orginalSubHandler.call(self, msg, unblock);\n    }\n\n    return response;\n  }; //to capture the currently processing message\n\n\n  var orginalUnSubHandler = sessionProto.protocol_handlers.unsub;\n\n  sessionProto.protocol_handlers.unsub = function (msg, unblock) {\n    unblock = Kadira.waitTimeBuilder.trackWaitTime(this, msg, unblock);\n    var response = orginalUnSubHandler.call(this, msg, unblock);\n    unblock();\n    return response;\n  }; //track method ending (to get the result of error)\n\n\n  var originalSend = sessionProto.send;\n\n  sessionProto.send = function (msg) {\n    if (msg.msg == 'result') {\n      var kadiraInfo = Kadira._getInfo();\n\n      if (kadiraInfo) {\n        if (msg.error) {\n          var error = _.pick(msg.error, ['message', 'stack', 'details']); // pick the error from the wrapped method handler\n\n\n          if (kadiraInfo && kadiraInfo.currentError) {\n            // the error stack is wrapped so Meteor._debug can identify\n            // this as a method error.\n            error = _.pick(kadiraInfo.currentError, ['message', 'stack', 'details']); // see wrapMethodHanderForErrors() method def for more info\n\n            if (error.stack && error.stack.stack) {\n              error.stack = error.stack.stack;\n            }\n          }\n\n          Kadira.tracer.endLastEvent(kadiraInfo.trace);\n          Kadira.tracer.event(kadiraInfo.trace, 'error', {\n            error: error\n          });\n        } else {\n          Kadira.tracer.endLastEvent(kadiraInfo.trace);\n          Kadira.tracer.event(kadiraInfo.trace, 'complete');\n        } //processing the message\n\n\n        var trace = Kadira.tracer.buildTrace(kadiraInfo.trace);\n        Kadira.EventBus.emit('method', 'methodCompleted', trace, this);\n        Kadira.models.methods.processMethod(trace); // error may or may not exist and error tracking can be disabled\n\n        if (error && Kadira.options.enableErrorTracking) {\n          Kadira.models.error.trackError(error, trace);\n        } //clean and make sure, fiber is clean\n        //not sure we need to do this, but a preventive measure\n\n\n        Kadira._setInfo(null);\n      }\n    }\n\n    return originalSend.call(this, msg);\n  };\n}; // wrap existing method handlers for capturing errors\n\n\n_.each(Meteor.server.method_handlers, function (handler, name) {\n  wrapMethodHanderForErrors(name, handler, Meteor.server.method_handlers);\n}); // wrap future method handlers for capturing errors\n\n\nvar originalMeteorMethods = Meteor.methods;\n\nMeteor.methods = function (methodMap) {\n  _.each(methodMap, function (handler, name) {\n    wrapMethodHanderForErrors(name, handler, methodMap);\n  });\n\n  originalMeteorMethods(methodMap);\n};\n\nfunction wrapMethodHanderForErrors(name, originalHandler, methodMap) {\n  methodMap[name] = function () {\n    try {\n      return originalHandler.apply(this, arguments);\n    } catch (ex) {\n      if (ex && Kadira._getInfo()) {\n        // sometimes error may be just an string or a primitive\n        // in that case, we need to make it a psuedo error\n        if (typeof ex !== 'object') {\n          ex = {\n            message: ex,\n            stack: ex\n          };\n        } // Now we are marking this error to get tracked via methods\n        // But, this also triggers a Meteor.debug call and\n        // it only gets the stack\n        // We also track Meteor.debug errors and want to stop\n        // tracking this error. That's why we do this\n        // See Meteor.debug error tracking code for more\n        // If error tracking is disabled, we do not modify the stack since\n        // it would be shown as an object in the logs\n\n\n        if (Kadira.options.enableErrorTracking) {\n          ex.stack = {\n            stack: ex.stack,\n            source: 'method',\n            [MeteorDebugIgnore]: true\n          };\n          Kadira._getInfo().currentError = ex;\n        }\n      }\n\n      throw ex;\n    }\n  };\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"wrap_subscription.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/wrap_subscription.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet MeteorDebugIgnore;\nmodule.link(\"./error\", {\n  MeteorDebugIgnore(v) {\n    MeteorDebugIgnore = v;\n  }\n\n}, 0);\n\nwrapSubscription = function (subscriptionProto) {\n  // If the ready event runs outside the Fiber, Kadira._getInfo() doesn't work.\n  // we need some other way to store kadiraInfo so we can use it at ready hijack.\n  var originalRunHandler = subscriptionProto._runHandler;\n\n  subscriptionProto._runHandler = function () {\n    var kadiraInfo = Kadira._getInfo();\n\n    if (kadiraInfo) {\n      this.__kadiraInfo = kadiraInfo;\n    }\n\n    ;\n    originalRunHandler.call(this);\n  };\n\n  var originalReady = subscriptionProto.ready;\n\n  subscriptionProto.ready = function () {\n    // meteor has a field called `_ready` which tracks this\n    // but we need to make it future proof\n    if (!this._apmReadyTracked) {\n      var kadiraInfo = Kadira._getInfo() || this.__kadiraInfo;\n\n      delete this.__kadiraInfo; //sometime .ready can be called in the context of the method\n      //then we have some problems, that's why we are checking this\n      //eg:- Accounts.createUser\n      // Also, when the subscription is created by fast render, _subscriptionId and\n      // the trace.id are both undefined but we don't want to complete the HTTP trace here\n\n      if (kadiraInfo && this._subscriptionId && this._subscriptionId == kadiraInfo.trace.id) {\n        Kadira.tracer.endLastEvent(kadiraInfo.trace);\n        Kadira.tracer.event(kadiraInfo.trace, 'complete');\n        var trace = Kadira.tracer.buildTrace(kadiraInfo.trace);\n      }\n\n      Kadira.EventBus.emit('pubsub', 'subCompleted', trace, this._session, this);\n\n      Kadira.models.pubsub._trackReady(this._session, this, trace);\n\n      this._apmReadyTracked = true;\n    } // we still pass the control to the original implementation\n    // since multiple ready calls are handled by itself\n\n\n    originalReady.call(this);\n  };\n\n  var originalError = subscriptionProto.error;\n\n  subscriptionProto.error = function (err) {\n    if (typeof err === 'string') {\n      err = {\n        message: err\n      };\n    }\n\n    var kadiraInfo = Kadira._getInfo();\n\n    if (kadiraInfo && this._subscriptionId && this._subscriptionId == kadiraInfo.trace.id) {\n      Kadira.tracer.endLastEvent(kadiraInfo.trace);\n\n      var errorForApm = _.pick(err, 'message', 'stack');\n\n      Kadira.tracer.event(kadiraInfo.trace, 'error', {\n        error: errorForApm\n      });\n      var trace = Kadira.tracer.buildTrace(kadiraInfo.trace);\n\n      Kadira.models.pubsub._trackError(this._session, this, trace); // error tracking can be disabled and if there is a trace\n      // trace should be available all the time, but it won't\n      // if something wrong happened on the trace building\n\n\n      if (Kadira.options.enableErrorTracking && trace) {\n        Kadira.models.error.trackError(err, trace);\n      }\n    } // wrap error stack so Meteor._debug can identify and ignore it\n    // it is not wrapped when error tracking is disabled since it\n    // would be shown as an object in the logs\n\n\n    if (Kadira.options.enableErrorTracking) {\n      err.stack = {\n        stack: err.stack,\n        source: 'subscription',\n        [MeteorDebugIgnore]: true\n      };\n    }\n\n    originalError.call(this, err);\n  };\n\n  var originalDeactivate = subscriptionProto._deactivate;\n\n  subscriptionProto._deactivate = function () {\n    Kadira.EventBus.emit('pubsub', 'subDeactivated', this._session, this);\n\n    Kadira.models.pubsub._trackUnsub(this._session, this);\n\n    originalDeactivate.call(this);\n  }; //adding the currenSub env variable\n\n\n  ['added', 'changed', 'removed'].forEach(function (funcName) {\n    var originalFunc = subscriptionProto[funcName];\n\n    subscriptionProto[funcName] = function (collectionName, id, fields) {\n      var self = this; // we need to run this code in a fiber and that's how we track\n      // subscription info. May be we can figure out, some other way to do this\n      // We use this currently to get the publication info when tracking message\n      // sizes at wrap_ddp_stringify.js\n\n      Kadira.env.currentSub = self;\n      var res = originalFunc.call(self, collectionName, id, fields);\n      Kadira.env.currentSub = null;\n      return res;\n    };\n  });\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"wrap_observers.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/wrap_observers.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nwrapOplogObserveDriver = function (proto) {\n  // Track the polled documents. This is reflect to the RAM size and\n  // for the CPU usage directly\n  var originalPublishNewResults = proto._publishNewResults;\n\n  proto._publishNewResults = function (newResults, newBuffer) {\n    var coll = this._cursorDescription.collectionName;\n    var query = this._cursorDescription.selector;\n    var opts = this._cursorDescription.options;\n    var docSize = Kadira.docSzCache.getSize(coll, query, opts, newResults);\n    var docSize = Kadira.docSzCache.getSize(coll, query, opts, newBuffer);\n    var count = newResults.size() + newBuffer.size();\n\n    if (this._ownerInfo) {\n      Kadira.models.pubsub.trackPolledDocuments(this._ownerInfo, count);\n      Kadira.models.pubsub.trackDocSize(this._ownerInfo.name, \"polledFetches\", docSize * count);\n    } else {\n      this._polledDocuments = count;\n      this._docSize = {\n        polledFetches: docSize * count\n      };\n    }\n\n    return originalPublishNewResults.call(this, newResults, newBuffer);\n  };\n\n  var originalHandleOplogEntryQuerying = proto._handleOplogEntryQuerying;\n\n  proto._handleOplogEntryQuerying = function (op) {\n    Kadira.models.pubsub.trackDocumentChanges(this._ownerInfo, op);\n    return originalHandleOplogEntryQuerying.call(this, op);\n  };\n\n  var originalHandleOplogEntrySteadyOrFetching = proto._handleOplogEntrySteadyOrFetching;\n\n  proto._handleOplogEntrySteadyOrFetching = function (op) {\n    Kadira.models.pubsub.trackDocumentChanges(this._ownerInfo, op);\n    return originalHandleOplogEntrySteadyOrFetching.call(this, op);\n  }; // track live updates\n\n\n  ['_addPublished', '_removePublished', '_changePublished'].forEach(function (fnName) {\n    var originalFn = proto[fnName];\n\n    proto[fnName] = function (a, b, c) {\n      if (this._ownerInfo) {\n        Kadira.models.pubsub.trackLiveUpdates(this._ownerInfo, fnName, 1);\n\n        if (fnName === \"_addPublished\") {\n          var coll = this._cursorDescription.collectionName;\n          var query = this._cursorDescription.selector;\n          var opts = this._cursorDescription.options;\n          var docSize = Kadira.docSzCache.getSize(coll, query, opts, [b]);\n          Kadira.models.pubsub.trackDocSize(this._ownerInfo.name, \"liveFetches\", docSize);\n        }\n      } else {\n        // If there is no ownerInfo, that means this is the initial adds\n        if (!this._liveUpdatesCounts) {\n          this._liveUpdatesCounts = {\n            _initialAdds: 0\n          };\n        }\n\n        this._liveUpdatesCounts._initialAdds++;\n\n        if (fnName === \"_addPublished\") {\n          if (!this._docSize) {\n            this._docSize = {\n              initialFetches: 0\n            };\n          }\n\n          if (!this._docSize.initialFetches) {\n            this._docSize.initialFetches = 0;\n          }\n\n          var coll = this._cursorDescription.collectionName;\n          var query = this._cursorDescription.selector;\n          var opts = this._cursorDescription.options;\n          var docSize = Kadira.docSzCache.getSize(coll, query, opts, [b]);\n          this._docSize.initialFetches += docSize;\n        }\n      }\n\n      return originalFn.call(this, a, b, c);\n    };\n  });\n  var originalStop = proto.stop;\n\n  proto.stop = function () {\n    if (this._ownerInfo && this._ownerInfo.type === 'sub') {\n      Kadira.EventBus.emit('pubsub', 'observerDeleted', this._ownerInfo);\n      Kadira.models.pubsub.trackDeletedObserver(this._ownerInfo);\n    }\n\n    return originalStop.call(this);\n  };\n};\n\nwrapPollingObserveDriver = function (proto) {\n  var originalPollMongo = proto._pollMongo;\n\n  proto._pollMongo = function () {\n    var start = Date.now();\n    originalPollMongo.call(this); // Current result is stored in the following variable.\n    // So, we can use that\n    // Sometimes, it's possible to get size as undefined.\n    // May be something with different version. We don't need to worry about\n    // this now\n\n    var count = 0;\n    var docSize = 0;\n\n    if (this._results && this._results.size) {\n      count = this._results.size() || 0;\n      var coll = this._cursorDescription.collectionName;\n      var query = this._cursorDescription.selector;\n      var opts = this._cursorDescription.options;\n      docSize = Kadira.docSzCache.getSize(coll, query, opts, this._results._map) * count;\n    }\n\n    if (this._ownerInfo) {\n      Kadira.models.pubsub.trackPolledDocuments(this._ownerInfo, count);\n      Kadira.models.pubsub.trackDocSize(this._ownerInfo.name, \"polledFetches\", docSize);\n    } else {\n      this._polledDocuments = count;\n      this._polledDocSize = docSize;\n    }\n  };\n\n  var originalStop = proto.stop;\n\n  proto.stop = function () {\n    if (this._ownerInfo && this._ownerInfo.type === 'sub') {\n      Kadira.EventBus.emit('pubsub', 'observerDeleted', this._ownerInfo);\n      Kadira.models.pubsub.trackDeletedObserver(this._ownerInfo);\n    }\n\n    return originalStop.call(this);\n  };\n};\n\nwrapMultiplexer = function (proto) {\n  var originalInitalAdd = proto.addHandleAndSendInitialAdds;\n\n  proto.addHandleAndSendInitialAdds = function (handle) {\n    if (!this._firstInitialAddTime) {\n      this._firstInitialAddTime = Date.now();\n    }\n\n    handle._wasMultiplexerReady = this._ready();\n    handle._queueLength = this._queue._taskHandles.length;\n\n    if (!handle._wasMultiplexerReady) {\n      handle._elapsedPollingTime = Date.now() - this._firstInitialAddTime;\n    }\n\n    return originalInitalAdd.call(this, handle);\n  };\n};\n\nwrapForCountingObservers = function () {\n  // to count observers\n  var mongoConnectionProto = MeteorX.MongoConnection.prototype;\n  var originalObserveChanges = mongoConnectionProto._observeChanges;\n\n  mongoConnectionProto._observeChanges = function (cursorDescription, ordered, callbacks) {\n    var ret = originalObserveChanges.call(this, cursorDescription, ordered, callbacks); // get the Kadira Info via the Meteor.EnvironmentalVariable\n\n    var kadiraInfo = Kadira._getInfo(null, true);\n\n    if (kadiraInfo && ret._multiplexer) {\n      if (!ret._multiplexer.__kadiraTracked) {\n        // new multiplexer\n        ret._multiplexer.__kadiraTracked = true;\n        Kadira.EventBus.emit('pubsub', 'newSubHandleCreated', kadiraInfo.trace);\n        Kadira.models.pubsub.incrementHandleCount(kadiraInfo.trace, false);\n\n        if (kadiraInfo.trace.type == 'sub') {\n          var ownerInfo = {\n            type: kadiraInfo.trace.type,\n            name: kadiraInfo.trace.name,\n            startTime: new Date().getTime()\n          };\n          var observerDriver = ret._multiplexer._observeDriver;\n          observerDriver._ownerInfo = ownerInfo;\n          Kadira.EventBus.emit('pubsub', 'observerCreated', ownerInfo);\n          Kadira.models.pubsub.trackCreatedObserver(ownerInfo); // We need to send initially polled documents if there are\n\n          if (observerDriver._polledDocuments) {\n            Kadira.models.pubsub.trackPolledDocuments(ownerInfo, observerDriver._polledDocuments);\n            observerDriver._polledDocuments = 0;\n          } // We need to send initially polled documents if there are\n\n\n          if (observerDriver._polledDocSize) {\n            Kadira.models.pubsub.trackDocSize(ownerInfo.name, \"polledFetches\", observerDriver._polledDocSize);\n            observerDriver._polledDocSize = 0;\n          } // Process _liveUpdatesCounts\n\n\n          _.each(observerDriver._liveUpdatesCounts, function (count, key) {\n            Kadira.models.pubsub.trackLiveUpdates(ownerInfo, key, count);\n          }); // Process docSize\n\n\n          _.each(observerDriver._docSize, function (count, key) {\n            Kadira.models.pubsub.trackDocSize(ownerInfo.name, key, count);\n          });\n        }\n      } else {\n        Kadira.EventBus.emit('pubsub', 'cachedSubHandleCreated', kadiraInfo.trace);\n        Kadira.models.pubsub.incrementHandleCount(kadiraInfo.trace, true);\n      }\n    }\n\n    return ret;\n  };\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"wrap_ddp_stringify.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/wrap_ddp_stringify.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nwrapStringifyDDP = function () {\n  var originalStringifyDDP = DDPCommon.stringifyDDP;\n\n  DDPCommon.stringifyDDP = function (msg) {\n    var msgString = originalStringifyDDP(msg);\n    var msgSize = Buffer.byteLength(msgString, 'utf8');\n\n    var kadiraInfo = Kadira._getInfo(null, true);\n\n    if (kadiraInfo && !Kadira.env.currentSub) {\n      if (kadiraInfo.trace.type === 'method') {\n        Kadira.models.methods.trackMsgSize(kadiraInfo.trace.name, msgSize);\n      }\n\n      return msgString;\n    } // 'currentSub' is set when we wrap Subscription object and override\n    // handlers for 'added', 'changed', 'removed' events. (see lib/hijack/wrap_subscription.js)\n\n\n    if (Kadira.env.currentSub) {\n      if (Kadira.env.currentSub.__kadiraInfo) {\n        Kadira.models.pubsub.trackMsgSize(Kadira.env.currentSub._name, \"initialSent\", msgSize);\n        return msgString;\n      }\n\n      Kadira.models.pubsub.trackMsgSize(Kadira.env.currentSub._name, \"liveSent\", msgSize);\n      return msgString;\n    }\n\n    Kadira.models.methods.trackMsgSize(\"<not-a-method-or-a-pub>\", msgSize);\n    return msgString;\n  };\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"instrument.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/instrument.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet wrapWebApp;\nmodule.link(\"./wrap_webapp\", {\n  wrapWebApp(v) {\n    wrapWebApp = v;\n  }\n\n}, 0);\nlet wrapFastRender;\nmodule.link(\"./fast_render\", {\n  wrapFastRender(v) {\n    wrapFastRender = v;\n  }\n\n}, 1);\nlet wrapFs;\nmodule.link(\"./fs\", {\n  wrapFs(v) {\n    wrapFs = v;\n  }\n\n}, 2);\nlet wrapPicker;\nmodule.link(\"./picker\", {\n  wrapPicker(v) {\n    wrapPicker = v;\n  }\n\n}, 3);\nlet wrapRouters;\nmodule.link(\"./wrap_routers\", {\n  wrapRouters(v) {\n    wrapRouters = v;\n  }\n\n}, 4);\n\nvar logger = Npm.require('debug')('kadira:hijack:instrument');\n\nvar instrumented = false;\n\nKadira._startInstrumenting = function (callback) {\n  if (instrumented) {\n    callback();\n    return;\n  }\n\n  instrumented = true;\n  wrapStringifyDDP();\n  wrapWebApp();\n  wrapFastRender();\n  wrapPicker();\n  wrapFs();\n  wrapRouters();\n  MeteorX.onReady(function () {\n    //instrumenting session\n    wrapServer(MeteorX.Server.prototype);\n    wrapSession(MeteorX.Session.prototype);\n    wrapSubscription(MeteorX.Subscription.prototype);\n\n    if (MeteorX.MongoOplogDriver) {\n      wrapOplogObserveDriver(MeteorX.MongoOplogDriver.prototype);\n    }\n\n    if (MeteorX.MongoPollingDriver) {\n      wrapPollingObserveDriver(MeteorX.MongoPollingDriver.prototype);\n    }\n\n    if (MeteorX.Multiplexer) {\n      wrapMultiplexer(MeteorX.Multiplexer.prototype);\n    }\n\n    wrapForCountingObservers();\n    hijackDBOps();\n    setLabels();\n    callback();\n  });\n}; // We need to instrument this rightaway and it's okay\n// One reason for this is to call `setLables()` function\n// Otherwise, CPU profile can't see all our custom labeling\n\n\nKadira._startInstrumenting(function () {\n  console.log('Monti APM: completed instrumenting the app');\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"db.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/db.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// This hijack is important to make sure, collections created before\n// we hijack dbOps, even gets tracked.\n//  Meteor does not simply expose MongoConnection object to the client\n//  It picks methods which are necessory and make a binded object and\n//  assigned to the Mongo.Collection\n//  so, even we updated prototype, we can't track those collections\n//  but, this will fix it.\nvar originalOpen = MongoInternals.RemoteCollectionDriver.prototype.open;\n\nMongoInternals.RemoteCollectionDriver.prototype.open = function open(name) {\n  var self = this;\n  var ret = originalOpen.call(self, name);\n\n  _.each(ret, function (fn, m) {\n    // make sure, it's in the actual mongo connection object\n    // meteorhacks:mongo-collection-utils package add some arbitary methods\n    // which does not exist in the mongo connection\n    if (self.mongo[m]) {\n      ret[m] = function () {\n        Array.prototype.unshift.call(arguments, name);\n        return OptimizedApply(self.mongo, self.mongo[m], arguments);\n      };\n    }\n  });\n\n  return ret;\n}; // TODO: this should be added to Meteorx\n\n\nfunction getSyncronousCursor() {\n  const MongoColl = typeof Mongo !== \"undefined\" ? Mongo.Collection : Meteor.Collection;\n  const coll = new MongoColl(\"__dummy_coll_\" + Random.id()); // we need to wait until the db is connected with meteor. findOne does that\n\n  coll.findOne();\n  const cursor = coll.find();\n  cursor.fetch();\n  return cursor._synchronousCursor.constructor;\n}\n\nhijackDBOps = function hijackDBOps() {\n  var mongoConnectionProto = MeteorX.MongoConnection.prototype; //findOne is handled by find - so no need to track it\n  //upsert is handles by update\n\n  ['find', 'update', 'remove', 'insert', '_ensureIndex', '_dropIndex'].forEach(function (func) {\n    var originalFunc = mongoConnectionProto[func];\n\n    mongoConnectionProto[func] = function (collName, selector, mod, options) {\n      var payload = {\n        coll: collName,\n        func: func\n      };\n\n      if (func == 'insert') {//add nothing more to the payload\n      } else if (func == '_ensureIndex' || func == '_dropIndex') {\n        //add index\n        payload.index = JSON.stringify(selector);\n      } else if (func == 'update' && options && options.upsert) {\n        payload.func = 'upsert';\n        payload.selector = JSON.stringify(selector);\n      } else {\n        //all the other functions have selectors\n        payload.selector = JSON.stringify(selector);\n      }\n\n      var kadiraInfo = Kadira._getInfo();\n\n      if (kadiraInfo) {\n        var eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n      } //this cause V8 to avoid any performance optimizations, but this is must to use\n      //otherwise, if the error adds try catch block our logs get messy and didn't work\n      //see: issue #6\n\n\n      try {\n        var ret = originalFunc.apply(this, arguments); //handling functions which can be triggered with an asyncCallback\n\n        var endOptions = {};\n\n        if (HaveAsyncCallback(arguments)) {\n          endOptions.async = true;\n        }\n\n        if (func == 'update') {\n          // upsert only returns an object when called `upsert` directly\n          // otherwise it only act an update command\n          if (options && options.upsert && typeof ret == 'object') {\n            endOptions.updatedDocs = ret.numberAffected;\n            endOptions.insertedId = ret.insertedId;\n          } else {\n            endOptions.updatedDocs = ret;\n          }\n        } else if (func == 'remove') {\n          endOptions.removedDocs = ret;\n        }\n\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endOptions);\n        }\n      } catch (ex) {\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {\n            err: ex.message\n          });\n        }\n\n        throw ex;\n      }\n\n      return ret;\n    };\n  });\n  var cursorProto = MeteorX.MongoCursor.prototype;\n  ['forEach', 'map', 'fetch', 'count', 'observeChanges', 'observe'].forEach(function (type) {\n    var originalFunc = cursorProto[type];\n\n    cursorProto[type] = function () {\n      var cursorDescription = this._cursorDescription;\n      var payload = Object.assign(Object.create(null), {\n        coll: cursorDescription.collectionName,\n        selector: JSON.stringify(cursorDescription.selector),\n        func: type,\n        cursor: true\n      });\n\n      if (cursorDescription.options) {\n        var cursorOptions = _.pick(cursorDescription.options, ['fields', 'sort', 'limit']);\n\n        for (var field in cursorOptions) {\n          var value = cursorOptions[field];\n\n          if (typeof value == 'object') {\n            value = JSON.stringify(value);\n          }\n\n          payload[field] = value;\n        }\n      }\n\n      var kadiraInfo = Kadira._getInfo();\n\n      var previousTrackNextObject;\n\n      if (kadiraInfo) {\n        var eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n        previousTrackNextObject = kadiraInfo.trackNextObject;\n\n        if (type === 'forEach' || type === 'map') {\n          kadiraInfo.trackNextObject = true;\n        }\n      }\n\n      try {\n        var ret = originalFunc.apply(this, arguments);\n        var endData = {};\n\n        if (type == 'observeChanges' || type == 'observe') {\n          var observerDriver;\n          endData.oplog = false; // get data written by the multiplexer\n\n          endData.wasMultiplexerReady = ret._wasMultiplexerReady;\n          endData.queueLength = ret._queueLength;\n          endData.elapsedPollingTime = ret._elapsedPollingTime;\n\n          if (ret._multiplexer) {\n            // older meteor versions done not have an _multiplexer value\n            observerDriver = ret._multiplexer._observeDriver;\n\n            if (observerDriver) {\n              observerDriver = ret._multiplexer._observeDriver;\n              var observerDriverClass = observerDriver.constructor;\n              var usesOplog = typeof observerDriverClass.cursorSupported == 'function';\n              endData.oplog = usesOplog;\n              var size = 0;\n\n              ret._multiplexer._cache.docs.forEach(function () {\n                size++;\n              });\n\n              endData.noOfCachedDocs = size; // if multiplexerWasNotReady, we need to get the time spend for the polling\n\n              if (!ret._wasMultiplexerReady) {\n                endData.initialPollingTime = observerDriver._lastPollTime;\n              }\n            }\n          }\n\n          if (!endData.oplog) {\n            // let's try to find the reason\n            var reasonInfo = Kadira.checkWhyNoOplog(cursorDescription, observerDriver);\n            endData.noOplogCode = reasonInfo.code;\n            endData.noOplogReason = reasonInfo.reason;\n            endData.noOplogSolution = reasonInfo.solution;\n          }\n        } else if (type == 'fetch' || type == 'map') {\n          //for other cursor operation\n          endData.docsFetched = ret.length;\n\n          if (type == 'fetch') {\n            var coll = cursorDescription.collectionName;\n            var query = cursorDescription.selector;\n            var opts = cursorDescription.options;\n            var docSize = Kadira.docSzCache.getSize(coll, query, opts, ret) * ret.length;\n            endData.docSize = docSize;\n\n            if (kadiraInfo) {\n              if (kadiraInfo.trace.type === 'method') {\n                Kadira.models.methods.trackDocSize(kadiraInfo.trace.name, docSize);\n              } else if (kadiraInfo.trace.type === 'sub') {\n                Kadira.models.pubsub.trackDocSize(kadiraInfo.trace.name, \"cursorFetches\", docSize);\n              }\n\n              kadiraInfo.trackNextObject = previousTrackNextObject;\n            } else {\n              // Fetch with no kadira info are tracked as from a null method\n              Kadira.models.methods.trackDocSize(\"<not-a-method-or-a-pub>\", docSize);\n            } // TODO: Add doc size tracking to `map` as well.\n\n          }\n        }\n\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endData);\n        }\n\n        return ret;\n      } catch (ex) {\n        if (eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {\n            err: ex.message\n          });\n        }\n\n        throw ex;\n      }\n    };\n  });\n  const SyncronousCursor = getSyncronousCursor();\n  var origNextObject = SyncronousCursor.prototype._nextObject;\n\n  SyncronousCursor.prototype._nextObject = function () {\n    var kadiraInfo = Kadira._getInfo();\n\n    var shouldTrack = kadiraInfo && kadiraInfo.trackNextObject;\n\n    if (shouldTrack) {\n      var event = Kadira.tracer.event(kadiraInfo.trace, 'db', {\n        func: '_nextObject',\n        coll: this._cursorDescription.collectionName\n      });\n    }\n\n    var result = origNextObject.call(this);\n\n    if (shouldTrack) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, event);\n    }\n\n    return result;\n  };\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"http.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/http.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar originalCall = HTTP.call;\n\nHTTP.call = function (method, url) {\n  var kadiraInfo = Kadira._getInfo();\n\n  if (kadiraInfo) {\n    var eventId = Kadira.tracer.event(kadiraInfo.trace, 'http', {\n      method: method,\n      url: url\n    });\n  }\n\n  try {\n    var response = originalCall.apply(this, arguments); //if the user supplied an asynCallback, we don't have a response object and it handled asynchronously\n    //we need to track it down to prevent issues like: #3\n\n    var endOptions = HaveAsyncCallback(arguments) ? {\n      async: true\n    } : {\n      statusCode: response.statusCode\n    };\n\n    if (eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endOptions);\n    }\n\n    return response;\n  } catch (ex) {\n    if (eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {\n        err: ex.message\n      });\n    }\n\n    throw ex;\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"email.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/email.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar originalSend = Email.send;\n\nEmail.send = function (options) {\n  var kadiraInfo = Kadira._getInfo();\n\n  if (kadiraInfo) {\n    var data = _.pick(options, 'from', 'to', 'cc', 'bcc', 'replyTo');\n\n    var eventId = Kadira.tracer.event(kadiraInfo.trace, 'email', data);\n  }\n\n  try {\n    var ret = originalSend.call(this, options);\n\n    if (eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId);\n    }\n\n    return ret;\n  } catch (ex) {\n    if (eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {\n        err: ex.message\n      });\n    }\n\n    throw ex;\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"async.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/async.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getFiberMetrics: () => getFiberMetrics,\n  resetFiberMetrics: () => resetFiberMetrics\n});\n\nvar Fibers = Npm.require('fibers');\n\nvar EventSymbol = Symbol();\nvar StartTracked = Symbol();\nvar activeFibers = 0;\nvar originalYield = Fibers.yield;\n\nFibers.yield = function () {\n  var kadiraInfo = Kadira._getInfo();\n\n  if (kadiraInfo) {\n    var eventId = Kadira.tracer.event(kadiraInfo.trace, 'async');\n\n    if (eventId) {\n      // The event unique to this fiber\n      // Using a symbol since Meteor doesn't copy symbols to new fibers created\n      // for promises. This is needed so the correct event is ended when a fiber runs after being yielded.\n      Fibers.current[EventSymbol] = eventId;\n    }\n  }\n\n  return originalYield();\n};\n\nvar originalRun = Fibers.prototype.run;\nvar originalThrowInto = Fibers.prototype.throwInto;\n\nfunction ensureFiberCounted(fiber) {\n  // If fiber.started is true, and StartTracked is false\n  // then the fiber was probably initially ran before we wrapped Fibers.run\n  if (!fiber.started || !fiber[StartTracked]) {\n    activeFibers += 1;\n    fiber[StartTracked] = true;\n  }\n}\n\nFibers.prototype.run = function (val) {\n  ensureFiberCounted(this);\n\n  if (this[EventSymbol]) {\n    var kadiraInfo = Kadira._getInfo(this);\n\n    if (kadiraInfo) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, this[EventSymbol]);\n      this[EventSymbol] = null;\n    }\n  } else if (!this.__kadiraInfo && Fibers.current && Fibers.current.__kadiraInfo) {\n    // Copy kadiraInfo when packages or user code creates a new fiber\n    // Done by many apps and packages in connect middleware since older\n    // versions of Meteor did not do it automatically\n    this.__kadiraInfo = Fibers.current.__kadiraInfo;\n  }\n\n  let result;\n\n  try {\n    result = originalRun.call(this, val);\n  } finally {\n    if (!this.started) {\n      activeFibers -= 1;\n      this[StartTracked] = false;\n    }\n  }\n\n  return result;\n};\n\nFibers.prototype.throwInto = function (val) {\n  ensureFiberCounted(this); // TODO: this should probably end the current async event since in some places\n  // Meteor calls throwInto instead of run after a fiber is yielded. For example,\n  // when a promise is awaited and rejects an error.\n\n  let result;\n\n  try {\n    result = originalThrowInto.call(this, val);\n  } finally {\n    if (!this.started) {\n      activeFibers -= 1;\n      this[StartTracked] = false;\n    }\n  }\n\n  return result;\n};\n\nlet activeFiberTotal = 0;\nlet activeFiberCount = 0;\nlet previousTotalCreated = 0;\nsetInterval(() => {\n  activeFiberTotal += activeFibers;\n  activeFiberCount += 1;\n}, 1000);\n\nfunction getFiberMetrics() {\n  return {\n    created: Fibers.fibersCreated - previousTotalCreated,\n    active: activeFiberTotal / activeFiberCount,\n    poolSize: Fibers.poolSize\n  };\n}\n\nfunction resetFiberMetrics() {\n  activeFiberTotal = 0;\n  activeFiberCount = 0;\n  previousTotalCreated = Fibers.fibersCreated;\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"error.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/error.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  MeteorDebugIgnore: () => MeteorDebugIgnore\n});\nconst MeteorDebugIgnore = Symbol();\n\nTrackUncaughtExceptions = function () {\n  process.on('uncaughtException', function (err) {\n    // skip errors with `_skipKadira` flag\n    if (err._skipKadira) {\n      return;\n    } // let the server crash normally if error tracking is disabled\n\n\n    if (!Kadira.options.enableErrorTracking) {\n      printErrorAndKill(err);\n    } // looking for already tracked errors and throw them immediately\n    // throw error immediately if kadira is not ready\n\n\n    if (err._tracked || !Kadira.connected) {\n      printErrorAndKill(err);\n    }\n\n    var trace = getTrace(err, 'server-crash', 'uncaughtException');\n    Kadira.models.error.trackError(err, trace);\n\n    Kadira._sendPayload(function () {\n      clearTimeout(timer);\n      throwError(err);\n    });\n\n    var timer = setTimeout(function () {\n      throwError(err);\n    }, 1000 * 10);\n\n    function throwError(err) {\n      // sometimes error came back from a fiber.\n      // But we don't fibers to track that error for us\n      // That's why we throw the error on the nextTick\n      process.nextTick(function () {\n        // we need to mark this error where we really need to throw\n        err._tracked = true;\n        printErrorAndKill(err);\n      });\n    }\n  });\n\n  function printErrorAndKill(err) {\n    // since we are capturing error, we are also on the error message.\n    // so developers think we are also reponsible for the error.\n    // But we are not. This will fix that.\n    console.error(err.stack);\n    process.exit(7);\n  }\n};\n\nTrackUnhandledRejections = function () {\n  process.on('unhandledRejection', function (reason) {\n    // skip errors with `_skipKadira` flag\n    if (reason._skipKadira || !Kadira.options.enableErrorTracking) {\n      return;\n    }\n\n    var trace = getTrace(reason, 'server-internal', 'unhandledRejection');\n    Kadira.models.error.trackError(reason, trace); // TODO: we should respect the --unhandled-rejections option\n    // message taken from \n    // https://github.com/nodejs/node/blob/f4797ff1ef7304659d747d181ec1e7afac408d50/lib/internal/process/promises.js#L243-L248\n\n    const message = 'This error originated either by ' + 'throwing inside of an async function without a catch block, ' + 'or by rejecting a promise which was not handled with .catch().' + ' The promise rejected with the reason: '; // We could emit a warning instead like Node does internally\n    // but it requires Node 8 or newer\n\n    console.warn(message);\n    console.error(reason && reason.stack ? reason.stack : reason);\n  });\n};\n\nTrackMeteorDebug = function () {\n  var originalMeteorDebug = Meteor._debug;\n\n  Meteor._debug = function (message, stack) {\n    // Sometimes Meteor calls Meteor._debug with no arguments\n    // to log an empty line\n    const isArgs = message !== undefined || stack !== undefined; // We've changed `stack` into an object at method and sub handlers so we can\n    // detect the error here. These errors are already tracked so don't track them again.\n\n    var alreadyTracked = false; // Some Meteor versions pass the error, and other versions pass the error stack\n    // Restore so origionalMeteorDebug shows the stack as a string instead as an object\n\n    if (stack && stack[MeteorDebugIgnore]) {\n      alreadyTracked = true;\n      arguments[1] = stack.stack;\n    } else if (stack && stack.stack && stack.stack[MeteorDebugIgnore]) {\n      alreadyTracked = true;\n      arguments[1] = stack.stack.stack;\n    } // only send to the server if connected to kadira\n\n\n    if (Kadira.options.enableErrorTracking && isArgs && !alreadyTracked && Kadira.connected) {\n      let errorMessage = message;\n\n      if (typeof message == 'string' && stack instanceof Error) {\n        const separator = message.endsWith(':') ? '' : ':';\n        errorMessage = \"\".concat(message).concat(separator, \" \").concat(stack.message);\n      }\n\n      let error = new Error(errorMessage);\n\n      if (stack instanceof Error) {\n        error.stack = stack.stack;\n      } else if (stack) {\n        error.stack = stack;\n      } else {\n        error.stack = CreateUserStack(error);\n      }\n\n      var trace = getTrace(error, 'server-internal', 'Meteor._debug');\n      Kadira.models.error.trackError(error, trace);\n    }\n\n    return originalMeteorDebug.apply(this, arguments);\n  };\n};\n\nfunction getTrace(err, type, subType) {\n  return {\n    type: type,\n    subType: subType,\n    name: err.message,\n    errored: true,\n    at: Kadira.syncedDate.getTime(),\n    events: [['start', 0, {}], ['error', 0, {\n      error: {\n        message: err.message,\n        stack: err.stack\n      }\n    }]],\n    metrics: {\n      total: 0\n    }\n  };\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"set_labels.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/set_labels.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nsetLabels = function () {\n  // name Session.prototype.send\n  var originalSend = MeteorX.Session.prototype.send;\n\n  MeteorX.Session.prototype.send = function kadira_Session_send(msg) {\n    return originalSend.call(this, msg);\n  }; // name Multiplexer initial adds\n  // Multiplexer is undefined in rocket chat\n\n\n  if (MeteorX.Multiplexer) {\n    var originalSendAdds = MeteorX.Multiplexer.prototype._sendAdds;\n\n    MeteorX.Multiplexer.prototype._sendAdds = function kadira_Multiplexer_sendAdds(handle) {\n      return originalSendAdds.call(this, handle);\n    };\n  } // name MongoConnection insert\n\n\n  var originalMongoInsert = MeteorX.MongoConnection.prototype._insert;\n\n  MeteorX.MongoConnection.prototype._insert = function kadira_MongoConnection_insert(coll, doc, cb) {\n    return originalMongoInsert.call(this, coll, doc, cb);\n  }; // name MongoConnection update\n\n\n  var originalMongoUpdate = MeteorX.MongoConnection.prototype._update;\n\n  MeteorX.MongoConnection.prototype._update = function kadira_MongoConnection_update(coll, selector, mod, options, cb) {\n    return originalMongoUpdate.call(this, coll, selector, mod, options, cb);\n  }; // name MongoConnection remove\n\n\n  var originalMongoRemove = MeteorX.MongoConnection.prototype._remove;\n\n  MeteorX.MongoConnection.prototype._remove = function kadira_MongoConnection_remove(coll, selector, cb) {\n    return originalMongoRemove.call(this, coll, selector, cb);\n  }; // name Pubsub added\n\n\n  var originalPubsubAdded = MeteorX.Session.prototype.sendAdded;\n\n  MeteorX.Session.prototype.sendAdded = function kadira_Session_sendAdded(coll, id, fields) {\n    return originalPubsubAdded.call(this, coll, id, fields);\n  }; // name Pubsub changed\n\n\n  var originalPubsubChanged = MeteorX.Session.prototype.sendChanged;\n\n  MeteorX.Session.prototype.sendChanged = function kadira_Session_sendChanged(coll, id, fields) {\n    return originalPubsubChanged.call(this, coll, id, fields);\n  }; // name Pubsub removed\n\n\n  var originalPubsubRemoved = MeteorX.Session.prototype.sendRemoved;\n\n  MeteorX.Session.prototype.sendRemoved = function kadira_Session_sendRemoved(coll, id) {\n    return originalPubsubRemoved.call(this, coll, id);\n  }; // name MongoCursor forEach\n\n\n  var originalCursorForEach = MeteorX.MongoCursor.prototype.forEach;\n\n  MeteorX.MongoCursor.prototype.forEach = function kadira_Cursor_forEach() {\n    return originalCursorForEach.apply(this, arguments);\n  }; // name MongoCursor map\n\n\n  var originalCursorMap = MeteorX.MongoCursor.prototype.map;\n\n  MeteorX.MongoCursor.prototype.map = function kadira_Cursor_map() {\n    return originalCursorMap.apply(this, arguments);\n  }; // name MongoCursor fetch\n\n\n  var originalCursorFetch = MeteorX.MongoCursor.prototype.fetch;\n\n  MeteorX.MongoCursor.prototype.fetch = function kadira_Cursor_fetch() {\n    return originalCursorFetch.apply(this, arguments);\n  }; // name MongoCursor count\n\n\n  var originalCursorCount = MeteorX.MongoCursor.prototype.count;\n\n  MeteorX.MongoCursor.prototype.count = function kadira_Cursor_count() {\n    return originalCursorCount.apply(this, arguments);\n  }; // name MongoCursor observeChanges\n\n\n  var originalCursorObserveChanges = MeteorX.MongoCursor.prototype.observeChanges;\n\n  MeteorX.MongoCursor.prototype.observeChanges = function kadira_Cursor_observeChanges() {\n    return originalCursorObserveChanges.apply(this, arguments);\n  }; // name MongoCursor observe\n\n\n  var originalCursorObserve = MeteorX.MongoCursor.prototype.observe;\n\n  MeteorX.MongoCursor.prototype.observe = function kadira_Cursor_observe() {\n    return originalCursorObserve.apply(this, arguments);\n  }; // name CrossBar listen\n\n\n  var originalCrossbarListen = DDPServer._Crossbar.prototype.listen;\n\n  DDPServer._Crossbar.prototype.listen = function kadira_Crossbar_listen(trigger, callback) {\n    return originalCrossbarListen.call(this, trigger, callback);\n  }; // name CrossBar fire\n\n\n  var originalCrossbarFire = DDPServer._Crossbar.prototype.fire;\n\n  DDPServer._Crossbar.prototype.fire = function kadira_Crossbar_fire(notification) {\n    return originalCrossbarFire.call(this, notification);\n  };\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fast_render.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/fast_render.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  wrapFastRender: () => wrapFastRender\n});\n\nfunction wrapFastRender() {\n  Meteor.startup(() => {\n    if (Package['staringatlights:fast-render']) {\n      const FastRender = Package['staringatlights:fast-render'].FastRender; // Flow Router doesn't call FastRender.route until after all\n      // Meteor.startup callbacks finish\n\n      let origRoute = FastRender.route;\n\n      FastRender.route = function (path, _callback) {\n        let callback = function () {\n          const info = Kadira._getInfo();\n\n          if (info) {\n            info.suggestedRouteName = path;\n          }\n\n          return _callback.apply(this, arguments);\n        };\n\n        return origRoute.call(FastRender, path, callback);\n      };\n    }\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fs.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/fs.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  handleErrorEvent: () => handleErrorEvent,\n  wrapFs: () => wrapFs\n});\nlet fs;\nmodule.link(\"fs\", {\n  default(v) {\n    fs = v;\n  }\n\n}, 0);\n\nconst Fibers = require('fibers');\n\nfunction wrapCallback(args, createWrapper) {\n  if (typeof args[args.length - 1] === 'function') {\n    args[args.length - 1] = createWrapper(args[args.length - 1]);\n  }\n}\n\nfunction handleErrorEvent(eventEmitter, trace, event) {\n  function handler(error) {\n    if (trace && event) {\n      Kadira.tracer.eventEnd(trace, event, {\n        error: error\n      });\n    } // Node throws the error if there are no listeners\n    // We want it to behave as if we are not listening to it\n\n\n    if (eventEmitter.listenerCount('error') === 1) {\n      eventEmitter.removeListener('error', handler);\n      eventEmitter.emit('error', error);\n    }\n  }\n\n  eventEmitter.on('error', handler);\n}\n\nfunction wrapFs() {\n  // Some npm packages will do fs calls in the\n  // callback of another fs call.\n  // This variable is set with the kadiraInfo while\n  // a callback is run so we can track other fs calls\n  let fsKadiraInfo = null;\n  let originalStat = fs.stat;\n\n  fs.stat = function () {\n    const kadiraInfo = Kadira._getInfo() || fsKadiraInfo;\n\n    if (kadiraInfo) {\n      let event = Kadira.tracer.event(kadiraInfo.trace, 'fs', {\n        func: 'stat',\n        path: arguments[0],\n        options: typeof arguments[1] === 'object' ? arguments[1] : undefined\n      });\n      wrapCallback(arguments, cb => {\n        return function () {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, event);\n\n          if (!Fibers.current) {\n            fsKadiraInfo = kadiraInfo;\n          }\n\n          try {\n            cb.apply(null, arguments);\n          } finally {\n            fsKadiraInfo = null;\n          }\n        };\n      });\n    }\n\n    return originalStat.apply(fs, arguments);\n  };\n\n  let originalCreateReadStream = fs.createReadStream;\n\n  fs.createReadStream = function () {\n    const kadiraInfo = Kadira._getInfo() || fsKadiraInfo;\n    let stream = originalCreateReadStream.apply(this, arguments);\n\n    if (kadiraInfo) {\n      const event = Kadira.tracer.event(kadiraInfo.trace, 'fs', {\n        func: 'createReadStream',\n        path: arguments[0],\n        options: JSON.stringify(arguments[1])\n      });\n      stream.on('end', () => {\n        Kadira.tracer.eventEnd(kadiraInfo.trace, event);\n      });\n      handleErrorEvent(stream, kadiraInfo.trace, event);\n    }\n\n    return stream;\n  };\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"gc.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/gc.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  default: () => GCMetrics\n});\nlet PerformanceObserver;\nlet constants;\n\ntry {\n  // Only available in Node 8.5 and newer\n  ({\n    PerformanceObserver,\n    constants\n  } = require('perf_hooks'));\n} catch (e) {}\n\nclass GCMetrics {\n  constructor() {\n    this._observer = null;\n    this.started = false;\n    this.metrics = {};\n    this.reset();\n  }\n\n  start() {\n    if (this.started) {\n      return false;\n    }\n\n    if (!PerformanceObserver || !constants) {\n      // The node version is too old to have PerformanceObserver\n      return false;\n    }\n\n    this.started = true;\n    this.observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        let metric = this._mapKindToMetric(entry.kind);\n\n        this.metrics[metric] += entry.duration;\n      });\n    });\n    this.observer.observe({\n      entryTypes: ['gc'],\n      buffered: false\n    });\n  }\n\n  _mapKindToMetric(gcKind) {\n    switch (gcKind) {\n      case constants.NODE_PERFORMANCE_GC_MAJOR:\n        return 'gcMajor';\n\n      case constants.NODE_PERFORMANCE_GC_MINOR:\n        return 'gcMinor';\n\n      case constants.NODE_PERFORMANCE_GC_INCREMENTAL:\n        return 'gcIncremental';\n\n      case constants.NODE_PERFORMANCE_GC_WEAKCB:\n        return 'gcWeakCB';\n\n      default:\n        console.log(\"Monti APM: Unrecognized GC Kind: \".concat(gcKind));\n    }\n  }\n\n  reset() {\n    this.metrics = {\n      gcMajor: 0,\n      gcMinor: 0,\n      gcIncremental: 0,\n      gcWeakCB: 0\n    };\n  }\n\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mongo-driver-events.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/mongo-driver-events.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  getMongoDriverStats: () => getMongoDriverStats,\n  resetMongoDriverStats: () => resetMongoDriverStats\n});\nvar client;\nvar serverStatus = Object.create(null);\nvar otherCheckouts = 0; // These metrics are only for the mongo pool for the primary Mongo server\n\nvar primaryCheckouts = 0;\nvar totalCheckoutTime = 0;\nvar maxCheckoutTime = 0;\nvar created = 0;\nvar measurementCount = 0;\nvar pendingTotal = 0;\nvar checkedOutTotal = 0;\nsetInterval(() => {\n  let status = getServerStatus(getPrimary(), true);\n\n  if (status) {\n    pendingTotal += status.pending.length;\n    checkedOutTotal += status.checkedOut.size;\n    measurementCount += 1;\n  }\n}, 1000); // the pool defaults to 100, though usually the default isn't used\n\nvar DEFAULT_MAX_POOL_SIZE = 100;\n\nfunction getPoolSize() {\n  if (client && client.topology && client.topology.s && client.topology.s.options) {\n    return client.topology.s.options.maxPoolSize || DEFAULT_MAX_POOL_SIZE;\n  }\n\n  return 0;\n}\n\nfunction getMongoDriverStats() {\n  return {\n    poolSize: getPoolSize(),\n    primaryCheckouts,\n    otherCheckouts,\n    checkoutTime: totalCheckoutTime,\n    maxCheckoutTime,\n    pending: pendingTotal / measurementCount,\n    checkedOut: checkedOutTotal / measurementCount,\n    created\n  };\n}\n\n;\n\nfunction resetMongoDriverStats() {\n  primaryCheckouts = 0;\n  otherCheckouts = 0;\n  totalCheckoutTime = 0;\n  maxCheckoutTime = 0;\n  pendingTotal = 0;\n  checkedOutTotal = 0;\n  measurementCount = 0;\n  primaryCheckouts = 0;\n  created = 0;\n}\n\nMeteor.startup(() => {\n  let _client = MongoInternals.defaultRemoteCollectionDriver().mongo.client;\n\n  if (!_client || !_client.s) {\n    // Old version of agent\n    return;\n  }\n\n  let options = _client.s.options;\n\n  if (!options || !options.useUnifiedTopology) {\n    // CMAP and topology monitoring requires useUnifiedTopology\n    return;\n  }\n\n  client = _client; // Get the number of connections already created\n\n  let primaryDescription = getServerDescription(getPrimary());\n\n  if (primaryDescription && primaryDescription.s && primaryDescription.s.pool) {\n    let pool = primaryDescription.s.pool;\n    let totalConnections = pool.totalConnectionCount;\n    let availableConnections = pool.availableConnectionCount; // totalConnectionCount counts available connections twice\n\n    created += totalConnections - availableConnections;\n  }\n\n  client.on('connectionCreated', event => {\n    let primary = getPrimary();\n\n    if (primary === event.address) {\n      created += 1;\n    }\n  });\n  client.on('connectionClosed', event => {\n    let status = getServerStatus(event.address, true);\n\n    if (status) {\n      status.checkedOut.delete(event.connectionId);\n    }\n  });\n  client.on('connectionCheckOutStarted', event => {\n    let status = getServerStatus(event.address);\n    status.pending.push(event.time);\n  });\n  client.on('connectionCheckOutFailed', event => {\n    let status = getServerStatus(event.address, true);\n\n    if (status) {\n      status.pending.shift();\n    }\n  });\n  client.on('connectionCheckedOut', event => {\n    let status = getServerStatus(event.address);\n    let start = status.pending.shift();\n    let primary = getPrimary();\n\n    if (start && primary === event.address) {\n      let checkoutDuration = event.time.getTime() - start.getTime();\n      primaryCheckouts += 1;\n      totalCheckoutTime += checkoutDuration;\n\n      if (checkoutDuration > maxCheckoutTime) {\n        maxCheckoutTime = checkoutDuration;\n      }\n    } else {\n      otherCheckouts += 1;\n    }\n\n    status.checkedOut.add(event.connectionId);\n  });\n  client.on('connectionCheckedIn', event => {\n    let status = getServerStatus(event.address, true);\n\n    if (status) {\n      status.checkedOut.delete(event.connectionId);\n    }\n  });\n  client.on('serverClosed', function (event) {\n    delete serverStatus[event.address];\n  });\n});\n\nfunction getServerStatus(address, disableCreate) {\n  if (typeof address !== 'string') {\n    return null;\n  }\n\n  if (address in serverStatus) {\n    return serverStatus[address];\n  }\n\n  if (disableCreate) {\n    return null;\n  }\n\n  serverStatus[address] = {\n    pending: [],\n    checkedOut: new Set()\n  };\n  return serverStatus[address];\n}\n\nfunction getPrimary() {\n  if (!client || !client.topology) {\n    return null;\n  }\n\n  let server = client.topology.lastIsMaster();\n\n  if (server.type === 'Standalone') {\n    return server.address;\n  }\n\n  if (!server || !server.primary) {\n    return null;\n  }\n\n  return server.primary;\n}\n\nfunction getServerDescription(address) {\n  if (!client || !client.topology || !client.topology.s || !client.topology.s.servers) {\n    return null;\n  }\n\n  let description = client.topology.s.servers.get(address);\n  return description || null;\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"picker.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/picker.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  wrapPicker: () => wrapPicker\n});\nlet Fiber;\nmodule.link(\"fibers\", {\n  default(v) {\n    Fiber = v;\n  }\n\n}, 0);\n\nfunction wrapPicker() {\n  Meteor.startup(() => {\n    if (!Package['meteorhacks:picker']) {\n      return;\n    }\n\n    const Picker = Package['meteorhacks:picker'].Picker; // Wrap Picker._processRoute to make sure it runs the\n    // handler in a Fiber with __kadiraInfo set\n    // Needed if any previous middleware called `next` outside of a fiber.\n\n    const origProcessRoute = Picker.constructor.prototype._processRoute;\n\n    Picker.constructor.prototype._processRoute = function (callback, params, req) {\n      const args = arguments;\n\n      if (!Fiber.current) {\n        return new Fiber(() => {\n          Kadira._setInfo(req.__kadiraInfo);\n\n          return origProcessRoute.apply(this, args);\n        }).run();\n      }\n\n      if (req.__kadiraInfo) {\n        Kadira._setInfo(req.__kadiraInfo);\n      }\n\n      return origProcessRoute.apply(this, args);\n    };\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"wrap_routers.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/wrap_routers.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  wrapRouters: () => wrapRouters\n});\nlet Fibers;\nmodule.link(\"fibers\", {\n  default(v) {\n    Fibers = v;\n  }\n\n}, 0);\n\nfunction wrapRouters() {\n  let connectRoutes = [];\n\n  try {\n    connectRoutes.push(require('connect-route'));\n  } catch (e) {// We can ignore errors\n  }\n\n  try {\n    if (Package['simple:json-routes']) {\n      // Relative from .npm/node_modules/meteor/montiapm_agent/node_modules\n      // Npm.require is less strict on what paths you use than require\n      connectRoutes.push(Npm.require('../../simple_json-routes/node_modules/connect-route'));\n    }\n  } catch (e) {// we can ignore errors\n  }\n\n  connectRoutes.forEach(connectRoute => {\n    if (typeof connectRoute !== 'function') {\n      return;\n    }\n\n    connectRoute(router => {\n      const oldAdd = router.constructor.prototype.add;\n\n      router.constructor.prototype.add = function (method, route, handler) {\n        // Unlike most routers, connect-route doesn't look at the arguments length\n        oldAdd.call(this, method, route, function () {\n          if (arguments[0] && arguments[0].__kadiraInfo) {\n            arguments[0].__kadiraInfo.suggestedRouteName = route;\n          }\n\n          handler.apply(null, arguments);\n        });\n      };\n    });\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"wrap_webapp.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/hijack/wrap_webapp.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  checkHandlersInFiber: () => checkHandlersInFiber,\n  wrapWebApp: () => wrapWebApp\n});\nlet WebAppInternals, WebApp;\nmodule.link(\"meteor/webapp\", {\n  WebAppInternals(v) {\n    WebAppInternals = v;\n  },\n\n  WebApp(v) {\n    WebApp = v;\n  }\n\n}, 0);\nlet Fibers;\nmodule.link(\"fibers\", {\n  default(v) {\n    Fibers = v;\n  }\n\n}, 1);\n// Maximum content-length size\nMAX_BODY_SIZE = 8000; // Maximum characters for stringified body\n\nMAX_STRINGIFIED_BODY_SIZE = 4000;\nconst canWrapStaticHandler = !!WebAppInternals.staticFilesByArch; // This checks if running on a version of Meteor that\n// wraps connect handlers in a fiber.\n// This check is dependant on Meteor's implementation of `use`,\n// which wraps every handler in a new fiber.\n// This will need to be updated if Meteor starts reusing\n// fibers when they exist.\n\nfunction checkHandlersInFiber() {\n  const handlersLength = WebApp.rawConnectHandlers.stack.length;\n  let inFiber = false;\n  let outsideFiber = Fibers.current;\n  WebApp.rawConnectHandlers.use((_req, _res, next) => {\n    inFiber = Fibers.current && Fibers.current !== outsideFiber; // in case we didn't successfully remove this handler\n    // and it is a real request\n\n    next();\n  });\n\n  if (WebApp.rawConnectHandlers.stack[handlersLength]) {\n    let handler = WebApp.rawConnectHandlers.stack[handlersLength].handle; // remove the newly added handler\n    // We remove it immediately so there is no opportunity for\n    // other code to add handlers first if the current fiber is yielded\n    // while running the handler\n\n    while (WebApp.rawConnectHandlers.stack.length > handlersLength) {\n      WebApp.rawConnectHandlers.stack.pop();\n    }\n\n    handler({}, {}, () => {});\n  }\n\n  return inFiber;\n}\n\nconst InfoSymbol = Symbol();\n\nfunction wrapWebApp() {\n  return Promise.asyncApply(() => {\n    if (!checkHandlersInFiber() || !canWrapStaticHandler) {\n      return;\n    }\n\n    const parseUrl = require('parseurl');\n\n    WebAppInternals.registerBoilerplateDataCallback('__montiApmRouteName', function (request) {\n      // TODO: record in trace which arch is used\n      if (request[InfoSymbol]) {\n        request[InfoSymbol].isAppRoute = true;\n      } // Let WebApp know we didn't make changes\n      // so it can use a cache\n\n\n      return false;\n    }); // We want the request object returned by categorizeRequest to have\n    // __kadiraInfo\n\n    let origCategorizeRequest = WebApp.categorizeRequest;\n\n    WebApp.categorizeRequest = function (req) {\n      let result = origCategorizeRequest.apply(this, arguments);\n\n      if (result && req.__kadiraInfo) {\n        result[InfoSymbol] = req.__kadiraInfo;\n      }\n\n      return result;\n    }; // Adding the handler directly to the stack\n    // to force it to be the first one to run\n\n\n    WebApp.rawConnectHandlers.stack.unshift({\n      route: '',\n      handle: (req, res, next) => {\n        const name = parseUrl(req).pathname;\n        const trace = Kadira.tracer.start(\"\".concat(req.method, \"-\").concat(name), 'http');\n\n        const headers = Kadira.tracer._applyObjectFilters(req.headers);\n\n        Kadira.tracer.event(trace, 'start', {\n          url: req.url,\n          method: req.method,\n          headers: JSON.stringify(headers)\n        });\n        req.__kadiraInfo = {\n          trace\n        };\n        res.on('finish', () => {\n          if (req.__kadiraInfo.asyncEvent) {\n            Kadira.tracer.eventEnd(trace, req.__kadiraInfo.asyncEvent);\n          }\n\n          Kadira.tracer.endLastEvent(trace);\n\n          if (req.__kadiraInfo.isStatic) {\n            trace.name = \"\".concat(req.method, \"-<static file>\");\n          } else if (req.__kadiraInfo.suggestedRouteName) {\n            trace.name = \"\".concat(req.method, \"-\").concat(req.__kadiraInfo.suggestedRouteName);\n          } else if (req.__kadiraInfo.isAppRoute) {\n            trace.name = \"\".concat(req.method, \"-<app>\");\n          }\n\n          const isJson = req.headers['content-type'] === 'application/json';\n          const hasSmallBody = req.headers['content-length'] > 0 && req.headers['content-length'] < MAX_BODY_SIZE; // Check after all middleware have run to see if any of them\n          // set req.body\n          // Technically bodies can be used with any method, but since many load balancers and\n          // other software only support bodies for POST requests, we are\n          // not recording the body for other methods.\n\n          if (req.method === 'POST' && req.body && isJson && hasSmallBody) {\n            try {\n              let body = JSON.stringify(req.body); // Check the body size again in case it is much\n              // larger than what was in the content-length header\n\n              if (body.length < MAX_STRINGIFIED_BODY_SIZE) {\n                trace.events[0].data.body = body;\n              }\n            } catch (e) {// It is okay if this fails\n            }\n          } // TODO: record status code\n\n\n          Kadira.tracer.event(trace, 'complete');\n          let built = Kadira.tracer.buildTrace(trace);\n          Kadira.models.http.processRequest(built, req, res);\n        });\n        next();\n      }\n    });\n\n    function wrapHandler(handler) {\n      // connect identifies error handles by them accepting\n      // four arguments\n      let errorHandler = handler.length === 4;\n\n      function wrapper(req, res, next) {\n        let error;\n\n        if (errorHandler) {\n          error = req;\n          req = res;\n          res = next;\n          next = arguments[3];\n        }\n\n        const kadiraInfo = req.__kadiraInfo;\n\n        Kadira._setInfo(kadiraInfo);\n\n        let nextCalled = false; // TODO: track errors passed to next or thrown\n\n        function wrappedNext() {\n          if (kadiraInfo && kadiraInfo.asyncEvent) {\n            Kadira.tracer.eventEnd(req.__kadiraInfo.trace, req.__kadiraInfo.asyncEvent);\n            req.__kadiraInfo.asyncEvent = null;\n          }\n\n          nextCalled = true;\n          next(...arguments);\n        }\n\n        let potentialPromise;\n\n        if (errorHandler) {\n          potentialPromise = handler.call(this, error, req, res, wrappedNext);\n        } else {\n          potentialPromise = handler.call(this, req, res, wrappedNext);\n        }\n\n        if (potentialPromise && typeof potentialPromise.then === 'function') {\n          potentialPromise.then(() => {\n            // res.finished is depreciated in Node 13, but it is the only option\n            // for Node 12.9 and older.\n            if (kadiraInfo && !res.finished && !nextCalled) {\n              const lastEvent = Kadira.tracer.getLastEvent(kadiraInfo.trace);\n\n              if (lastEvent.endAt) {\n                // req is not done, and next has not been called\n                // create an async event that will end when either of those happens\n                kadiraInfo.asyncEvent = Kadira.tracer.event(kadiraInfo.trace, 'async');\n              }\n            }\n          });\n        }\n\n        return potentialPromise;\n      }\n\n      if (errorHandler) {\n        return function (error, req, res, next) {\n          return wrapper(error, req, res, next);\n        };\n      } else {\n        return function (req, res, next) {\n          return wrapper(req, res, next);\n        };\n      }\n    }\n\n    function wrapConnect(app, wrapStack) {\n      let oldUse = app.use;\n\n      if (wrapStack) {\n        // We need to set kadiraInfo on the Fiber the handler will run in.\n        // Meteor has already wrapped the handler to run it in a new Fiber\n        // by using Promise.asyncApply so we are not able to directly set it\n        // on that Fiber. \n        // Meteor's promise library copies properties from the current fiber to\n        // the new fiber, so we can wrap it in another Fiber with kadiraInfo set\n        // and Meteor will copy kadiraInfo to the new Fiber.\n        // It will only create the additional Fiber if it isn't already running in a Fiber\n        app.stack.forEach(entry => {\n          let wrappedHandler = wrapHandler(entry.handle);\n\n          if (entry.handle.length >= 4) {\n            entry.handle = function (error, req, res, next) {\n              return Promise.asyncApply(wrappedHandler, this, arguments, true);\n            };\n          } else {\n            entry.handle = function (req, res, next) {\n              return Promise.asyncApply(wrappedHandler, this, arguments, true);\n            };\n          }\n        });\n      }\n\n      app.use = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        args[args.length - 1] = wrapHandler(args[args.length - 1]);\n        return oldUse.apply(app, args);\n      };\n    }\n\n    wrapConnect(WebApp.rawConnectHandlers, false);\n    wrapConnect(WebAppInternals.meteorInternalHandlers, false); // The oauth package and other core packages might have already added their middleware,\n    // so we need to wrap the existing middleware\n\n    wrapConnect(WebApp.connectHandlers, true);\n    wrapConnect(WebApp.connectApp, false);\n    let oldStaticFilesMiddleware = WebAppInternals.staticFilesMiddleware;\n    const staticHandler = wrapHandler(oldStaticFilesMiddleware.bind(WebAppInternals, WebAppInternals.staticFilesByArch));\n\n    WebAppInternals.staticFilesMiddleware = function (_staticFiles, req, res, next) {\n      if (req.__kadiraInfo) {\n        req.__kadiraInfo.isStatic = true;\n      }\n\n      return staticHandler(req, res, function () {\n        // if the request is for a static file, the static handler will end the response\n        // instead of calling next\n        req.__kadiraInfo.isStatic = false;\n        return next.apply(this, arguments);\n      });\n    };\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"environment_variables.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/environment_variables.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nfunction normalizedPrefix(name) {\n  return name.replace('KADIRA_', 'MONTI_');\n}\n\nKadira._parseEnv = function (env) {\n  var options = {};\n\n  for (var name in env) {\n    var value = env[name];\n    var normalizedName = normalizedPrefix(name);\n    var info = Kadira._parseEnv._options[normalizedName];\n\n    if (info && value) {\n      options[info.name] = info.parser(value);\n    }\n  }\n\n  return options;\n};\n\nKadira._parseEnv.parseInt = function (str) {\n  var num = parseInt(str);\n  if (num || num === 0) return num;\n  throw new Error('Kadira: Match Error: \"' + num + '\" is not a number');\n};\n\nKadira._parseEnv.parseBool = function (str) {\n  str = str.toLowerCase();\n  if (str === 'true') return true;\n  if (str === 'false') return false;\n  throw new Error('Kadira: Match Error: ' + str + ' is not a boolean');\n};\n\nKadira._parseEnv.parseUrl = function (str) {\n  return str;\n};\n\nKadira._parseEnv.parseString = function (str) {\n  return str;\n};\n\nKadira._parseEnv._options = {\n  // auth\n  MONTI_APP_ID: {\n    name: 'appId',\n    parser: Kadira._parseEnv.parseString\n  },\n  MONTI_APP_SECRET: {\n    name: 'appSecret',\n    parser: Kadira._parseEnv.parseString\n  },\n  // delay to send the initial ping to the kadira engine after page loads\n  MONTI_OPTIONS_CLIENT_ENGINE_SYNC_DELAY: {\n    name: 'clientEngineSyncDelay',\n    parser: Kadira._parseEnv.parseInt\n  },\n  // time between sending errors to the engine\n  MONTI_OPTIONS_ERROR_DUMP_INTERVAL: {\n    name: 'errorDumpInterval',\n    parser: Kadira._parseEnv.parseInt\n  },\n  // no of errors allowed in a given interval\n  MONTI_OPTIONS_MAX_ERRORS_PER_INTERVAL: {\n    name: 'maxErrorsPerInterval',\n    parser: Kadira._parseEnv.parseInt\n  },\n  // a zone.js specific option to collect the full stack trace(which is not much useful)\n  MONTI_OPTIONS_COLLECT_ALL_STACKS: {\n    name: 'collectAllStacks',\n    parser: Kadira._parseEnv.parseBool\n  },\n  // enable error tracking (which is turned on by default)\n  MONTI_OPTIONS_ENABLE_ERROR_TRACKING: {\n    name: 'enableErrorTracking',\n    parser: Kadira._parseEnv.parseBool\n  },\n  // kadira engine endpoint\n  MONTI_OPTIONS_ENDPOINT: {\n    name: 'endpoint',\n    parser: Kadira._parseEnv.parseUrl\n  },\n  // define the hostname of the current running process\n  MONTI_OPTIONS_HOSTNAME: {\n    name: 'hostname',\n    parser: Kadira._parseEnv.parseString\n  },\n  // interval between sending data to the kadira engine from the server\n  MONTI_OPTIONS_PAYLOAD_TIMEOUT: {\n    name: 'payloadTimeout',\n    parser: Kadira._parseEnv.parseInt\n  },\n  // set HTTP/HTTPS proxy\n  MONTI_OPTIONS_PROXY: {\n    name: 'proxy',\n    parser: Kadira._parseEnv.parseUrl\n  },\n  // number of items cached for tracking document size\n  MONTI_OPTIONS_DOCUMENT_SIZE_CACHE_SIZE: {\n    name: 'documentSizeCacheSize',\n    parser: Kadira._parseEnv.parseInt\n  },\n  // enable uploading sourcemaps\n  MONTI_UPLOAD_SOURCE_MAPS: {\n    name: 'uploadSourceMaps',\n    parser: Kadira._parseEnv.parseBool\n  },\n  MONTI_RECORD_IP_ADDRESS: {\n    name: 'recordIPAddress',\n    parser: Kadira._parseEnv.parseString\n  },\n  MONTI_EVENT_STACK_TRACE: {\n    name: 'eventStackTrace',\n    parser: Kadira._parseEnv.parseBool\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"auto_connect.js\":function module(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/auto_connect.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nKadira._connectWithEnv = function () {\n  var options = Kadira._parseEnv(process.env);\n\n  if (options.appId && options.appSecret) {\n    Kadira.connect(options.appId, options.appSecret, options);\n\n    Kadira.connect = function () {\n      throw new Error('Kadira has been already connected using credentials from Environment Variables');\n    };\n  }\n};\n\nKadira._connectWithSettings = function () {\n  var montiSettings = Meteor.settings.monti || Meteor.settings.kadira;\n\n  if (montiSettings && montiSettings.appId && montiSettings.appSecret) {\n    Kadira.connect(montiSettings.appId, montiSettings.appSecret, montiSettings.options || {});\n\n    Kadira.connect = function () {\n      throw new Error('Kadira has been already connected using credentials from Meteor.settings');\n    };\n  }\n}; // Try to connect automatically\n\n\nKadira._connectWithEnv();\n\nKadira._connectWithSettings();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"conflicting_agents.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/conflicting_agents.js                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nconst conflictingPackages = ['mdg:meteor-apm-agent', 'lmachens:kadira', 'meteorhacks:kadira'];\nMeteor.startup(() => {\n  conflictingPackages.forEach(name => {\n    if (name in Package) {\n      console.log(\"Monti APM: your app is using the \".concat(name, \" package. Using more than one APM agent in an app can cause unexpected problems.\"));\n    }\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\".meteor-package-versions\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/montiapm_agent/lib/.meteor-package-versions                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\"accounts-base\":\"1.8.0\",\"accounts-facebook\":\"1.3.2\",\"accounts-google\":\"1.3.3\",\"accounts-oauth\":\"1.2.0\",\"accounts-password\":\"1.7.0\",\"accounts-twitter\":\"1.4.2\",\"allow-deny\":\"1.1.0\",\"autoupdate\":\"1.7.0\",\"babel-compiler\":\"7.6.2\",\"babel-runtime\":\"1.5.0\",\"base64\":\"1.0.12\",\"binary-heap\":\"1.0.11\",\"blaze\":\"2.5.0\",\"blaze-html-templates\":\"1.2.1\",\"blaze-tools\":\"1.1.2\",\"boilerplate-generator\":\"1.7.1\",\"bozhao:link-accounts\":\"2.4.0\",\"caching-compiler\":\"1.2.2\",\"caching-html-compiler\":\"1.2.1\",\"callback-hook\":\"1.3.0\",\"check\":\"1.3.1\",\"coffeescript\":\"1.0.17\",\"ctjp:meteor-intl-tel-input\":\"3.7.1_2\",\"ddp\":\"1.4.0\",\"ddp-client\":\"2.4.1\",\"ddp-common\":\"1.4.0\",\"ddp-rate-limiter\":\"1.0.9\",\"ddp-server\":\"2.3.3\",\"diff-sequence\":\"1.1.1\",\"dynamic-import\":\"0.6.0\",\"ecmascript\":\"0.15.1\",\"ecmascript-runtime\":\"0.7.0\",\"ecmascript-runtime-client\":\"0.11.1\",\"ecmascript-runtime-server\":\"0.10.1\",\"ejson\":\"1.1.1\",\"email\":\"2.0.0\",\"es5-shim\":\"4.8.0\",\"facebook-oauth\":\"1.7.4\",\"fetch\":\"0.1.1\",\"gadicohen:robots-txt\":\"0.0.10\",\"gadicohen:sitemaps\":\"0.0.26\",\"geojson-utils\":\"1.0.10\",\"goltfisch:hotjar\":\"0.1.2\",\"google-oauth\":\"1.3.0\",\"hammer:hammer\":\"2.0.4_2\",\"hot-code-push\":\"1.0.4\",\"html-tools\":\"1.1.2\",\"htmljs\":\"1.1.1\",\"http\":\"1.4.4\",\"id-map\":\"1.1.1\",\"inter-process-messaging\":\"0.1.1\",\"jaakhermans:meteor-linkedin-connect\":\"0.0.1\",\"jcbernack:reactive-aggregate\":\"1.0.0\",\"jonblum:jquery-cropper\":\"2.3.0\",\"jquery\":\"1.11.11\",\"kadira:blaze-layout\":\"2.3.0\",\"kadira:dochead\":\"1.5.0\",\"kadira:flow-router\":\"2.12.1\",\"lamhieu:meteorx\":\"2.1.1\",\"lamhieu:unblock\":\"1.0.0\",\"launch-screen\":\"1.2.1\",\"lepozepo:s3\":\"5.2.8\",\"less\":\"2.8.0\",\"littledata:synced-cron\":\"1.5.1\",\"livedata\":\"1.0.18\",\"localstorage\":\"1.2.0\",\"logging\":\"1.2.0\",\"matb33:collection-hooks\":\"1.1.0\",\"meteor\":\"1.9.3\",\"meteor-base\":\"1.4.0\",\"meteorhacks:picker\":\"1.0.3\",\"meteortoys:toykit\":\"10.0.0\",\"minifier-css\":\"1.5.4\",\"minifier-js\":\"2.6.1\",\"minimongo\":\"1.6.2\",\"mobile-experience\":\"1.1.0\",\"mobile-status-bar\":\"1.1.0\",\"modern-browsers\":\"0.1.5\",\"modules\":\"0.16.0\",\"modules-runtime\":\"0.12.0\",\"momentjs:moment\":\"2.29.1\",\"mongo\":\"1.10.1\",\"mongo-decimal\":\"0.1.2\",\"mongo-dev-server\":\"1.1.0\",\"mongo-id\":\"1.0.8\",\"mongo-livedata\":\"1.0.12\",\"montiapm:agent\":\"2.44.0\",\"montiapm:meteorx\":\"2.2.0\",\"msavin:mongol\":\"10.0.1\",\"nitrolabs:cdn\":\"1.3.0\",\"npm-bcrypt\":\"0.9.4\",\"npm-mongo\":\"3.8.1\",\"oauth\":\"1.3.2\",\"oauth1\":\"1.3.0\",\"oauth2\":\"1.3.0\",\"observe-sequence\":\"1.0.19\",\"okgrow:analytics\":\"3.0.5\",\"ongoworks:security\":\"2.1.0\",\"ordered-dict\":\"1.1.0\",\"ostrio:flow-router-extra\":\"3.7.5\",\"pauli:accounts-linkedin\":\"1.3.1\",\"pauli:linkedin\":\"1.3.1\",\"perak:camera\":\"1.0.1\",\"promise\":\"0.11.2\",\"random\":\"1.2.0\",\"rate-limit\":\"1.0.9\",\"rcy:nouislider\":\"7.0.7_2\",\"react-fast-refresh\":\"0.1.1\",\"react-meteor-data\":\"2.3.3\",\"reactive-dict\":\"1.3.0\",\"reactive-var\":\"1.0.11\",\"reload\":\"1.3.1\",\"retry\":\"1.1.0\",\"routepolicy\":\"1.1.0\",\"service-configuration\":\"1.0.11\",\"session\":\"1.2.0\",\"sha\":\"1.0.9\",\"shell-server\":\"0.5.0\",\"sinda:fancybox\":\"1.0.2\",\"socket-stream-client\":\"0.3.3\",\"spacebars\":\"1.2.0\",\"spacebars-compiler\":\"1.3.0\",\"srp\":\"1.1.0\",\"standard-minifier-css\":\"1.7.3\",\"standard-minifier-js\":\"2.6.1\",\"templating\":\"1.4.1\",\"templating-compiler\":\"1.4.1\",\"templating-runtime\":\"1.5.0\",\"templating-tools\":\"1.2.1\",\"themeteorchef:jquery-validation\":\"1.14.0\",\"tmeasday:publish-counts\":\"0.8.0\",\"tracker\":\"1.2.0\",\"tsega:bootstrap3-datetimepicker\":\"3.1.3_3\",\"twbs:bootstrap\":\"3.3.6\",\"twitter-oauth\":\"1.2.0\",\"typescript\":\"4.1.2\",\"ui\":\"1.0.13\",\"underscore\":\"1.0.10\",\"url\":\"1.3.2\",\"webapp\":\"1.10.1\",\"webapp-hashing\":\"1.1.0\",\"zodern:meteor-package-versions\":\"0.2.1\"}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"node_modules\":{\"monti-apm-sketches-js\":{\"package.json\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/montiapm_agent/node_modules/monti-apm-sketches-js/package.json                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"monti-apm-sketches-js\",\n  \"version\": \"0.0.3\",\n  \"main\": \"index.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/montiapm_agent/node_modules/monti-apm-sketches-js/index.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.useNode();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"parseurl\":{\"package.json\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/montiapm_agent/node_modules/parseurl/package.json                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"parseurl\",\n  \"version\": \"1.3.3\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/montiapm_agent/node_modules/parseurl/index.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.useNode();\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/montiapm:agent/lib/common/utils.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/common/unify.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/models/base_error.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/jobs.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/retry.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/utils.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/ntp.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/sourcemaps.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/wait_time_builder.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/check_for_oplog.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/tracer/tracer.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/tracer/default_filters.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/tracer/tracer_store.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/models/0model.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/models/methods.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/models/pubsub.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/models/system.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/models/errors.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/docsize_cache.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/kadira.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/wrap_server.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/wrap_session.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/wrap_subscription.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/wrap_observers.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/wrap_ddp_stringify.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/instrument.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/db.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/http.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/email.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/async.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/error.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/hijack/set_labels.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/environment_variables.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/auto_connect.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/conflicting_agents.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/common/default_error_filters.js\");\nrequire(\"/node_modules/meteor/montiapm:agent/lib/common/send.js\");\n\n/* Exports */\nPackage._define(\"montiapm:agent\", {\n  Kadira: Kadira,\n  Monti: Monti\n});\n\n})();\n","servePath":"/packages/montiapm_agent.js","sourceMap":{"version":3,"sources":["packages/montiapm:agent/lib/common/utils.js","packages/montiapm:agent/lib/common/unify.js","packages/montiapm:agent/lib/common/default_error_filters.js","packages/montiapm:agent/lib/common/send.js","packages/montiapm:agent/lib/models/base_error.js","packages/montiapm:agent/lib/models/0model.js","packages/montiapm:agent/lib/models/methods.js","packages/montiapm:agent/lib/models/pubsub.js","packages/montiapm:agent/lib/models/system.js","packages/montiapm:agent/lib/models/errors.js","packages/montiapm:agent/lib/models/http.js","packages/montiapm:agent/lib/jobs.js","packages/montiapm:agent/lib/retry.js","packages/montiapm:agent/lib/utils.js","packages/montiapm:agent/lib/ntp.js","packages/montiapm:agent/lib/sourcemaps.js","packages/montiapm:agent/lib/wait_time_builder.js","packages/montiapm:agent/lib/check_for_oplog.js","packages/montiapm:agent/lib/tracer/tracer.js","packages/montiapm:agent/lib/tracer/default_filters.js","packages/montiapm:agent/lib/tracer/tracer_store.js","packages/montiapm:agent/lib/docsize_cache.js","packages/montiapm:agent/lib/kadira.js","packages/montiapm:agent/lib/hijack/wrap_server.js","packages/montiapm:agent/lib/hijack/wrap_session.js","packages/montiapm:agent/lib/hijack/wrap_subscription.js","packages/montiapm:agent/lib/hijack/wrap_observers.js","packages/montiapm:agent/lib/hijack/wrap_ddp_stringify.js","packages/montiapm:agent/lib/hijack/instrument.js","packages/montiapm:agent/lib/hijack/db.js","packages/montiapm:agent/lib/hijack/http.js","packages/montiapm:agent/lib/hijack/email.js","packages/montiapm:agent/lib/hijack/async.js","packages/montiapm:agent/lib/hijack/error.js","packages/montiapm:agent/lib/hijack/set_labels.js","packages/montiapm:agent/lib/hijack/fast_render.js","packages/montiapm:agent/lib/hijack/fs.js","packages/montiapm:agent/lib/hijack/gc.js","packages/montiapm:agent/lib/hijack/mongo-driver-events.js","packages/montiapm:agent/lib/hijack/picker.js","packages/montiapm:agent/lib/hijack/wrap_routers.js","packages/montiapm:agent/lib/hijack/wrap_webapp.js","packages/montiapm:agent/lib/environment_variables.js","packages/montiapm:agent/lib/auto_connect.js","packages/montiapm:agent/lib/conflicting_agents.js"],"names":["getClientArchVersion","arch","autoupdate","__meteor_runtime_config__","versions","version","autoupdateVersionCordova","autoupdateVersion","Kadira","options","Monti","Meteor","wrapAsync","_wrapAsync","isServer","EventEmitter","Npm","require","eventBus","setMaxListeners","buildArgs","args","eventName","slice","unshift","EventBus","forEach","m","apply","commonErrRegExps","errorFilters","filterValidationErrors","type","message","err","Error","filterCommonMeteorErrors","lc","length","regExp","test","send","payload","path","callback","connected","substr","endpoint","retryCount","retry","Retry","minCount","minTimeout","baseTimeout","maxTimeout","sendFunction","_getSendFunction","tryToSend","retryLater","console","warn","res","statusCode","data","content","_serverSend","_clientSend","httpRequest","headers","JSON","stringify","BaseErrorModel","_filters","prototype","addFilter","filter","push","removeFilter","index","indexOf","splice","applyFilters","error","subType","validated","ex","KadiraModel","_getDateId","timestamp","remainder","dateId","DDSketch","METHOD_METRICS_FIELDS","MethodsModel","metricsThreshold","methodMetricsByMinute","Object","create","errorMap","_metricsThreshold","_","extend","maxEventTimesForMethods","tracerStore","TracerStore","interval","maxTotalPoints","archiveEvery","start","_getMetrics","method","methods","count","errors","fetchedDocSize","sentMsgSize","histogram","alpha","field","setStartTime","metricsByMinute","startTime","processMethod","methodTrace","at","_appendMetrics","errored","name","addTrace","id","methodMetrics","value","metrics","add","total","endTime","trackDocSize","size","Ntp","_now","trackMsgSize","buildPayload","buildDetailedInfo","methodRequests","key","syncedDate","syncTime","methodName","collectTraces","logger","PubsubModel","subscriptions","_trackSub","session","msg","params","publication","_getPublicationName","subscriptionId","subs","_startTime","_trackUnsub","sub","_subscriptionId","_name","subscriptionState","unsubs","lifeTime","_trackReady","trace","readyTracked","resTime","_trackError","pubs","activeSubs","activeDocs","totalObservers","cachedObservers","createdObservers","deletedObservers","observerLifetime","polledDocuments","oplogUpdatedDocuments","oplogInsertedDocuments","oplogDeletedDocuments","initiallyAddedDocuments","liveAddedDocuments","liveChangedDocuments","liveRemovedDocuments","polledDocSize","initiallyFetchedDocSize","liveFetchedDocSize","initiallySentMsgSize","liveSentMsgSize","_getSubscriptionInfo","self","totalDocsSent","totalDataSent","iterate","server","sessions","_namedSubs","countSubData","_universalSubs","avgObserverReuse","each","countSubscriptions","countDocuments","countObservers","_documents","collection","countKeys","_totalObservers","_cachedObservers","buildDetailInfo","pubMetrics","subscriptionData","dateMetrics","singlePubMetrics","pubRequests","incrementHandleCount","isCached","publicationName","getProperty","trackCreatedObserver","info","trackDeletedObserver","Date","getTime","trackDocumentChanges","op","trackPolledDocuments","trackLiveUpdates","createHistogram","module","link","v","GCMetrics","default","getFiberMetrics","resetFiberMetrics","getMongoDriverStats","resetMongoDriverStats","EventLoopMonitor","SystemModel","newSessions","sessionTimeout","evloopHistogram","evloopMonitor","on","lag","gcMetrics","cpuTime","process","hrtime","previousCpuUsage","cpuUsage","cpuHistory","currentCpuUsage","setInterval","now","memoryUsage","memory","rss","memoryArrayBuffers","arrayBuffers","memoryExternal","external","memoryHeapUsed","heapUsed","memoryHeapTotal","heapTotal","activeRequests","_getActiveRequests","activeHandles","_getActiveHandles","pctEvloopBlock","status","pctBlock","gcMajorDuration","gcMajor","gcMinorDuration","gcMinor","gcIncrementalDuration","gcIncremental","gcWeakCBDuration","gcWeakCB","reset","driverMetrics","mongoPoolSize","poolSize","mongoPoolPrimaryCheckouts","primaryCheckouts","mongoPoolOtherCheckouts","otherCheckouts","mongoPoolCheckoutTime","checkoutTime","mongoPoolMaxCheckoutTime","maxCheckoutTime","mongoPoolPending","pending","mongoPoolCheckedOutConnections","checkedOut","mongoPoolCreatedConnections","created","fiberMetrics","createdFibers","activeFibers","active","fiberPoolSize","pcpu","pcpuUser","pcpuSystem","lastCpuUsage","usage","user","sys","map","entry","time","systemMetrics","hrtimeToMS","elapTimeMS","elapUsage","elapUserMS","elapSystMS","system","totalUsageMS","totalUsagePercent","docSzCache","setPcpu","handleSessionActivity","countNewSession","isSessionActive","_activeAt","isLocalAddress","socket","inactiveTime","isLocalHostRegex","isLocalAddressRegex","host","address","remoteAddress","ErrorModel","appId","call","maxErrors","assign","values","metric","errorCount","trackError","errorDef","_formatError","stack","details","errorEvent","events","errorObject","stacks","HttpModel","processRequest","req","routeId","routes","statusCodes","requestMetrics","statusMetric","httpMetrics","httpRequests","requestName","exportDefault","Jobs","getAsync","coreApi","getJob","then","catch","setAsync","changes","updateJob","set","get","constructor","exponent","fuzz","retryTimer","clear","clearTimeout","_timeout","timeout","Math","min","pow","Random","fraction","ceil","fn","setTimeout","export","HaveAsyncCallback","lastArg","UniqueId","DefaultUniqueId","CreateUserStack","split","toRemove","join","OptimizedApply","context","a","getClientVersions","obj","Map","Set","keys","getLogger","setEndpoint","diff","synced","reSyncCount","reSync","round","localTime","sync","cacheDns","arguments","getServerTime","calculateTimeDiff","clientStartTime","serverTime","networkTime","serverStartTime","noRetries","parseInt","random","canLogKadira","_localStorage","getItem","log","url","fs","clientPaths","__meteor_bootstrap__","configJson","clientArchs","serverDir","absClientPaths","reduce","result","resolve","dirname","handleApiResponse","body","unavailable","parse","e","neededSourcemaps","promises","sourcemap","uploadSourceMaps","getSourcemapPath","file","sourceMapPath","sendSourcemap","Promise","all","sendData","unavailableSourcemaps","sourcemapPath","stream","createReadStream","archVersion","encodeURIComponent","sendStream","preparePath","urlPath","posix","normalize","checkForDynamicImport","filePath","archPath","dynamicPath","stat","reject","clientProgram","WebApp","clientPrograms","manifest","fileInfo","find","startsWith","sourceMap","WAITON_MESSAGE_FIELDS","WaitTimeBuilder","_waitListStore","_currentProcessingMessages","_messageCache","register","msgId","mainKey","_getMessageKey","inQueue","toArray","waitList","_getCacheMessage","currentlyProcessingMessage","build","filteredWaitList","_cleanCacheMessage","bind","sessionId","cachedMessage","pick","_key","_registered","trackWaitTime","unblock","started","unblocked","wrappedUnblock","waitTime","OplogCheck","_070","cursorDescription","limit","code","reason","solution","exists$","any","selector","onlyScalers","Collection","ObjectID","_071","matcher","Minimongo","Matcher","env","MONGO_OPLOG_URL","disableOplog","_disableOplog","miniMongoMatcher","miniMongoSorter","Sorter","sort","sorter","fields","LocalCollection","_checkSupportedProjection","skip","where","hasWhere","geo","hasGeoQuery","limitButNoSort","olderVersion","driver","cursorSupported","gitCheckout","release","preRunningMatchers","globalMatchers","versionMatchers","checkWhyNoOplog","observerDriver","runMatchers","meteorVersion","matcherInfo","matched","matcherList","eventLogger","REPETITIVE_EVENTS","TRACE_TYPES","MAX_TRACE_EVENTS","Tracer","_filterFields","maxArrayItemsToFilter","userId","traceInfo","_id","event","metaData","lastEvent","getLastEvent","isEventsProcessed","endAt","nested","_applyFilters","eventStackTrace","dir","depth","lastNested","eventEnd","endLastEvent","forcedEnd","_hasUsefulNested","every","buildEvent","elapsedTimeForEvent","builtEvent","prevEnd","i","nestedEvent","computeTime","undefined","buildTrace","firstEvent","processedEvents","totalNonCompute","prevEvent","lastEventData","removeCount","compute","filterFn","redactField","eventType","clone","_applyObjectFilters","toFilter","filterObject","cloned","Array","isArray","tracer","stripSensitive","typesToStrip","receiverType","strippedTypes","item","stripSensitiveThorough","fieldsToKeep","stripSelectors","collectionList","collMap","collName","coll","maxTotals","currentMaxTrace","traceArchive","processedCnt","kind","EJSON","_handleErrors","traces","_timeoutHandler","processTraces","stop","clearInterval","errorKey","erroredTrace","kinds","currentMaxTotal","exceedingPoints","archiveDefault","canArchive","_isTraceOutlier","dataSet","_isOutlier","dataPoint","maxMadZ","median","_getMedian","mad","_calculateMad","madZ","_funcMedianDeviation","sortedDataSet","b","_pickQuartile","num","pos","medianDeviations","x","abs","_getMean","dataPoints","point","LRU","crypto","jsonStringify","DocSzCache","maxItems","maxValues","items","max","getSize","query","opts","getKey","DocSzCacheItem","needsUpdate","doc","element","Buffer","byteLength","addData","getValue","getItemScore","updated","score","currentTime","timeSinceUpdate","shift","sortNumber","sorted","idx","floor","packageMap","hostname","Fibers","KadiraCore","models","currentSub","kadiraInfo","EnvironmentVariable","waitTimeBuilder","pubsub","http","connect","appSecret","payloadTimeout","clientEngineSyncDelay","thresholds","isHostNameSet","proxy","recordIPAddress","documentSizeCacheSize","last","enableErrorTracking","isProduction","authHeaders","trim","agentVersion","_checkAuth","_sendAppStats","_schedulePayloadSend","addFilterFn","kadira","disableErrorTracking","startup","TrackUncaughtExceptions","TrackUnhandledRejections","TrackMeteorDebug","publish","added","ready","_buildPayload","clientVersions","_isDetailedInfo","_countDataSent","_detailInfoSentInterval","appStats","protocolVersion","packageVersions","Package","_sendPayload","run","_getInfo","currentFiber","useEnvironmentVariable","current","__kadiraInfo","_setInfo","startContinuousProfiling","MontiProfiler","startContinuous","onProfile","profile","profiles","ignoreErrorTracking","_skipKadira","startEvent","endEvent","Fiber","wrapServer","serverProto","originalHandleConnect","_handleConnect","_meteorSession","emit","MeteorDebugIgnore","MAX_PARAMS_LENGTH","wrapSession","sessionProto","originalProcessMessage","processMessage","stringifiedParams","startData","waitEventId","_waitEventId","originalMethodHandler","protocol_handlers","waitOn","response","withValue","orginalSubHandler","orginalUnSubHandler","unsub","originalSend","currentError","method_handlers","handler","wrapMethodHanderForErrors","originalMeteorMethods","methodMap","originalHandler","source","wrapSubscription","subscriptionProto","originalRunHandler","_runHandler","originalReady","_apmReadyTracked","_session","originalError","errorForApm","originalDeactivate","_deactivate","funcName","originalFunc","collectionName","wrapOplogObserveDriver","proto","originalPublishNewResults","_publishNewResults","newResults","newBuffer","_cursorDescription","docSize","_ownerInfo","_polledDocuments","_docSize","polledFetches","originalHandleOplogEntryQuerying","_handleOplogEntryQuerying","originalHandleOplogEntrySteadyOrFetching","_handleOplogEntrySteadyOrFetching","fnName","originalFn","c","_liveUpdatesCounts","_initialAdds","initialFetches","originalStop","wrapPollingObserveDriver","originalPollMongo","_pollMongo","_results","_map","_polledDocSize","wrapMultiplexer","originalInitalAdd","addHandleAndSendInitialAdds","handle","_firstInitialAddTime","_wasMultiplexerReady","_ready","_queueLength","_queue","_taskHandles","_elapsedPollingTime","wrapForCountingObservers","mongoConnectionProto","MeteorX","MongoConnection","originalObserveChanges","_observeChanges","ordered","callbacks","ret","_multiplexer","__kadiraTracked","ownerInfo","_observeDriver","wrapStringifyDDP","originalStringifyDDP","DDPCommon","stringifyDDP","msgString","msgSize","wrapWebApp","wrapFastRender","wrapFs","wrapPicker","wrapRouters","instrumented","_startInstrumenting","onReady","Server","Session","Subscription","MongoOplogDriver","MongoPollingDriver","Multiplexer","hijackDBOps","setLabels","originalOpen","MongoInternals","RemoteCollectionDriver","open","mongo","getSyncronousCursor","MongoColl","Mongo","findOne","cursor","fetch","_synchronousCursor","func","mod","upsert","eventId","endOptions","async","updatedDocs","numberAffected","insertedId","removedDocs","cursorProto","MongoCursor","cursorOptions","previousTrackNextObject","trackNextObject","endData","oplog","wasMultiplexerReady","queueLength","elapsedPollingTime","observerDriverClass","usesOplog","_cache","docs","noOfCachedDocs","initialPollingTime","_lastPollTime","reasonInfo","noOplogCode","noOplogReason","noOplogSolution","docsFetched","SyncronousCursor","origNextObject","_nextObject","shouldTrack","originalCall","HTTP","Email","EventSymbol","Symbol","StartTracked","originalYield","yield","originalRun","originalThrowInto","throwInto","ensureFiberCounted","fiber","val","activeFiberTotal","activeFiberCount","previousTotalCreated","fibersCreated","printErrorAndKill","_tracked","getTrace","timer","throwError","nextTick","exit","originalMeteorDebug","_debug","isArgs","alreadyTracked","errorMessage","separator","endsWith","kadira_Session_send","originalSendAdds","_sendAdds","kadira_Multiplexer_sendAdds","originalMongoInsert","_insert","kadira_MongoConnection_insert","cb","originalMongoUpdate","_update","kadira_MongoConnection_update","originalMongoRemove","_remove","kadira_MongoConnection_remove","originalPubsubAdded","sendAdded","kadira_Session_sendAdded","originalPubsubChanged","sendChanged","kadira_Session_sendChanged","originalPubsubRemoved","sendRemoved","kadira_Session_sendRemoved","originalCursorForEach","kadira_Cursor_forEach","originalCursorMap","kadira_Cursor_map","originalCursorFetch","kadira_Cursor_fetch","originalCursorCount","kadira_Cursor_count","originalCursorObserveChanges","observeChanges","kadira_Cursor_observeChanges","originalCursorObserve","observe","kadira_Cursor_observe","originalCrossbarListen","DDPServer","_Crossbar","listen","kadira_Crossbar_listen","trigger","originalCrossbarFire","fire","kadira_Crossbar_fire","notification","FastRender","origRoute","route","_callback","suggestedRouteName","handleErrorEvent","wrapCallback","createWrapper","eventEmitter","listenerCount","removeListener","fsKadiraInfo","originalStat","originalCreateReadStream","PerformanceObserver","constants","_observer","observer","list","getEntries","_mapKindToMetric","duration","entryTypes","buffered","gcKind","NODE_PERFORMANCE_GC_MAJOR","NODE_PERFORMANCE_GC_MINOR","NODE_PERFORMANCE_GC_INCREMENTAL","NODE_PERFORMANCE_GC_WEAKCB","client","serverStatus","totalCheckoutTime","measurementCount","pendingTotal","checkedOutTotal","getServerStatus","getPrimary","DEFAULT_MAX_POOL_SIZE","getPoolSize","topology","s","maxPoolSize","_client","defaultRemoteCollectionDriver","useUnifiedTopology","primaryDescription","getServerDescription","pool","totalConnections","totalConnectionCount","availableConnections","availableConnectionCount","primary","delete","connectionId","checkoutDuration","disableCreate","lastIsMaster","servers","description","Picker","origProcessRoute","_processRoute","connectRoutes","connectRoute","router","oldAdd","checkHandlersInFiber","WebAppInternals","MAX_BODY_SIZE","MAX_STRINGIFIED_BODY_SIZE","canWrapStaticHandler","staticFilesByArch","handlersLength","rawConnectHandlers","inFiber","outsideFiber","use","_req","_res","next","pop","InfoSymbol","parseUrl","registerBoilerplateDataCallback","request","isAppRoute","origCategorizeRequest","categorizeRequest","pathname","asyncEvent","isStatic","isJson","hasSmallBody","built","wrapHandler","errorHandler","wrapper","nextCalled","wrappedNext","potentialPromise","finished","wrapConnect","app","wrapStack","oldUse","wrappedHandler","asyncApply","meteorInternalHandlers","connectHandlers","connectApp","oldStaticFilesMiddleware","staticFilesMiddleware","staticHandler","_staticFiles","normalizedPrefix","replace","_parseEnv","normalizedName","_options","parser","str","parseBool","toLowerCase","parseString","MONTI_APP_ID","MONTI_APP_SECRET","MONTI_OPTIONS_CLIENT_ENGINE_SYNC_DELAY","MONTI_OPTIONS_ERROR_DUMP_INTERVAL","MONTI_OPTIONS_MAX_ERRORS_PER_INTERVAL","MONTI_OPTIONS_COLLECT_ALL_STACKS","MONTI_OPTIONS_ENABLE_ERROR_TRACKING","MONTI_OPTIONS_ENDPOINT","MONTI_OPTIONS_HOSTNAME","MONTI_OPTIONS_PAYLOAD_TIMEOUT","MONTI_OPTIONS_PROXY","MONTI_OPTIONS_DOCUMENT_SIZE_CACHE_SIZE","MONTI_UPLOAD_SOURCE_MAPS","MONTI_RECORD_IP_ADDRESS","MONTI_EVENT_STACK_TRACE","_connectWithEnv","_connectWithSettings","montiSettings","settings","monti","conflictingPackages"],"mappings":"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","file":"/packages/montiapm_agent.js","sourcesContent":["getClientArchVersion = function (arch) {\n  const autoupdate = __meteor_runtime_config__.autoupdate\n\n  if (autoupdate) {\n    return autoupdate.versions[arch] ? autoupdate.versions[arch].version : 'none';\n  }\n\n  // Meteor 1.7 and older did not have an `autoupdate` object.\n  switch (arch) {\n    case 'cordova.web':\n      return __meteor_runtime_config__.autoupdateVersionCordova;\n    case 'web.browser':\n    case 'web.browser.legacy':\n      // Meteor 1.7 always used the web.browser.legacy version\n      return __meteor_runtime_config__.autoupdateVersion;\n\n    default:\n      return 'none';\n  }\n}\n","Kadira = {};\nKadira.options = {};\n\nMonti = Kadira;\n\nif(Meteor.wrapAsync) {\n  Kadira._wrapAsync = Meteor.wrapAsync;\n} else {\n  Kadira._wrapAsync = Meteor._wrapAsync;\n}\n\nif(Meteor.isServer) {\n  var EventEmitter = Npm.require('events').EventEmitter;\n  var eventBus = new EventEmitter();\n  eventBus.setMaxListeners(0);\n\n  var buildArgs = function(args) {\n    var eventName = args[0] + '-' + args[1];\n    var args = args.slice(2);\n    args.unshift(eventName);\n    return args;\n  };\n  \n  Kadira.EventBus = {};\n  ['on', 'emit', 'removeListener', 'removeAllListeners'].forEach(function(m) {\n    Kadira.EventBus[m] = function(...args) {\n      var args = buildArgs(args);\n      return eventBus[m].apply(eventBus, args);\n    };\n  });\n}","var commonErrRegExps = [\n  /connection timeout\\. no (\\w*) heartbeat received/i,\n  /INVALID_STATE_ERR/i,\n];\n\nKadira.errorFilters = {\n  filterValidationErrors: function(type, message, err) {\n    if(err && err instanceof Meteor.Error) {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  filterCommonMeteorErrors: function(type, message) {\n    for(var lc=0; lc<commonErrRegExps.length; lc++) {\n      var regExp = commonErrRegExps[lc];\n      if(regExp.test(message)) {\n        return false;\n      }\n    }\n    return true;\n  }\n};","Kadira.send = function (payload, path, callback) {\n  if(!Kadira.connected)  {\n    throw new Error(\"You need to connect with Kadira first, before sending messages!\");\n  }\n\n  path = (path.substr(0, 1) != '/')? \"/\" + path : path;\n  var endpoint = Kadira.options.endpoint + path;\n  var retryCount = 0;\n  var retry = new Retry({\n    minCount: 1,\n    minTimeout: 0,\n    baseTimeout: 1000*5,\n    maxTimeout: 1000*60,\n  });\n\n  var sendFunction = Kadira._getSendFunction();\n  tryToSend();\n\n  function tryToSend(err) {\n    if(retryCount < 5) {\n      retry.retryLater(retryCount++, send);\n    } else {\n      console.warn('Error sending error traces to Monti APM server');\n      if(callback) callback(err);\n    }\n  }\n\n  function send() {\n    sendFunction(endpoint, payload, function(err, res) {\n      if(err && !res) {\n        tryToSend(err);\n      } else if(res.statusCode == 200) {\n        if(callback) callback(null, res.data);\n      } else {\n        if(callback) callback(new Meteor.Error(res.statusCode, res.content));\n      }\n    });\n  }\n};\n\nKadira._getSendFunction = function() {\n  return (Meteor.isServer)? Kadira._serverSend : Kadira._clientSend;\n};\n\nKadira._clientSend = function (endpoint, payload, callback) {\n  httpRequest('POST', endpoint, {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    content: JSON.stringify(payload)\n  }, callback);\n}\n\nKadira._serverSend = function () {\n  throw new Error('Kadira._serverSend is not supported. Use coreApi instead.');\n}\n","BaseErrorModel = function(options) {\n  this._filters = [];\n};\n\nBaseErrorModel.prototype.addFilter = function(filter) {\n  if(typeof filter === 'function') {\n    this._filters.push(filter);\n  } else {\n    throw new Error(\"Error filter must be a function\");\n  }\n};\n\nBaseErrorModel.prototype.removeFilter = function(filter) {\n  var index = this._filters.indexOf(filter);\n  if(index >= 0) {\n    this._filters.splice(index, 1);\n  }\n};\n\nBaseErrorModel.prototype.applyFilters = function(type, message, error, subType) {\n  for(var lc=0; lc<this._filters.length; lc++) {\n    var filter = this._filters[lc];\n    try {\n      var validated = filter(type, message, error, subType);\n      if(!validated) return false;\n    } catch (ex) {\n      // we need to remove this filter\n      // we may ended up in a error cycle\n      this._filters.splice(lc, 1);\n      throw new Error(\"an error thrown from a filter you've suplied\", ex.message);\n    }\n  }\n\n  return true;\n};","KadiraModel = function() {\n\n};\n\nKadiraModel.prototype._getDateId = function(timestamp) {\n  var remainder = timestamp % (1000 * 60);\n  var dateId = timestamp - remainder;\n  return dateId;\n};","const { DDSketch } = require('monti-apm-sketches-js');\n\nvar METHOD_METRICS_FIELDS = ['wait', 'db', 'http', 'email', 'async', 'compute', 'total'];\n\nMethodsModel = function (metricsThreshold) {\n  this.methodMetricsByMinute = Object.create(null);\n  this.errorMap = Object.create(null);\n\n  this._metricsThreshold = _.extend({\n    \"wait\": 100,\n    \"db\": 100,\n    \"http\": 1000,\n    \"email\": 100,\n    \"async\": 100,\n    \"compute\": 100,\n    \"total\": 200\n  }, metricsThreshold || Object.create(null));\n\n  //store max time elapsed methods for each method, event(metrics-field)\n  this.maxEventTimesForMethods = Object.create(null);\n\n  this.tracerStore = new TracerStore({\n    interval: 1000 * 60, //process traces every minute\n    maxTotalPoints: 30, //for 30 minutes\n    archiveEvery: 5 //always trace for every 5 minutes,\n  });\n\n  this.tracerStore.start();\n};\n\n_.extend(MethodsModel.prototype, KadiraModel.prototype);\n\nMethodsModel.prototype._getMetrics = function(timestamp, method) {\n  var dateId = this._getDateId(timestamp);\n\n  if(!this.methodMetricsByMinute[dateId]) {\n    this.methodMetricsByMinute[dateId] = {\n      methods: Object.create(null),\n    };\n  }\n\n  var methods = this.methodMetricsByMinute[dateId].methods;\n\n  //initialize method\n  if(!methods[method]) {\n    methods[method] = {\n      count: 0,\n      errors: 0,\n      fetchedDocSize: 0,\n      sentMsgSize: 0,\n      histogram: new DDSketch({\n        alpha: 0.02\n      })\n    };\n\n    METHOD_METRICS_FIELDS.forEach(function(field) {\n      methods[method][field] = 0;\n    });\n  }\n\n  return this.methodMetricsByMinute[dateId].methods[method];\n};\n\nMethodsModel.prototype.setStartTime = function(timestamp) {\n  this.metricsByMinute[dateId].startTime = timestamp;\n}\n\nMethodsModel.prototype.processMethod = function(methodTrace) {\n  var dateId = this._getDateId(methodTrace.at);\n\n  //append metrics to previous values\n  this._appendMetrics(dateId, methodTrace);\n  if(methodTrace.errored) {\n    this.methodMetricsByMinute[dateId].methods[methodTrace.name].errors ++\n  }\n\n  this.tracerStore.addTrace(methodTrace);\n};\n\nMethodsModel.prototype._appendMetrics = function(id, methodTrace) {\n  var methodMetrics = this._getMetrics(id, methodTrace.name)\n\n  // startTime needs to be converted into serverTime before sending\n  if(!this.methodMetricsByMinute[id].startTime){\n    this.methodMetricsByMinute[id].startTime = methodTrace.at;\n  }\n\n  //merge\n  METHOD_METRICS_FIELDS.forEach(function(field) {\n    var value = methodTrace.metrics[field];\n    if(value > 0) {\n      methodMetrics[field] += value;\n    }\n  });\n\n  methodMetrics.count++;\n  methodMetrics.histogram.add(methodTrace.metrics.total);\n  this.methodMetricsByMinute[id].endTime = methodTrace.metrics.at;\n};\n\nMethodsModel.prototype.trackDocSize = function(method, size) {\n  var timestamp = Ntp._now();\n  var dateId = this._getDateId(timestamp);\n\n  var methodMetrics = this._getMetrics(dateId, method);\n  methodMetrics.fetchedDocSize += size;\n}\n\nMethodsModel.prototype.trackMsgSize = function(method, size) {\n  var timestamp = Ntp._now();\n  var dateId = this._getDateId(timestamp);\n\n  var methodMetrics = this._getMetrics(dateId, method);\n  methodMetrics.sentMsgSize += size;\n}\n\n/*\n  There are two types of data\n\n  1. methodMetrics - metrics about the methods (for every 10 secs)\n  2. methodRequests - raw method request. normally max, min for every 1 min and errors always\n*/\nMethodsModel.prototype.buildPayload = function(buildDetailedInfo) {\n  var payload = {\n    methodMetrics: [],\n    methodRequests: []\n  };\n\n  //handling metrics\n  var methodMetricsByMinute = this.methodMetricsByMinute;\n  this.methodMetricsByMinute = Object.create(null);\n\n  //create final paylod for methodMetrics\n  for(var key in methodMetricsByMinute) {\n    var methodMetrics = methodMetricsByMinute[key];\n    // converting startTime into the actual serverTime\n    var startTime = methodMetrics.startTime;\n    methodMetrics.startTime = Kadira.syncedDate.syncTime(startTime);\n\n    for(var methodName in methodMetrics.methods) {\n      METHOD_METRICS_FIELDS.forEach(function(field) {\n        methodMetrics.methods[methodName][field] /=\n          methodMetrics.methods[methodName].count;\n      });\n    }\n\n    payload.methodMetrics.push(methodMetricsByMinute[key]);\n  }\n\n  //collect traces and send them with the payload\n  payload.methodRequests = this.tracerStore.collectTraces();\n\n  return payload;\n};\n","var logger = Npm.require('debug')('kadira:pubsub');\nconst { DDSketch } = require('monti-apm-sketches-js');\n\nPubsubModel = function() {\n  this.metricsByMinute = Object.create(null);\n  this.subscriptions = Object.create(null);\n\n  this.tracerStore = new TracerStore({\n    interval: 1000 * 60, //process traces every minute\n    maxTotalPoints: 30, //for 30 minutes\n    archiveEvery: 5 //always trace for every 5 minutes,\n  });\n\n  this.tracerStore.start();\n}\n\nPubsubModel.prototype._trackSub = function(session, msg) {\n  logger('SUB:', session.id, msg.id, msg.name, msg.params);\n  var publication = this._getPublicationName(msg.name);\n  var subscriptionId = msg.id;\n  var timestamp = Ntp._now();\n  var metrics = this._getMetrics(timestamp, publication);\n\n  metrics.subs++;\n  this.subscriptions[msg.id] = {\n    // We use localTime here, because when we used synedTime we might get\n    // minus or more than we've expected\n    //   (before serverTime diff changed overtime)\n    startTime: timestamp,\n    publication: publication,\n    params: msg.params,\n    id: msg.id\n  };\n\n  //set session startedTime\n  session._startTime = session._startTime || timestamp;\n};\n\n_.extend(PubsubModel.prototype, KadiraModel.prototype);\n\nPubsubModel.prototype._trackUnsub = function(session, sub) {\n  logger('UNSUB:', session.id, sub._subscriptionId);\n  var publication = this._getPublicationName(sub._name);\n  var subscriptionId = sub._subscriptionId;\n  var subscriptionState = this.subscriptions[subscriptionId];\n\n  var startTime = null;\n  //sometime, we don't have these states\n  if(subscriptionState) {\n    startTime = subscriptionState.startTime;\n  } else {\n    //if this is null subscription, which is started automatically\n    //hence, we don't have a state\n    startTime = session._startTime;\n  }\n\n  //in case, we can't get the startTime\n  if(startTime) {\n    var timestamp = Ntp._now();\n    var metrics = this._getMetrics(timestamp, publication);\n    //track the count\n    if(sub._name != null) {\n      // we can't track subs for `null` publications.\n      // so we should not track unsubs too\n      metrics.unsubs++;\n    }\n    //use the current date to get the lifeTime of the subscription\n    metrics.lifeTime += timestamp - startTime;\n    //this is place we can clean the subscriptionState if exists\n    delete this.subscriptions[subscriptionId];\n  }\n};\n\nPubsubModel.prototype._trackReady = function(session, sub, trace) {\n  logger('READY:', session.id, sub._subscriptionId);\n  //use the current time to track the response time\n  var publication = this._getPublicationName(sub._name);\n  var subscriptionId = sub._subscriptionId;\n  var timestamp = Ntp._now();\n  var metrics = this._getMetrics(timestamp, publication);\n\n  var subscriptionState = this.subscriptions[subscriptionId];\n  if(subscriptionState && !subscriptionState.readyTracked) {\n    var resTime = timestamp - subscriptionState.startTime\n    metrics.resTime += resTime;\n    subscriptionState.readyTracked = true;\n    metrics.histogram.add(resTime);\n  }\n\n  if(trace) {\n    this.tracerStore.addTrace(trace);\n  }\n};\n\nPubsubModel.prototype._trackError = function(session, sub, trace) {\n  logger('ERROR:', session.id, sub._subscriptionId);\n  //use the current time to track the response time\n  var publication = this._getPublicationName(sub._name);\n  var subscriptionId = sub._subscriptionId;\n  var timestamp = Ntp._now();\n  var metrics = this._getMetrics(timestamp, publication);\n\n  metrics.errors++;\n\n  if(trace) {\n    this.tracerStore.addTrace(trace);\n  }\n};\n\nPubsubModel.prototype._getMetrics = function(timestamp, publication) {\n  var dateId = this._getDateId(timestamp);\n\n  if(!this.metricsByMinute[dateId]) {\n    this.metricsByMinute[dateId] = {\n      // startTime needs to be convert to serverTime before sending to the server\n      startTime: timestamp,\n      pubs: Object.create(null)\n    };\n  }\n\n  if(!this.metricsByMinute[dateId].pubs[publication]) {\n    this.metricsByMinute[dateId].pubs[publication] = {\n      subs: 0,\n      unsubs: 0,\n      resTime: 0,\n      activeSubs: 0,\n      activeDocs: 0,\n      lifeTime: 0,\n      totalObservers: 0,\n      cachedObservers: 0,\n      createdObservers: 0,\n      deletedObservers: 0,\n      errors: 0,\n      observerLifetime: 0,\n      polledDocuments: 0,\n      oplogUpdatedDocuments: 0,\n      oplogInsertedDocuments: 0,\n      oplogDeletedDocuments: 0,\n      initiallyAddedDocuments: 0,\n      liveAddedDocuments: 0,\n      liveChangedDocuments: 0,\n      liveRemovedDocuments: 0,\n      polledDocSize: 0,\n      fetchedDocSize: 0,\n      initiallyFetchedDocSize: 0,\n      liveFetchedDocSize: 0,\n      initiallySentMsgSize: 0,\n      liveSentMsgSize: 0,\n      histogram: new DDSketch({\n        alpha: 0.02\n      })\n    };\n  }\n\n  return this.metricsByMinute[dateId].pubs[publication];\n};\n\nPubsubModel.prototype._getPublicationName = function(name) {\n  return name || \"null(autopublish)\";\n};\n\nPubsubModel.prototype._getSubscriptionInfo = function() {\n  var self = this;\n  var activeSubs = Object.create(null);\n  var activeDocs = Object.create(null);\n  var totalDocsSent = Object.create(null);\n  var totalDataSent = Object.create(null);\n  var totalObservers = Object.create(null);\n  var cachedObservers = Object.create(null);\n\n  iterate(Meteor.server.sessions, session => {\n    iterate(session._namedSubs, countSubData);\n    iterate(session._universalSubs, countSubData);\n  });\n\n  var avgObserverReuse = Object.create(null);\n  _.each(totalObservers, function(value, publication) {\n    avgObserverReuse[publication] = cachedObservers[publication] / totalObservers[publication];\n  });\n\n  return {\n    activeSubs: activeSubs,\n    activeDocs: activeDocs,\n    avgObserverReuse: avgObserverReuse\n  };\n\n  function countSubData (sub) {\n    var publication = self._getPublicationName(sub._name);\n    countSubscriptions(sub, publication);\n    countDocuments(sub, publication);\n    countObservers(sub, publication);\n  }\n\n  function countSubscriptions (sub, publication) {\n    activeSubs[publication] = activeSubs[publication] || 0;\n    activeSubs[publication]++;\n  }\n\n  function countDocuments (sub, publication) {\n    activeDocs[publication] = activeDocs[publication] || 0;\n    iterate(sub._documents, collection => {\n      activeDocs[publication] += countKeys(collection);\n    });\n  }\n\n  function countObservers(sub, publication) {\n    totalObservers[publication] = totalObservers[publication] || 0;\n    cachedObservers[publication] = cachedObservers[publication] || 0;\n\n    totalObservers[publication] += sub._totalObservers;\n    cachedObservers[publication] += sub._cachedObservers;\n  }\n}\n\nPubsubModel.prototype.buildPayload = function(buildDetailInfo) {\n  var metricsByMinute = this.metricsByMinute;\n  this.metricsByMinute = Object.create(null);\n\n  var payload = {\n    pubMetrics: []\n  };\n\n  var subscriptionData = this._getSubscriptionInfo();\n  var activeSubs = subscriptionData.activeSubs;\n  var activeDocs = subscriptionData.activeDocs;\n  var avgObserverReuse = subscriptionData.avgObserverReuse;\n\n  //to the averaging\n  for(var dateId in metricsByMinute) {\n    var dateMetrics = metricsByMinute[dateId];\n    // We need to convert startTime into actual serverTime\n    dateMetrics.startTime = Kadira.syncedDate.syncTime(dateMetrics.startTime);\n\n    for(var publication in metricsByMinute[dateId].pubs) {\n      var singlePubMetrics = metricsByMinute[dateId].pubs[publication];\n      // We only calculate resTime for new subscriptions\n      singlePubMetrics.resTime /= singlePubMetrics.subs;\n      singlePubMetrics.resTime = singlePubMetrics.resTime || 0;\n      // We only track lifeTime in the unsubs\n      singlePubMetrics.lifeTime /= singlePubMetrics.unsubs;\n      singlePubMetrics.lifeTime = singlePubMetrics.lifeTime || 0;\n\n      // Count the average for observer lifetime\n      if(singlePubMetrics.deletedObservers > 0) {\n        singlePubMetrics.observerLifetime /= singlePubMetrics.deletedObservers;\n      }\n\n      // If there are two ore more dateIds, we will be using the currentCount for all of them.\n      // We can come up with a better solution later on.\n      singlePubMetrics.activeSubs = activeSubs[publication] || 0;\n      singlePubMetrics.activeDocs = activeDocs[publication] || 0;\n      singlePubMetrics.avgObserverReuse = avgObserverReuse[publication] || 0;\n    }\n\n    payload.pubMetrics.push(metricsByMinute[dateId]);\n  }\n\n  //collect traces and send them with the payload\n  payload.pubRequests = this.tracerStore.collectTraces();\n\n  return payload;\n};\n\nPubsubModel.prototype.incrementHandleCount = function(trace, isCached) {\n  var timestamp = Ntp._now();\n  var publicationName = this._getPublicationName(trace.name);\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  var session = getProperty(Meteor.server.sessions, trace.session);\n  if(session) {\n    var sub = getProperty(session._namedSubs, trace.id);\n    if(sub) {\n      sub._totalObservers = sub._totalObservers || 0;\n      sub._cachedObservers = sub._cachedObservers || 0;\n    }\n  }\n  // not sure, we need to do this? But I don't need to break the however\n  sub = sub || {_totalObservers:0 , _cachedObservers: 0};\n\n  publication.totalObservers++;\n  sub._totalObservers++;\n  if(isCached) {\n    publication.cachedObservers++;\n    sub._cachedObservers++;\n  }\n}\n\nPubsubModel.prototype.trackCreatedObserver = function(info) {\n  var timestamp = Ntp._now();\n  var publicationName = this._getPublicationName(info.name);\n  var publication = this._getMetrics(timestamp, publicationName);\n  publication.createdObservers++;\n}\n\nPubsubModel.prototype.trackDeletedObserver = function(info) {\n  var timestamp = Ntp._now();\n  var publicationName = this._getPublicationName(info.name);\n  var publication = this._getMetrics(timestamp, publicationName);\n  publication.deletedObservers++;\n  publication.observerLifetime += (new Date()).getTime() - info.startTime;\n}\n\nPubsubModel.prototype.trackDocumentChanges = function(info, op) {\n  // It's possibel that info to be null\n  // Specially when getting changes at the very begining.\n  // This may be false, but nice to have a check\n  if(!info) {\n    return\n  }\n\n  var timestamp = Ntp._now();\n  var publicationName = this._getPublicationName(info.name);\n  var publication = this._getMetrics(timestamp, publicationName);\n  if(op.op === \"d\") {\n    publication.oplogDeletedDocuments++;\n  } else if(op.op === \"i\") {\n    publication.oplogInsertedDocuments++;\n  } else if(op.op === \"u\") {\n    publication.oplogUpdatedDocuments++;\n  }\n}\n\nPubsubModel.prototype.trackPolledDocuments = function(info, count) {\n  var timestamp = Ntp._now();\n  var publicationName = this._getPublicationName(info.name);\n  var publication = this._getMetrics(timestamp, publicationName);\n  publication.polledDocuments += count;\n}\n\nPubsubModel.prototype.trackLiveUpdates = function(info, type, count) {\n  var timestamp = Ntp._now();\n  var publicationName = this._getPublicationName(info.name);\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  if(type === \"_addPublished\") {\n    publication.liveAddedDocuments += count;\n  } else if(type === \"_removePublished\") {\n    publication.liveRemovedDocuments += count;\n  } else if(type === \"_changePublished\") {\n    publication.liveChangedDocuments += count;\n  } else if(type === \"_initialAdds\") {\n    publication.initiallyAddedDocuments += count;\n  } else {\n    throw new Error(\"Kadira: Unknown live update type\");\n  }\n}\n\nPubsubModel.prototype.trackDocSize = function(name, type, size) {\n  var timestamp = Ntp._now();\n  var publicationName = this._getPublicationName(name);\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  if(type === \"polledFetches\") {\n    publication.polledDocSize += size;\n  } else if(type === \"liveFetches\") {\n    publication.liveFetchedDocSize += size;\n  } else if(type === \"cursorFetches\") {\n    publication.fetchedDocSize += size;\n  } else if(type === \"initialFetches\") {\n    publication.initiallyFetchedDocSize += size;\n  } else {\n    throw new Error(\"Kadira: Unknown docs fetched type\");\n  }\n}\n\nPubsubModel.prototype.trackMsgSize = function(name, type, size) {\n  var timestamp = Ntp._now();\n  var publicationName = this._getPublicationName(name);\n  var publication = this._getMetrics(timestamp, publicationName);\n\n  if(type === \"liveSent\") {\n    publication.liveSentMsgSize += size;\n  } else if(type === \"initialSent\") {\n    publication.initiallySentMsgSize += size;\n  } else {\n    throw new Error(\"Kadira: Unknown docs fetched type\");\n  }\n}\n","var EventLoopMonitor = Npm.require('evloop-monitor');\nimport { createHistogram } from '../utils.js';\nimport GCMetrics from '../hijack/gc.js';\nimport { getFiberMetrics, resetFiberMetrics } from '../hijack/async.js';\nimport { getMongoDriverStats, resetMongoDriverStats } from '../hijack/mongo-driver-events.js';\n\nSystemModel = function () {\n  this.startTime = Ntp._now();\n  this.newSessions = 0;\n  this.sessionTimeout = 1000 * 60 * 30; //30 min\n\n  this.evloopHistogram = createHistogram();\n  this.evloopMonitor = new EventLoopMonitor(200);\n  this.evloopMonitor.start();\n  this.evloopMonitor.on('lag', lag => {\n    // store as microsecond\n    this.evloopHistogram.add(lag * 1000);\n  });\n\n  this.gcMetrics = new GCMetrics();\n  this.gcMetrics.start();\n\n\n  this.cpuTime = process.hrtime();\n  this.previousCpuUsage = process.cpuUsage();\n  this.cpuHistory = [];\n  this.currentCpuUsage = 0;\n\n  setInterval(() => {\n    this.cpuUsage();\n  }, 2000);\n}\n\n_.extend(SystemModel.prototype, KadiraModel.prototype);\n\nSystemModel.prototype.buildPayload = function() {\n  var metrics = {};\n  var now = Ntp._now();\n  metrics.startTime = Kadira.syncedDate.syncTime(this.startTime);\n  metrics.endTime = Kadira.syncedDate.syncTime(now);\n  metrics.sessions = countKeys(Meteor.server.sessions);\n\n  let memoryUsage = process.memoryUsage();\n  metrics.memory = memoryUsage.rss / (1024*1024);\n  metrics.memoryArrayBuffers = (memoryUsage.arrayBuffers || 0) / (1024*1024);\n  metrics.memoryExternal = memoryUsage.external / (1024*1024);\n  metrics.memoryHeapUsed = memoryUsage.heapUsed / (1024*1024);\n  metrics.memoryHeapTotal = memoryUsage.heapTotal / (1024*1024);\n\n  metrics.newSessions = this.newSessions;\n  this.newSessions = 0;\n\n  metrics.activeRequests = process._getActiveRequests().length;\n  metrics.activeHandles = process._getActiveHandles().length;\n\n  // track eventloop metrics\n  metrics.pctEvloopBlock = this.evloopMonitor.status().pctBlock;\n  metrics.evloopHistogram = this.evloopHistogram;\n  this.evloopHistogram = createHistogram();\n\n  metrics.gcMajorDuration = this.gcMetrics.metrics.gcMajor;\n  metrics.gcMinorDuration = this.gcMetrics.metrics.gcMinor;\n  metrics.gcIncrementalDuration = this.gcMetrics.metrics.gcIncremental;\n  metrics.gcWeakCBDuration = this.gcMetrics.metrics.gcWeakCB;\n  this.gcMetrics.reset();\n\n  const driverMetrics = getMongoDriverStats();\n  resetMongoDriverStats();\n\n  metrics.mongoPoolSize = driverMetrics.poolSize;\n  metrics.mongoPoolPrimaryCheckouts = driverMetrics.primaryCheckouts;\n  metrics.mongoPoolOtherCheckouts = driverMetrics.otherCheckouts;\n  metrics.mongoPoolCheckoutTime = driverMetrics.checkoutTime;\n  metrics.mongoPoolMaxCheckoutTime = driverMetrics.maxCheckoutTime;\n  metrics.mongoPoolPending = driverMetrics.pending;\n  metrics.mongoPoolCheckedOutConnections = driverMetrics.checkedOut;\n  metrics.mongoPoolCreatedConnections = driverMetrics.created;\n\n  const fiberMetrics = getFiberMetrics();\n  resetFiberMetrics();\n  metrics.createdFibers = fiberMetrics.created;\n  metrics.activeFibers = fiberMetrics.active;\n  metrics.fiberPoolSize = fiberMetrics.poolSize;\n\n  metrics.pcpu = 0;\n  metrics.pcpuUser = 0;\n  metrics.pcpuSystem = 0;\n\n  if (this.cpuHistory.length > 0) {\n    let lastCpuUsage = this.cpuHistory[this.cpuHistory.length - 1];\n    metrics.pcpu = lastCpuUsage.usage * 100;\n    metrics.pcpuUser = lastCpuUsage.user * 100;\n    metrics.pcpuSystem = lastCpuUsage.sys * 100;\n  }\n\n  metrics.cpuHistory = this.cpuHistory.map(entry => {\n    return {\n      time: Kadira.syncedDate.syncTime(entry.time),\n      usage: entry.usage,\n      sys: entry.sys,\n      user: entry.user\n    };\n  });\n\n  this.cpuHistory = [];\n  this.startTime = now;\n  return {systemMetrics: [metrics]};\n};\n\nfunction hrtimeToMS(hrtime) {\n  return hrtime[0] * 1000 + hrtime[1] / 1000000;\n}\n\nSystemModel.prototype.cpuUsage = function() {\n  var elapTimeMS = hrtimeToMS(process.hrtime(this.cpuTime));\n  var elapUsage = process.cpuUsage(this.previousCpuUsage);\n  var elapUserMS = elapUsage.user / 1000;\n  var elapSystMS = elapUsage.system / 1000;\n  var totalUsageMS = elapUserMS + elapSystMS;\n  var totalUsagePercent = totalUsageMS / elapTimeMS;\n\n  this.cpuHistory.push({\n    time: Ntp._now(),\n    usage: totalUsagePercent,\n    user: elapUserMS / elapTimeMS,\n    sys: elapSystMS / elapUsage.system\n  });\n\n  this.currentCpuUsage = totalUsagePercent * 100;\n  Kadira.docSzCache.setPcpu(this.currentCpuUsage);\n\n  this.cpuTime = process.hrtime();\n  this.previousCpuUsage = process.cpuUsage();\n}\n\nSystemModel.prototype.handleSessionActivity = function(msg, session) {\n  if(msg.msg === 'connect' && !msg.session) {\n    this.countNewSession(session);\n  } else if(['sub', 'method'].indexOf(msg.msg) != -1) {\n    if(!this.isSessionActive(session)) {\n      this.countNewSession(session);\n    }\n  }\n  session._activeAt = Date.now();\n}\n\nSystemModel.prototype.countNewSession = function(session) {\n  if(!isLocalAddress(session.socket)) {\n    this.newSessions++;\n  }\n}\n\nSystemModel.prototype.isSessionActive = function(session) {\n  var inactiveTime = Date.now() - session._activeAt;\n  return inactiveTime < this.sessionTimeout;\n}\n\n// ------------------------------------------------------------------------- //\n\n// http://regex101.com/r/iF3yR3/2\nvar isLocalHostRegex = /^(?:.*\\.local|localhost)(?:\\:\\d+)?|127(?:\\.\\d{1,3}){3}|192\\.168(?:\\.\\d{1,3}){2}|10(?:\\.\\d{1,3}){3}|172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2}$/;\n\n// http://regex101.com/r/hM5gD8/1\nvar isLocalAddressRegex = /^127(?:\\.\\d{1,3}){3}|192\\.168(?:\\.\\d{1,3}){2}|10(?:\\.\\d{1,3}){3}|172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2}$/;\n\nfunction isLocalAddress (socket) {\n  var host = socket.headers['host'];\n  if(host) return isLocalHostRegex.test(host);\n  var address = socket.headers['x-forwarded-for'] || socket.remoteAddress;\n  if(address) return isLocalAddressRegex.test(address);\n}\n","ErrorModel = function (appId) {\n  BaseErrorModel.call(this);\n  var self = this;\n  this.appId = appId;\n  this.errors = {};\n  this.startTime = Date.now();\n  this.maxErrors = 10;\n}\n\nObject.assign(ErrorModel.prototype, KadiraModel.prototype);\nObject.assign(ErrorModel.prototype, BaseErrorModel.prototype);\n\nErrorModel.prototype.buildPayload = function() {\n  var metrics = _.values(this.errors);\n  this.startTime = Ntp._now();\n\n  metrics.forEach(function (metric) {\n    metric.startTime = Kadira.syncedDate.syncTime(metric.startTime)\n  });\n\n  this.errors = {};\n  return {errors: metrics};\n};\n\nErrorModel.prototype.errorCount = function () {\n  return _.values(this.errors).length;\n};\n\nErrorModel.prototype.trackError = function(ex, trace) {\n  var key = trace.type + ':' + ex.message;\n  if(this.errors[key]) {\n    this.errors[key].count++;\n  } else if (this.errorCount() < this.maxErrors) {\n    var errorDef = this._formatError(ex, trace);\n    if(this.applyFilters(errorDef.type, errorDef.name, ex, errorDef.subType)) {\n      this.errors[key] = this._formatError(ex, trace);\n    }\n  }\n};\n\nErrorModel.prototype._formatError = function(ex, trace) {\n  var time = Date.now();\n  var stack = ex.stack;\n\n  // to get Meteor's Error details\n  if(ex.details) {\n    stack = \"Details: \" + ex.details + \"\\r\\n\" + stack;\n  }\n\n  // Update trace's error event with the next stack\n  var errorEvent = trace.events && trace.events[trace.events.length -1];\n  var errorObject = errorEvent && errorEvent[2] && errorEvent[2].error;\n\n  if(errorObject) {\n    errorObject.stack = stack;\n  }\n\n  return {\n    appId: this.appId,\n    name: ex.message,\n    type: trace.type,\n    startTime: time,\n    subType: trace.subType || trace.name,\n    trace: trace,\n    stacks: [{stack: stack}],\n    count: 1\n  }\n};\n","const { DDSketch } = require('monti-apm-sketches-js');\n\nconst METHOD_METRICS_FIELDS = ['db', 'http', 'email', 'async', 'compute', 'total', 'fs'];\n\n\nconst HttpModel = function () {\n  this.metricsByMinute = Object.create(null);\n  this.tracerStore = new TracerStore({\n    interval: 1000 * 10,\n    maxTotalPoints: 30,\n    archiveEvery: 10\n  });\n\n  this.tracerStore.start();\n}\n\n_.extend(HttpModel.prototype, KadiraModel.prototype);\n\nHttpModel.prototype.processRequest = function (trace, req, res) {\n  const dateId = this._getDateId(trace.at);\n  this._appendMetrics(dateId, trace, res);\n  this.tracerStore.addTrace(trace);\n}\n\nHttpModel.prototype._getMetrics = function (timestamp, routeId) {\n  const dateId = this._getDateId(timestamp);\n\n  if (!this.metricsByMinute[dateId]) {\n    this.metricsByMinute[dateId] = {\n      routes: Object.create(null)\n    };\n  }\n\n  const routes = this.metricsByMinute[dateId].routes;\n\n  if (!routes[routeId]) {\n    routes[routeId] = {\n      histogram: new DDSketch({\n        alpha: 0.02,\n      }),\n      count: 0,\n      errors: 0,\n      statusCodes: Object.create(null)\n    };\n\n    METHOD_METRICS_FIELDS.forEach(function (field) {\n      routes[routeId][field] = 0;\n    });\n  }\n\n  return this.metricsByMinute[dateId].routes[routeId];\n}\n\nHttpModel.prototype._appendMetrics = function (dateId, trace, res) {\n  var requestMetrics = this._getMetrics(dateId, trace.name);\n\n  if (!this.metricsByMinute[dateId].startTime) {\n    this.metricsByMinute[dateId].startTime = trace.at;\n  }\n\n  // merge\n  METHOD_METRICS_FIELDS.forEach(field => {\n    var value = trace.metrics[field];\n    if (value > 0) {\n      requestMetrics[field] += value;\n    }\n  });\n\n  const statusCode = res.statusCode;\n  let statusMetric;\n\n  if (statusCode < 200) {\n    statusMetric = '1xx';\n  } else if (statusCode < 300) {\n    statusMetric = '2xx';\n  } else if (statusCode < 400) {\n    statusMetric = '3xx';\n  } else if (statusCode < 500) {\n    statusMetric = '4xx';\n  } else if (statusCode < 600) {\n    statusMetric = '5xx';\n  }\n\n  requestMetrics.statusCodes[statusMetric] = requestMetrics.statusCodes[statusMetric] || 0;\n  requestMetrics.statusCodes[statusMetric] += 1;\n\n  requestMetrics.count += 1;\n  requestMetrics.histogram.add(trace.metrics.total);\n  this.metricsByMinute[dateId].endTime = trace.metrics.at;\n}\n\nHttpModel.prototype.buildPayload = function() {\n  var payload = {\n    httpMetrics: [],\n    httpRequests: []\n  };\n\n  var metricsByMinute = this.metricsByMinute;\n  this.metricsByMinute = Object.create(null);\n\n  for(var key in metricsByMinute) {\n    var metrics = metricsByMinute[key];\n    // convert startTime into the actual serverTime\n    var startTime = metrics.startTime;\n    metrics.startTime = Kadira.syncedDate.syncTime(startTime);\n\n    for(var requestName in metrics.routes) {\n      METHOD_METRICS_FIELDS.forEach(function (field) {\n        metrics.routes[requestName][field] /= metrics.routes[requestName].count;\n      });\n    }\n\n    payload.httpMetrics.push(metricsByMinute[key]);\n  }\n\n  payload.httpRequests = this.tracerStore.collectTraces();\n\n  return payload;\n}\n\nexport default HttpModel;\n","var Jobs = Kadira.Jobs = {};\n\nJobs.getAsync = function(id, callback) {\n  Kadira.coreApi.getJob(id)\n    .then(function(data) {\n      callback(null, data);\n    })\n    .catch(function(err) {\n      callback(err)\n    });\n};\n\n\nJobs.setAsync = function(id, changes, callback) {\n  Kadira.coreApi.updateJob(id, changes)\n    .then(function(data) {\n      callback(null, data);\n    })\n    .catch(function(err) {\n      callback(err)\n    });\n};\n\nJobs.set = Kadira._wrapAsync(Jobs.setAsync);\nJobs.get = Kadira._wrapAsync(Jobs.getAsync);\n","// Retry logic with an exponential backoff.\n//\n// options:\n//  baseTimeout: time for initial reconnect attempt (ms).\n//  exponent: exponential factor to increase timeout each attempt.\n//  maxTimeout: maximum time between retries (ms).\n//  minCount: how many times to reconnect \"instantly\".\n//  minTimeout: time to wait for the first `minCount` retries (ms).\n//  fuzz: factor to randomize retry times by (to avoid retry storms).\n\n//TODO: remove this class and use Meteor Retry in a later version of meteor.\n\nRetry = class {\n  constructor ({\n    baseTimeout = 1000, // 1 second\n    exponent = 2.2,\n    // The default is high-ish to ensure a server can recover from a\n    // failure caused by load.\n    maxTimeout = 5 * 60000, // 5 minutes\n    minTimeout = 10,\n    minCount = 2,\n    fuzz = 0.5, // +- 25%\n  } = {}) {\n    this.baseTimeout = baseTimeout;\n    this.exponent = exponent;\n    this.maxTimeout = maxTimeout;\n    this.minTimeout = minTimeout;\n    this.minCount = minCount;\n    this.fuzz = fuzz;\n    this.retryTimer = null;\n  }\n\n  // Reset a pending retry, if any.\n  clear() {\n    if(this.retryTimer)\n      clearTimeout(this.retryTimer);\n    this.retryTimer = null;\n  }\n\n  // Calculate how long to wait in milliseconds to retry, based on the\n  // `count` of which retry this is.\n  _timeout(count) {\n    if(count < this.minCount)\n      return this.minTimeout;\n\n    let timeout = Math.min(\n      this.maxTimeout,\n      this.baseTimeout * Math.pow(this.exponent, count));\n    // fuzz the timeout randomly, to avoid reconnect storms when a\n    // server goes down.\n    timeout = timeout * ((Random.fraction() * this.fuzz) +\n                         (1 - this.fuzz/2));\n    return Math.ceil(timeout);\n  }\n\n  // Call `fn` after a delay, based on the `count` of which retry this is.\n  retryLater(count, fn) {\n    const timeout = this._timeout(count);\n    if(this.retryTimer)\n      clearTimeout(this.retryTimer);\n\n    this.retryTimer = setTimeout(fn, timeout);\n    return timeout;\n  }\n\n}\n\n","const { DDSketch } = require('monti-apm-sketches-js');\n\nHaveAsyncCallback = function(args) {\n  var lastArg = args[args.length -1];\n  return (typeof lastArg) == 'function';\n};\n\nUniqueId = function(start) {\n  this.id = 0;\n}\n\nUniqueId.prototype.get = function() {\n  return \"\" + this.id++;\n};\n\nDefaultUniqueId = new UniqueId();\n\n// creates a stack trace, removing frames in montiapm:agent's code\nCreateUserStack = function (error) {\n  const stack = (error || new Error()).stack.split('\\n');\n  let toRemove = 1;\n\n  // Find how many frames need to be removed\n  // to make the user's code the first frame\n  for (; toRemove < stack.length; toRemove++) {\n    if (stack[toRemove].indexOf('montiapm:agent') === -1) {\n      break;\n    }\n  }\n\n  return stack.slice(toRemove).join('\\n');\n}\n\n// Optimized version of apply which tries to call as possible as it can\n// Then fall back to apply\n// This is because, v8 is very slow to invoke apply.\nOptimizedApply = function OptimizedApply(context, fn, args) {\n  var a = args;\n  switch(a.length) {\n    case 0:\n      return fn.call(context);\n    case 1:\n      return fn.call(context, a[0]);\n    case 2:\n      return fn.call(context, a[0], a[1]);\n    case 3:\n      return fn.call(context, a[0], a[1], a[2]);\n    case 4:\n      return fn.call(context, a[0], a[1], a[2], a[3]);\n    case 5:\n      return fn.call(context, a[0], a[1], a[2], a[3], a[4]);\n    default:\n      return fn.apply(context, a);\n  }\n}\n\ngetClientVersions = function () {\n  return {\n    'web.cordova': getClientArchVersion('web.cordova'),\n    'web.browser': getClientArchVersion('web.browser'),\n    'web.browser.legacy': getClientArchVersion('web.browser.legacy')\n  }\n}\n\n// Returns number of keys of an object, or size of a Map or Set\ncountKeys = function (obj) {\n  if (obj instanceof Map || obj instanceof Set) {\n    return obj.size;\n  }\n\n  return Object.keys(obj).length;\n}\n\n// Iterates objects and maps.\n// Callback is called with a value and key\niterate = function (obj, callback) {\n  if (obj instanceof Map) {\n    return obj.forEach(callback);\n  }\n\n  for (var key in obj) {\n    var value = obj[key];\n    callback(value, key);\n  }\n}\n\n// Returns a property from an object, or an entry from a map\ngetProperty = function (obj, key) {\n  if (obj instanceof Map) {\n    return obj.get(key);\n  }\n\n  return obj[key];\n}\n\nexport function createHistogram () {\n  return new DDSketch({\n    alpha: 0.02\n  });\n}\n","var logger = getLogger();\n\nNtp = function (endpoint) {\n  this.path = '/simplentp/sync';\n  this.setEndpoint(endpoint);\n  this.diff = 0;\n  this.synced = false;\n  this.reSyncCount = 0;\n  this.reSync = new Retry({\n    baseTimeout: 1000*60,\n    maxTimeout: 1000*60*10,\n    minCount: 0\n  });\n}\n\nNtp._now = function() {\n  var now = Date.now();\n  if(typeof now == 'number') {\n    return now;\n  } else if(now instanceof Date) {\n    // some extenal JS libraries override Date.now and returns a Date object\n    // which directly affect us. So we need to prepare for that\n    return now.getTime();\n  } else {\n    // trust me. I've seen now === undefined\n    return (new Date()).getTime();\n  }\n};\n\nNtp.prototype.setEndpoint = function(endpoint) {\n  this.endpoint = endpoint + this.path;\n};\n\nNtp.prototype.getTime = function() {\n  return Ntp._now() + Math.round(this.diff);\n};\n\nNtp.prototype.syncTime = function(localTime) {\n  return localTime + Math.ceil(this.diff);\n};\n\nNtp.prototype.sync = function() {\n  logger('init sync');\n  var self = this;\n  var retryCount = 0;\n  var retry = new Retry({\n    baseTimeout: 1000*20,\n    maxTimeout: 1000*60,\n    minCount: 1,\n    minTimeout: 0\n  });\n  syncTime();\n\n  function syncTime () {\n    if(retryCount<5) {\n      logger('attempt time sync with server', retryCount);\n      // if we send 0 to the retryLater, cacheDns will run immediately\n      retry.retryLater(retryCount++, cacheDns);\n    } else {\n      logger('maximum retries reached');\n      self.reSync.retryLater(self.reSyncCount++, function () {\n        var args = [].slice.call(arguments);\n        self.sync.apply(self, args);\n      });\n    }\n  }\n\n  // first attempt is to cache dns. So, calculation does not\n  // include DNS resolution time\n  function cacheDns () {\n    self.getServerTime(function(err) {\n      if(!err) {\n        calculateTimeDiff();\n      } else {\n        syncTime();\n      }\n    });\n  }\n\n  function calculateTimeDiff () {\n    var clientStartTime = (new Date()).getTime();\n    self.getServerTime(function(err, serverTime) {\n      if(!err && serverTime) {\n        // (Date.now() + clientStartTime)/2 : Midpoint between req and res\n        var networkTime = ((new Date()).getTime() - clientStartTime)/2\n        var serverStartTime = serverTime - networkTime;\n        self.diff = serverStartTime - clientStartTime;\n        self.synced = true;\n        // we need to send 1 into retryLater.\n        self.reSync.retryLater(self.reSyncCount++, function () {\n          var args = [].slice.call(arguments);\n          self.sync.apply(self, args);\n        });\n        logger('successfully updated diff value', self.diff);\n      } else {\n        syncTime();\n      }\n    });\n  }\n}\n\nNtp.prototype.getServerTime = function(callback) {\n  var self = this;\n\n  if(Meteor.isServer) {\n    Kadira.coreApi.get(self.path, { noRetries: true }).then(content => {\n      var serverTime = parseInt(content);\n      callback(null, serverTime);\n    })\n    .catch(err => {\n      callback(err);\n    });\n  } else {\n    httpRequest('GET', self.endpoint + `?noCache=${new Date().getTime()}-${Math.random()}`, function(err, res) {\n      if (err) {\n        callback(err);\n      } else {\n        var serverTime = parseInt(res.content);\n        callback(null, serverTime);\n      }\n    });\n  }\n};\n\nfunction getLogger() {\n  if(Meteor.isServer) {\n    return Npm.require('debug')(\"kadira:ntp\");\n  } else {\n    return function(message) {\n      var canLogKadira =\n        Meteor._localStorage.getItem('LOG_KADIRA') !== null\n        && typeof console !== 'undefined';\n\n      if(canLogKadira) {\n        if(message) {\n          message = \"kadira:ntp \" + message;\n          arguments[0] = message;\n        }\n        console.log.apply(console, arguments);\n      }\n    }\n  }\n}\n","var url = Npm.require('url');\nvar path = Npm.require('path');\nvar fs = Npm.require('fs');\nvar logger = Npm.require('debug')('kadira:apm:sourcemaps');\n\n// Meteor 1.7 and older used clientPaths\nvar clientPaths = __meteor_bootstrap__.configJson.clientPaths;\nvar clientArchs =  __meteor_bootstrap__.configJson.clientArchs;\nvar serverDir = __meteor_bootstrap__.serverDir;\nvar absClientPaths\n\nif (clientArchs) {\n  absClientPaths = clientArchs.reduce((result, arch) => {\n    result[arch] = path.resolve(path.dirname(serverDir), arch)\n\n    return result\n  }, {})\n} else {\n  absClientPaths = Object.keys(clientPaths).reduce((result, key) => {\n    result[key] = path.resolve(serverDir, path.dirname(clientPaths[key]));\n\n    return result;\n  }, {});\n}\n\nhandleApiResponse = function (body = {}) {\n  var unavailable = [];\n\n  if (typeof body === 'string') {\n    try {\n      body = JSON.parse(body);\n    } catch (e) {\n      logger('failed parsing body', e, body)\n      return;\n    }\n  }\n\n  var neededSourcemaps = body.neededSourcemaps || []\n  logger('body', neededSourcemaps)\n\n  var promises = neededSourcemaps.map((sourcemap) => {\n    if (!Kadira.options.uploadSourceMaps) {\n      return unavailable.push(sourcemap)\n    }\n\n    return getSourcemapPath(sourcemap.arch, sourcemap.file.path)\n      .then(function (sourceMapPath) {\n        if (sourceMapPath === null) {\n          unavailable.push(sourcemap)\n        } else {\n          sendSourcemap(sourcemap, sourceMapPath)\n        }\n      })\n  })\n\n  Promise.all(promises).then(function () {\n    if (unavailable.length > 0) {\n      logger('sending unavailable sourcemaps', unavailable)\n      Kadira.coreApi.sendData({\n        unavailableSourcemaps: unavailable\n      })\n      .then(function (body) {\n        handleApiResponse(body);\n      })\n      .catch(function (err) {\n        console.log('Monti APM: unable to send data', err);\n      });\n    }\n  })\n\n}\n\nfunction sendSourcemap(sourcemap, sourcemapPath) {\n  logger('Sending sourcemap', sourcemap, sourcemapPath)\n\n  var stream = fs.createReadStream(sourcemapPath);\n\n  stream.on('error', (err) => {\n    console.log('Monti APM: error while uploading sourcemap', err)\n  });\n\n  var arch = sourcemap.arch;\n  var archVersion = sourcemap.archVersion;\n  var file = encodeURIComponent(sourcemap.file.path);\n  \n  Kadira.coreApi.sendStream(`/sourcemap?arch=${arch}&archVersion=${archVersion}&file=${file}`, stream)\n    .catch(function (err) {\n      console.log('Monti APM: error uploading sourcemap', err);\n    });\n}\n\nfunction preparePath (urlPath) {\n  urlPath = path.posix.normalize(urlPath);\n\n  if (urlPath[0] === '/') {\n    urlPath = urlPath.slice(1);\n  }\n\n  return urlPath;\n}\n\nfunction checkForDynamicImport (arch, urlPath) {\n  const filePath = preparePath(urlPath);\n\n  return new Promise(function (resolve) {\n    const archPath = absClientPaths[arch]\n    const dynamicPath = path.join(archPath, 'dynamic', filePath) + '.map'\n\n    fs.stat(dynamicPath, function (err) {\n      resolve(err ? null : dynamicPath);\n    });\n  });\n}\n\nfunction getSourcemapPath(arch, urlPath) {\n  return new Promise((resolve, reject) => {\n    var clientProgram = WebApp.clientPrograms[arch];\n  \n    if (!clientProgram || !clientProgram.manifest) {\n      return resolve(null);\n    }\n\n    var fileInfo = clientProgram.manifest.find((file) => {\n      return file.url && file.url.startsWith(urlPath);\n    });\n\n    if (fileInfo && fileInfo.sourceMap) {\n      return resolve(path.join(\n        absClientPaths[arch],\n        fileInfo.sourceMap\n      ));\n    }\n\n    checkForDynamicImport(arch, urlPath).then(resolve).catch(reject)\n  });\n}\n","var WAITON_MESSAGE_FIELDS = ['msg', 'id', 'method', 'name', 'waitTime'];\n\n// This is way how we can build waitTime and it's breakdown\nWaitTimeBuilder = function() {\n  this._waitListStore = {};\n  this._currentProcessingMessages = {};\n  this._messageCache = {};\n};\n\nWaitTimeBuilder.prototype.register = function(session, msgId) {\n  var self = this;\n  var mainKey = self._getMessageKey(session.id, msgId);\n\n  var inQueue = session.inQueue || [];\n  if(typeof inQueue.toArray === 'function') {\n    // latest version of Meteor uses a double-ended-queue for the inQueue\n    // info: https://www.npmjs.com/package/double-ended-queue\n    inQueue = inQueue.toArray();\n  }\n\n  var waitList = inQueue.map(function(msg) {\n    var key = self._getMessageKey(session.id, msg.id);\n    return self._getCacheMessage(key, msg);\n  });\n\n  waitList = waitList || [];\n\n  //add currently processing ddp message if exists\n  var currentlyProcessingMessage = this._currentProcessingMessages[session.id];\n  if(currentlyProcessingMessage) {\n    var key = self._getMessageKey(session.id, currentlyProcessingMessage.id);\n    waitList.unshift(this._getCacheMessage(key, currentlyProcessingMessage));\n  }\n\n  this._waitListStore[mainKey] = waitList;\n};\n\nWaitTimeBuilder.prototype.build = function(session, msgId) {\n  var mainKey = this._getMessageKey(session.id, msgId);\n  var waitList = this._waitListStore[mainKey] || [];\n  delete this._waitListStore[mainKey];\n\n  var filteredWaitList =  waitList.map(this._cleanCacheMessage.bind(this));\n  return filteredWaitList;\n};\n\nWaitTimeBuilder.prototype._getMessageKey = function(sessionId, msgId) {\n  return sessionId + \"::\" + msgId;\n};\n\nWaitTimeBuilder.prototype._getCacheMessage = function(key, msg) {\n  var self = this;\n  var cachedMessage = self._messageCache[key];\n  if(!cachedMessage) {\n    self._messageCache[key] = cachedMessage = _.pick(msg, WAITON_MESSAGE_FIELDS);\n    cachedMessage._key = key;\n    cachedMessage._registered = 1;\n  } else {\n    cachedMessage._registered++;\n  }\n\n  return cachedMessage;\n};\n\nWaitTimeBuilder.prototype._cleanCacheMessage = function(msg) {\n  msg._registered--;\n  if(msg._registered == 0) {\n    delete this._messageCache[msg._key];\n  }\n\n  // need to send a clean set of objects\n  // otherwise register can go with this\n  return _.pick(msg, WAITON_MESSAGE_FIELDS);\n};\n\nWaitTimeBuilder.prototype.trackWaitTime = function(session, msg, unblock) {\n  var self = this;\n  var started = Date.now();\n  self._currentProcessingMessages[session.id] = msg;\n\n  var unblocked = false;\n  var wrappedUnblock = function() {\n    if(!unblocked) {\n      var waitTime = Date.now() - started;\n      var key = self._getMessageKey(session.id, msg.id);\n      var cachedMessage = self._messageCache[key];\n      if(cachedMessage) {\n        cachedMessage.waitTime = waitTime;\n      }\n      delete self._currentProcessingMessages[session.id];\n      unblocked = true;\n      unblock();\n    }\n  };\n\n  return wrappedUnblock;\n};","// expose for testing purpose\nOplogCheck = {};\n\nOplogCheck._070 = function(cursorDescription) {\n  var options = cursorDescription.options;\n  if (options.limit) {\n    return {\n      code: \"070_LIMIT_NOT_SUPPORTED\",\n      reason: \"Meteor 0.7.0 does not support limit with oplog.\",\n      solution: \"Upgrade your app to Meteor version 0.7.2 or later.\"\n    }\n  };\n\n  var exists$ = _.any(cursorDescription.selector, function (value, field) {\n    if (field.substr(0, 1) === '$')\n      return true;\n  });\n\n  if(exists$) {\n    return {\n      code: \"070_$_NOT_SUPPORTED\",\n      reason: \"Meteor 0.7.0 supports only equal checks with oplog.\",\n      solution: \"Upgrade your app to Meteor version 0.7.2 or later.\"\n    }\n  };\n\n  var onlyScalers = _.all(cursorDescription.selector, function (value, field) {\n    return typeof value === \"string\" ||\n      typeof value === \"number\" ||\n      typeof value === \"boolean\" ||\n      value === null ||\n      value instanceof Meteor.Collection.ObjectID;\n  });\n\n  if(!onlyScalers) {\n    return {\n      code: \"070_ONLY_SCALERS\",\n      reason: \"Meteor 0.7.0 only supports scalers as comparators.\",\n      solution: \"Upgrade your app to Meteor version 0.7.2 or later.\"\n    }\n  }\n\n  return true;\n};\n\nOplogCheck._071 = function(cursorDescription) {\n  var options = cursorDescription.options;\n  var matcher = new Minimongo.Matcher(cursorDescription.selector);\n  if (options.limit) {\n    return {\n      code: \"071_LIMIT_NOT_SUPPORTED\",\n      reason: \"Meteor 0.7.1 does not support limit with oplog.\",\n      solution: \"Upgrade your app to Meteor version 0.7.2 or later.\"\n    }\n  };\n\n  return true;\n};\n\n\nOplogCheck.env = function() {\n  if(!process.env.MONGO_OPLOG_URL) {\n    return {\n      code: \"NO_ENV\",\n      reason: \"You haven't added oplog support for your the Meteor app.\",\n      solution: \"Add oplog support for your Meteor app. see: http://goo.gl/Co1jJc\"\n    }\n  } else {\n    return true;\n  }\n};\n\nOplogCheck.disableOplog = function(cursorDescription) {\n  if(cursorDescription.options._disableOplog) {\n    return {\n      code: \"DISABLE_OPLOG\",\n      reason: \"You've disable oplog for this cursor explicitly with _disableOplog option.\"\n    };\n  } else {\n    return true;\n  }\n};\n\n// when creating Minimongo.Matcher object, if that's throws an exception\n// meteor won't do the oplog support\nOplogCheck.miniMongoMatcher = function(cursorDescription) {\n  if(Minimongo.Matcher) {\n    try {\n      var matcher = new Minimongo.Matcher(cursorDescription.selector);\n      return true;\n    } catch(ex) {\n      return {\n        code: \"MINIMONGO_MATCHER_ERROR\",\n        reason: \"There's something wrong in your mongo query: \" +  ex.message,\n        solution: \"Check your selector and change it accordingly.\"\n      };\n    }\n  } else {\n    // If there is no Minimongo.Matcher, we don't need to check this\n    return true;\n  }\n};\n\nOplogCheck.miniMongoSorter = function(cursorDescription) {\n  var matcher = new Minimongo.Matcher(cursorDescription.selector);\n  if(Minimongo.Sorter && cursorDescription.options.sort) {\n    try {\n      var sorter = new Minimongo.Sorter(\n        cursorDescription.options.sort,\n        { matcher: matcher }\n      );\n      return true;\n    } catch(ex) {\n      return {\n        code: \"MINIMONGO_SORTER_ERROR\",\n        reason: \"Some of your sort specifiers are not supported: \" + ex.message,\n        solution: \"Check your sort specifiers and chage them accordingly.\"\n      }\n    }\n  } else {\n    return true;\n  }\n};\n\nOplogCheck.fields = function(cursorDescription) {\n  var options = cursorDescription.options;\n  if(options.fields) {\n    try {\n      LocalCollection._checkSupportedProjection(options.fields);\n      return true;\n    } catch (e) {\n      if (e.name === \"MinimongoError\") {\n        return {\n          code: \"NOT_SUPPORTED_FIELDS\",\n          reason: \"Some of the field filters are not supported: \" + e.message,\n          solution: \"Try removing those field filters.\"\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n  return true;\n};\n\nOplogCheck.skip = function(cursorDescription) {\n  if(cursorDescription.options.skip) {\n    return {\n      code: \"SKIP_NOT_SUPPORTED\",\n      reason: \"Skip does not support with oplog.\",\n      solution: \"Try to avoid using skip. Use range queries instead: http://goo.gl/b522Av\"\n    };\n  }\n\n  return true;\n};\n\nOplogCheck.where = function(cursorDescription) {\n  var matcher = new Minimongo.Matcher(cursorDescription.selector);\n  if(matcher.hasWhere()) {\n    return {\n      code: \"WHERE_NOT_SUPPORTED\",\n      reason: \"Meteor does not support queries with $where.\",\n      solution: \"Try to remove $where from your query. Use some alternative.\"\n    }\n  };\n\n  return true;\n};\n\nOplogCheck.geo = function(cursorDescription) {\n  var matcher = new Minimongo.Matcher(cursorDescription.selector);\n\n  if(matcher.hasGeoQuery()) {\n    return {\n      code: \"GEO_NOT_SUPPORTED\",\n      reason: \"Meteor does not support queries with geo partial operators.\",\n      solution: \"Try to remove geo partial operators from your query if possible.\"\n    }\n  };\n\n  return true;\n};\n\nOplogCheck.limitButNoSort = function(cursorDescription) {\n  var options = cursorDescription.options;\n\n  if((options.limit && !options.sort)) {\n    return {\n      code: \"LIMIT_NO_SORT\",\n      reason: \"Meteor oplog implementation does not support limit without a sort specifier.\",\n      solution: \"Try adding a sort specifier.\"\n    }\n  };\n\n  return true;\n};\n\nOplogCheck.olderVersion = function(cursorDescription, driver) {\n  if(driver && !driver.constructor.cursorSupported) {\n    return {\n      code: \"OLDER_VERSION\",\n      reason: \"Your Meteor version does not have oplog support.\",\n      solution: \"Upgrade your app to Meteor version 0.7.2 or later.\"\n    };\n  }\n  return true;\n};\n\nOplogCheck.gitCheckout = function(cursorDescription, driver) {\n  if(!Meteor.release) {\n    return {\n      code: \"GIT_CHECKOUT\",\n      reason: \"Seems like your Meteor version is based on a Git checkout and it doesn't have the oplog support.\",\n      solution: \"Try to upgrade your Meteor version.\"\n    };\n  }\n  return true;\n};\n\nvar preRunningMatchers = [\n  OplogCheck.env,\n  OplogCheck.disableOplog,\n  OplogCheck.miniMongoMatcher\n];\n\nvar globalMatchers = [\n  OplogCheck.fields,\n  OplogCheck.skip,\n  OplogCheck.where,\n  OplogCheck.geo,\n  OplogCheck.limitButNoSort,\n  OplogCheck.miniMongoSorter,\n  OplogCheck.olderVersion,\n  OplogCheck.gitCheckout\n];\n\nvar versionMatchers = [\n  [/^0\\.7\\.1/, OplogCheck._071],\n  [/^0\\.7\\.0/, OplogCheck._070],\n];\n\nKadira.checkWhyNoOplog = function(cursorDescription, observerDriver) {\n  if(typeof Minimongo == 'undefined') {\n    return {\n      code: \"CANNOT_DETECT\",\n      reason: \"You are running an older Meteor version and Kadira can't check oplog state.\",\n      solution: \"Try updating your Meteor app\"\n    }\n  }\n\n  var result = runMatchers(preRunningMatchers, cursorDescription, observerDriver);\n  if(result !== true) {\n    return result;\n  }\n\n  var meteorVersion = Meteor.release;\n  for(var lc=0; lc<versionMatchers.length; lc++) {\n    var matcherInfo = versionMatchers[lc];\n    if(matcherInfo[0].test(meteorVersion)) {\n      var matched = matcherInfo[1](cursorDescription, observerDriver);\n      if(matched !== true) {\n        return matched;\n      }\n    }\n  }\n\n  result = runMatchers(globalMatchers, cursorDescription, observerDriver);\n  if(result !== true) {\n    return result;\n  }\n\n  return {\n    code: \"OPLOG_SUPPORTED\",\n    reason: \"This query should support oplog. It's weird if it's not.\",\n    solution: \"Please contact Kadira support and let's discuss.\"\n  };\n};\n\nfunction runMatchers(matcherList, cursorDescription, observerDriver) {\n  for(var lc=0; lc<matcherList.length; lc++) {\n    var matcher = matcherList[lc];\n    var matched = matcher(cursorDescription, observerDriver);\n    if(matched !== true) {\n      return matched;\n    }\n  }\n  return true;\n}\n","var eventLogger = Npm.require('debug')('kadira:tracer');\nvar REPETITIVE_EVENTS = {'db': true, 'http': true, 'email': true, 'wait': true, 'async': true, 'custom': true, 'fs': true};\nvar TRACE_TYPES = ['sub', 'method', 'http'];\nvar MAX_TRACE_EVENTS = 1500;\n\nTracer = function Tracer() {\n  this._filters = [];\n  this._filterFields = ['password'];\n  this.maxArrayItemsToFilter = 20;\n};\n\n//In the future, we might wan't to track inner fiber events too.\n//Then we can't serialize the object with methods\n//That's why we use this method of returning the data\nTracer.prototype.start = function (name, type, {\n  sessionId,\n  msgId,\n  userId\n} = {}) {\n\n  // for backward compatibility\n  if (typeof name === 'object' && typeof type === 'object') {\n    let session = name;\n    let msg = type;\n    sessionId = session.id;\n    msgId = msg.id;\n    userId = session.userId;\n\n    if(msg.msg == 'method') {\n      type = 'method';\n      name = msg.method;\n    } else if(msg.msg == 'sub') {\n      type = 'sub';\n      name = msg.name;\n    } else {\n      return null;\n    }\n  }\n\n  if (TRACE_TYPES.indexOf(type) === -1) {\n    console.warn(`Monti APM: unknown trace type \"${type}\"`);\n    return null;\n  }\n\n\n  var traceInfo = {\n    _id: `${sessionId}::${msgId || DefaultUniqueId.get()}`,\n    type,\n    name,\n    session: sessionId,\n    id: msgId,\n    events: [],\n    userId,\n  };\n\n  return traceInfo;\n};\n\nTracer.prototype.event = function (traceInfo, type, data, metaData) {\n  // do not allow to proceed, if already completed or errored\n  var lastEvent = this.getLastEvent(traceInfo);\n\n  if(\n    // trace completed but has not been processed\n    lastEvent &&\n    ['complete', 'error'].indexOf(lastEvent.type) >= 0 ||\n    // trace completed and processed.\n    traceInfo.isEventsProcessed\n    ) {\n    return false;\n  }\n\n  var event = {\n    type,\n    at: Ntp._now(),\n    endAt: null,\n    nested: [],\n  };\n\n  // special handling for events that are not repetitive\n  if (!REPETITIVE_EVENTS[type]) {\n    event.endAt = event.at;\n  }\n\n  if(data) {\n    var info = _.pick(traceInfo, 'type', 'name')\n    event.data = this._applyFilters(type, data, info, \"start\");\n  }\n\n  if (metaData && metaData.name) {\n    event.name = metaData.name\n  }\n\n  if (Kadira.options.eventStackTrace) {\n    event.stack = CreateUserStack()\n  }\n  \n  eventLogger(\"%s %s\", type, traceInfo._id);\n\n  if (lastEvent && !lastEvent.endAt) {\n    if (!lastEvent.nested) {\n      console.error('Monti: invalid trace. Please share the trace below at');\n      console.error('Monti: https://github.com/monti-apm/monti-apm-agent/issues/14');\n      console.dir(traceInfo, { depth: 10 });\n    }\n    var lastNested = lastEvent.nested[lastEvent.nested.length - 1];\n\n    // Only nest one level\n    if (!lastNested || lastNested.endAt) {\n      lastEvent.nested.push(event);\n      return event;\n    }\n\n    return false;\n  }\n  \n  traceInfo.events.push(event);\n\n  return event;\n};\n\nTracer.prototype.eventEnd = function(traceInfo, event, data) {\n  if (event.endAt) {\n    // Event already ended or is not a repititive event\n    return false;\n  }\n\n  event.endAt = Ntp._now();\n\n  if(data) {\n    var info = _.pick(traceInfo, 'type', 'name')\n    event.data = Object.assign(\n      event.data || {},\n      this._applyFilters(`${event.type}end`, data, info, 'end')\n    );\n  }\n  eventLogger(\"%s %s\", event.type + 'end', traceInfo._id);\n\n  return true;\n};\n\nTracer.prototype.getLastEvent = function(traceInfo) {\n  return traceInfo.events[traceInfo.events.length -1]\n};\n\nTracer.prototype.endLastEvent = function(traceInfo) {\n  var lastEvent = this.getLastEvent(traceInfo);\n\n  if (!lastEvent.endAt) {\n    this.eventEnd(traceInfo, lastEvent);\n    lastEvent.forcedEnd = true;\n    return true;\n  }\n  return false;\n};\n\n// Most of the time, all of the nested events are async\n// which is not helpful. This returns true if\n// there are nested events other than async.\nTracer.prototype._hasUsefulNested = function (event) {\n  return !event.nested.every(event => {\n    return event.type === 'async';\n  });\n}\n\nTracer.prototype.buildEvent = function(event, depth = 0, trace) {\n  var elapsedTimeForEvent = event.endAt - event.at;\n  var builtEvent = [event.type];\n  var nested = [];\n\n  builtEvent.push(elapsedTimeForEvent);\n  builtEvent.push(event.data || {});\n  \n  if (event.nested.length && this._hasUsefulNested(event)) {\n    let prevEnd = event.at;\n    for(let i = 0; i < event.nested.length; i++) {\n      var nestedEvent = event.nested[i];\n      if (!nestedEvent.endAt) {\n        this.eventEnd(trace, nestedEvent);\n        nestedEvent.forcedEnd = true;\n      }\n\n      var computeTime = nestedEvent.at - prevEnd;\n      if (computeTime > 0) {\n        nested.push(['compute', computeTime]);\n      }\n\n      nested.push(this.buildEvent(nestedEvent, depth + 1, trace));\n      prevEnd = nestedEvent.endAt;\n    }\n  }\n\n\n  if (\n    nested.length ||\n    event.stack ||\n    event.forcedEnd ||\n    event.name\n  ) {\n    builtEvent.push({\n      stack: event.stack,\n      nested: nested.length ? nested : undefined,\n      forcedEnd: event.forcedEnd,\n      name: event.name\n    });\n  }\n\n  return builtEvent;\n}\n\nTracer.prototype.buildTrace = function (traceInfo) {\n  var firstEvent = traceInfo.events[0];\n  var lastEvent = traceInfo.events[traceInfo.events.length - 1];\n  var processedEvents = [];\n\n  if (firstEvent.type !== 'start') {\n    console.warn('Monti APM: trace has not started yet');\n    return null;\n  } else if (lastEvent.type !== 'complete' && lastEvent.type !== 'error') {\n    //trace is not completed or errored yet\n    console.warn('Monti APM: trace has not completed or errored yet');\n    return null;\n  } else {\n    //build the metrics\n    traceInfo.errored = lastEvent.type === 'error';\n    traceInfo.at = firstEvent.at;\n\n    var metrics = {\n      total: lastEvent.at - firstEvent.at,\n    };\n\n    var totalNonCompute = 0;\n\n    firstEvent = ['start', 0];\n    if (traceInfo.events[0].data) {\n      firstEvent.push(traceInfo.events[0].data);\n    }\n    processedEvents.push(firstEvent);\n\n    for (var lc = 1; lc < traceInfo.events.length - 1; lc += 1) {\n      var prevEvent = traceInfo.events[lc - 1];\n      var event = traceInfo.events[lc];\n\n      if (!event.endAt) {\n        console.error('Monti APM: no end event for type: ', event.type);\n        return null;\n      }\n\n      var computeTime = event.at - prevEvent.endAt;\n      if (computeTime > 0) {\n        processedEvents.push(['compute', computeTime]);\n      }\n      var builtEvent = this.buildEvent(event, 0, traceInfo);\n      processedEvents.push(builtEvent);\n\n      metrics[event.type] = metrics[event.type] || 0;\n      metrics[event.type] += builtEvent[1];\n      totalNonCompute += builtEvent[1];\n    }\n  }\n\n  computeTime = lastEvent.at - traceInfo.events[traceInfo.events.length - 2].endAt;\n  if(computeTime > 0) processedEvents.push(['compute', computeTime]);\n\n  var lastEventData = [lastEvent.type, 0];\n  if(lastEvent.data) lastEventData.push(lastEvent.data);\n  processedEvents.push(lastEventData);\n\n  if (processedEvents.length > MAX_TRACE_EVENTS) {\n    const removeCount = processedEvents.length - MAX_TRACE_EVENTS\n    processedEvents.splice(MAX_TRACE_EVENTS, removeCount);\n  }\n\n  metrics.compute = metrics.total - totalNonCompute;\n  traceInfo.metrics = metrics;\n  traceInfo.events = processedEvents;\n  traceInfo.isEventsProcessed = true;\n  return traceInfo;\n};\n\nTracer.prototype.addFilter = function(filterFn) {\n  this._filters.push(filterFn);\n};\n\nTracer.prototype.redactField = function (field) {\n  this._filterFields.push(field);\n};\n\nTracer.prototype._applyFilters = function(eventType, data, info) {\n  this._filters.forEach(function(filterFn) {\n    data = filterFn(eventType, _.clone(data), info);\n  });\n\n  return data;\n};\n\nTracer.prototype._applyObjectFilters = function (toFilter) {\n  const filterObject = (obj) => {\n    let cloned;\n    this._filterFields.forEach(function (field) {\n      if (field in obj) {\n        cloned = cloned || Object.assign({}, obj);\n        cloned[field] = 'Monti: redacted';\n      }\n    });\n\n    return cloned;\n  }\n\n  if (Array.isArray(toFilter)) {\n    let cloned;\n    // There could be thousands or more items in the array, and this usually runs\n    // before the data is validated. For performance reasons we limit how\n    // many to check\n    let length = Math.min(toFilter.length, this.maxArrayItemsToFilter);\n    for (let i = 0; i < length; i++) {\n      if (typeof toFilter[i] === 'object' && toFilter[i] !== null) {\n        let result = filterObject(toFilter[i]);\n        if (result) {\n          cloned = cloned || [...toFilter];\n          cloned[i] = result;\n        }\n      }\n    }\n\n    return cloned || toFilter;\n  }\n\n  return filterObject(toFilter) || toFilter;\n}\n\nKadira.tracer = new Tracer();\n// need to expose Tracer to provide default set of filters\nKadira.Tracer = Tracer;\n","// strip sensitive data sent to Monti APM engine.\n// possible to limit types by providing an array of types to strip\n// possible types are: \"start\", \"db\", \"http\", \"email\"\nTracer.stripSensitive = function stripSensitive(typesToStrip, receiverType, name) {\n  typesToStrip =  typesToStrip || [];\n\n  var strippedTypes = {};\n  typesToStrip.forEach(function(type) {\n    strippedTypes[type] = true;\n  });\n\n  return function (type, data, info) {\n    if(typesToStrip.length > 0 && !strippedTypes[type])\n      return data;\n\n    if(receiverType && receiverType != info.type)\n      return data;\n\n    if(name && name != info.name)\n      return data;\n\n    if(type == \"start\") {\n      if (data.params) {\n        data.params = \"[stripped]\";\n      }\n      if (data.headers) {\n        data.headers = \"[stripped]\";\n      }\n      if (data.body) {\n        data.body = \"[stripped]\";\n      }\n    } else if(type == \"db\") {\n      data.selector = \"[stripped]\";\n    } else if(type == \"http\") {\n      data.url = \"[stripped]\";\n    } else if(type == \"email\") {\n      [\"from\", \"to\", \"cc\", \"bcc\", \"replyTo\"].forEach(function(item) {\n        if(data[item]) {\n          data[item] = \"[stripped]\";\n        }\n      });\n    }\n\n    return data;\n  };\n};\n\n// Strip sensitive data sent to Monti APM engine.\n// In contrast to stripSensitive, this one has an allow list of what to keep\n// to guard against forgetting to strip new fields\n// In the future this one might replace Tracer.stripSensitive\n// options\nTracer.stripSensitiveThorough = function stripSensitive() {\n  return function (type, data) {\n    let fieldsToKeep = [];\n\n    if (type == \"start\") {\n      fieldsToKeep = ['userId'];\n    } else if (type === 'waitend') {\n      fieldsToKeep = [ 'waitOn' ];\n    } else if (type == \"db\") {\n      fieldsToKeep = [\n        'coll', 'func', 'cursor', 'limit', 'docsFetched', 'docSize', 'oplog',\n        'fields', 'wasMultiplexerReady', 'queueLength', 'elapsedPollingTime',\n        'noOfCachedDocs'\n      ];\n    } else if (type == \"http\") {\n      fieldsToKeep = ['method', 'statusCode'];\n    } else if (type == \"email\") {\n      fieldsToKeep = [];\n    } else if (type === 'custom') {\n      // This is supplied by the user so we assume they are only giving data that can be sent\n      fieldsToKeep = Object.keys(data);\n    } else if (type === 'error') {\n      fieldsToKeep = ['error'];\n    }\n\n    Object.keys(data).forEach(key => {\n      if (fieldsToKeep.indexOf(key) === -1) {\n        data[key] = '[stripped]';\n      }\n    });\n\n    return data;\n  };\n};\n\n// strip selectors only from the given list of collection names\nTracer.stripSelectors = function stripSelectors(collectionList, receiverType, name) {\n  collectionList = collectionList || [];\n\n  var collMap = {};\n  collectionList.forEach(function(collName) {\n    collMap[collName] = true;\n  });\n\n  return function(type, data, info) {\n    if(type != \"db\" || (data && !collMap[data.coll])) {\n      return data\n    }\n\n    if(receiverType && receiverType != info.type)\n      return data;\n\n    if(name && name != info.name)\n      return data;\n\n    data.selector = \"[stripped]\";\n    return data;\n  };\n}\n","var logger = Npm.require('debug')('kadira:ts');\n\nTracerStore = function TracerStore(options) {\n  options = options || {};\n\n  this.maxTotalPoints = options.maxTotalPoints || 30;\n  this.interval = options.interval || 1000 * 60;\n  this.archiveEvery = options.archiveEvery || this.maxTotalPoints / 6;\n\n  //store max total on the past 30 minutes (or past 30 items)\n  this.maxTotals = Object.create(null);\n  //store the max trace of the current interval\n  this.currentMaxTrace = Object.create(null);\n  //archive for the traces\n  this.traceArchive = [];\n\n  this.processedCnt = Object.create(null);\n\n  //group errors by messages between an interval\n  this.errorMap = Object.create(null);\n};\n\nTracerStore.prototype.addTrace = function(trace) {\n  var kind = [trace.type, trace.name].join('::');\n  if(!this.currentMaxTrace[kind]) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if(this.currentMaxTrace[kind].metrics.total < trace.metrics.total) {\n    this.currentMaxTrace[kind] = EJSON.clone(trace);\n  } else if(trace.errored) {\n    this._handleErrors(trace);\n  }\n};\n\nTracerStore.prototype.collectTraces = function() {\n  var traces = this.traceArchive;\n  this.traceArchive = [];\n\n  // convert at(timestamp) into the actual serverTime\n  traces.forEach(function(trace) {\n    trace.at = Kadira.syncedDate.syncTime(trace.at);\n  });\n  return traces;\n};\n\nTracerStore.prototype.start = function() {\n  this._timeoutHandler = setInterval(this.processTraces.bind(this), this.interval);\n};\n\nTracerStore.prototype.stop = function() {\n  if(this._timeoutHandler) {\n    clearInterval(this._timeoutHandler);\n  }\n};\n\nTracerStore.prototype._handleErrors = function(trace) {\n  // sending error requests as it is\n  var lastEvent = trace.events[trace.events.length -1];\n  if(lastEvent && lastEvent[2]) {\n    var error = lastEvent[2].error;\n\n    // grouping errors occured (reset after processTraces)\n    var errorKey = [trace.type, trace.name, error.message].join(\"::\");\n    if(!this.errorMap[errorKey]) {\n      var erroredTrace = EJSON.clone(trace);\n      this.errorMap[errorKey] = erroredTrace;\n\n      this.traceArchive.push(erroredTrace);\n    }\n  } else {\n    logger('last events is not an error: ', JSON.stringify(trace.events));\n  }\n};\n\nTracerStore.prototype.processTraces = function() {\n  var self = this;\n  \n  let kinds = new Set();\n  Object.keys(this.maxTotals).forEach(key => {\n    kinds.add(key);\n  });\n  Object.keys(this.currentMaxTrace).forEach(key => {\n    kinds.add(key);\n  });\n\n  for (kind of kinds) {\n    self.processedCnt[kind] = self.processedCnt[kind] || 0;\n    var currentMaxTrace = self.currentMaxTrace[kind];\n    var currentMaxTotal = currentMaxTrace? currentMaxTrace.metrics.total : 0;\n\n    self.maxTotals[kind] = self.maxTotals[kind] || [];\n    //add the current maxPoint\n    self.maxTotals[kind].push(currentMaxTotal);\n    var exceedingPoints = self.maxTotals[kind].length - self.maxTotalPoints;\n    if(exceedingPoints > 0) {\n      self.maxTotals[kind].splice(0, exceedingPoints);\n    }\n\n    var archiveDefault = (self.processedCnt[kind] % self.archiveEvery) == 0;\n    self.processedCnt[kind]++;\n\n    var canArchive = archiveDefault\n      || self._isTraceOutlier(kind, currentMaxTrace);\n\n    if(canArchive && currentMaxTrace) {\n      self.traceArchive.push(currentMaxTrace);\n    }\n\n    //reset currentMaxTrace\n    self.currentMaxTrace[kind] = null;\n  };\n\n  //reset the errorMap\n  self.errorMap = Object.create(null);\n};\n\nTracerStore.prototype._isTraceOutlier = function(kind, trace) {\n  if(trace) {\n    var dataSet = this.maxTotals[kind];\n    return this._isOutlier(dataSet, trace.metrics.total, 3);\n  } else {\n    return false;\n  }\n};\n\n/*\n  Data point must exists in the dataSet\n*/\nTracerStore.prototype._isOutlier = function(dataSet, dataPoint, maxMadZ) {\n  var median = this._getMedian(dataSet);\n  var mad = this._calculateMad(dataSet, median);\n  var madZ = this._funcMedianDeviation(median)(dataPoint) / mad;\n\n  return madZ > maxMadZ;\n};\n\nTracerStore.prototype._getMedian = function(dataSet) {\n  var sortedDataSet = _.clone(dataSet).sort(function(a, b) {\n    return a-b;\n  });\n  return this._pickQuartile(sortedDataSet, 2);\n};\n\nTracerStore.prototype._pickQuartile = function(dataSet, num) {\n  var pos = ((dataSet.length + 1) * num) / 4;\n  if(pos % 1 == 0) {\n    return dataSet[pos -1];\n  } else {\n    pos = pos - (pos % 1);\n    return (dataSet[pos -1] + dataSet[pos])/2\n  }\n};\n\nTracerStore.prototype._calculateMad = function(dataSet, median) {\n  var medianDeviations = _.map(dataSet, this._funcMedianDeviation(median));\n  var mad = this._getMedian(medianDeviations);\n\n  return mad;\n};\n\nTracerStore.prototype._funcMedianDeviation = function(median) {\n  return function(x) {\n    return Math.abs(median - x);\n  };\n};\n\nTracerStore.prototype._getMean = function(dataPoints) {\n  if(dataPoints.length > 0) {\n    var total = 0;\n    dataPoints.forEach(function(point) {\n      total += point;\n    });\n    return total/dataPoints.length;\n  } else {\n    return 0;\n  }\n};\n","var LRU = Npm.require('lru-cache');\nvar crypto = Npm.require('crypto');\nvar jsonStringify = Npm.require('json-stringify-safe');\n\nDocSzCache = function (maxItems, maxValues) {\n  this.items = new LRU({max: maxItems});\n  this.maxValues = maxValues;\n  this.cpuUsage = 0;\n}\n\n// This is called from SystemModel.prototype.cpuUsage and saves cpu usage.\nDocSzCache.prototype.setPcpu = function (pcpu) {\n  this.cpuUsage = pcpu;\n};\n\nDocSzCache.prototype.getSize = function (coll, query, opts, data) {\n  // If the dataset is null or empty we can't calculate the size\n  // Do not process this data and return 0 as the document size.\n  if (!(data && (data.length || (typeof data.size === 'function' && data.size())))) {\n    return 0;\n  }\n\n  var key = this.getKey(coll, query, opts);\n  var item = this.items.get(key);\n\n  if (!item) {\n    item = new DocSzCacheItem(this.maxValues);\n    this.items.set(key, item);\n  }\n\n  if (this.needsUpdate(item)) {\n    var doc = {};\n    if(typeof data.get === 'function'){\n      // This is an IdMap\n      data.forEach(function(element){\n        doc = element;\n        return false; // return false to stop loop. We only need one doc.\n      })\n    } else {\n      doc = data[0];\n    }\n    var size = Buffer.byteLength(jsonStringify(doc), 'utf8');\n    item.addData(size);\n  }\n\n  return item.getValue();\n};\n\nDocSzCache.prototype.getKey = function (coll, query, opts) {\n  return jsonStringify([coll, query, opts]);\n};\n\n// returns a score between 0 and 1 for a cache item\n// this score is determined by:\n//  * available cache item slots\n//  * time since last updated\n//  * cpu usage of the application\nDocSzCache.prototype.getItemScore = function (item) {\n  return [\n    (item.maxValues - item.values.length)/item.maxValues,\n    (Date.now() - item.updated) / 60000,\n    (100 - this.cpuUsage) / 100,\n  ].map(function (score) {\n    return score > 1 ? 1 : score;\n  }).reduce(function (total, score) {\n    return (total || 0) + score;\n  }) / 3;\n};\n\nDocSzCache.prototype.needsUpdate = function (item) {\n  // handle newly made items\n  if (!item.values.length) {\n    return true;\n  }\n\n  var currentTime = Date.now();\n  var timeSinceUpdate = currentTime - item.updated;\n  if (timeSinceUpdate > 1000*60) {\n    return true;\n  }\n\n  return this.getItemScore(item) > 0.5;\n};\n\n\nDocSzCacheItem = function (maxValues) {\n  this.maxValues = maxValues;\n  this.updated = 0;\n  this.values = [];\n}\n\nDocSzCacheItem.prototype.addData = function (value) {\n  this.values.push(value);\n  this.updated = Date.now();\n\n  if (this.values.length > this.maxValues) {\n    this.values.shift();\n  }\n};\n\nDocSzCacheItem.prototype.getValue = function () {\n  function sortNumber(a, b) {\n    return a - b;\n  }\n  var sorted = this.values.sort(sortNumber);\n  var median = 0;\n\n  if (sorted.length % 2 === 0) {\n    var idx = sorted.length / 2;\n    median = (sorted[idx] + sorted[idx-1]) / 2;\n  } else {\n    var idx = Math.floor(sorted.length / 2);\n    median = sorted[idx];\n  }\n\n  return median;\n};\n","import HttpModel from \"./models/http\";\nimport packageMap from './.meteor-package-versions';\n\nvar hostname = Npm.require('os').hostname();\nvar logger = Npm.require('debug')('kadira:apm');\nvar Fibers = Npm.require('fibers');\n\nvar KadiraCore = Npm.require('monti-apm-core').Kadira;\n\nKadira.models = {};\nKadira.options = {};\nKadira.env = {\n  currentSub: null, // keep current subscription inside ddp\n  kadiraInfo: new Meteor.EnvironmentVariable(),\n};\nKadira.waitTimeBuilder = new WaitTimeBuilder();\nKadira.errors = [];\nKadira.errors.addFilter = Kadira.errors.push.bind(Kadira.errors);\n\nKadira.models.methods = new MethodsModel();\nKadira.models.pubsub = new PubsubModel();\nKadira.models.system = new SystemModel();\nKadira.models.http = new HttpModel();\nKadira.docSzCache = new DocSzCache(100000, 10);\n\n\nKadira.connect = function(appId, appSecret, options) {\n  options = options || {};\n  options.appId = appId;\n  options.appSecret = appSecret;\n  options.payloadTimeout = options.payloadTimeout || 1000 * 20;\n  options.endpoint = options.endpoint || \"https://engine.montiapm.com\";\n  options.clientEngineSyncDelay = options.clientEngineSyncDelay || 10000;\n  options.thresholds = options.thresholds || {};\n  options.isHostNameSet = !!options.hostname;\n  options.hostname = options.hostname || hostname;\n  options.proxy = options.proxy || null;\n  options.recordIPAddress = options.recordIPAddress || 'full';\n  options.eventStackTrace = options.eventStackTrace || false;\n\n  if(options.documentSizeCacheSize) {\n    Kadira.docSzCache = new DocSzCache(options.documentSizeCacheSize, 10);\n  }\n\n  // remove trailing slash from endpoint url (if any)\n  if(_.last(options.endpoint) === '/') {\n    options.endpoint = options.endpoint.substr(0, options.endpoint.length - 1);\n  }\n\n  // error tracking is enabled by default\n  if(options.enableErrorTracking === undefined) {\n    options.enableErrorTracking = true;\n  }\n\n  // uploading sourcemaps is enabled by default in production\n  if (options.uploadSourceMaps === undefined && Meteor.isProduction) {\n    options.uploadSourceMaps = true;\n  }\n\n  Kadira.options = options;\n  Kadira.options.authHeaders = {\n    'KADIRA-APP-ID': Kadira.options.appId,\n    'KADIRA-APP-SECRET': Kadira.options.appSecret\n  };\n\n  if (appId && appSecret) {\n    options.appId = options.appId.trim();\n    options.appSecret = options.appSecret.trim();\n\n    Kadira.coreApi = new KadiraCore({\n      appId: options.appId,\n      appSecret: options.appSecret,\n      endpoint: options.endpoint,\n      hostname: options.hostname,\n      agentVersion: packageMap['montiapm:agent'] || '<unknown>'\n    });\n\n    Kadira.coreApi._checkAuth()\n      .then(function () {\n        logger('connected to app: ', appId);\n        console.log('Monti APM: Successfully connected');\n        Kadira._sendAppStats();\n        Kadira._schedulePayloadSend();\n      })\n      .catch(function (err) {\n        if (err.message === \"Unauthorized\") {\n          console.log('Monti APM: authentication failed - check your appId & appSecret')\n        } else {\n          console.log('Monti APM: unable to connect. ' + err.message);\n        }\n      });\n  } else {\n    throw new Error('Monti APM: required appId and appSecret');\n  }\n\n  Kadira.syncedDate = new Ntp(options.endpoint);\n  Kadira.syncedDate.sync();\n  Kadira.models.error = new ErrorModel(appId);\n\n  // handle pre-added filters\n  var addFilterFn = Kadira.models.error.addFilter.bind(Kadira.models.error);\n  Kadira.errors.forEach(addFilterFn);\n  Kadira.errors = Kadira.models.error;\n\n  // setting runtime info, which will be sent to kadira\n  __meteor_runtime_config__.kadira = {\n    appId: appId,\n    endpoint: options.endpoint,\n    clientEngineSyncDelay: options.clientEngineSyncDelay,\n    recordIPAddress: options.recordIPAddress,\n  };\n\n  if(options.enableErrorTracking) {\n    Kadira.enableErrorTracking();\n  } else {\n    Kadira.disableErrorTracking();\n  }\n\n  // start tracking errors\n  Meteor.startup(function () {\n    TrackUncaughtExceptions();\n    TrackUnhandledRejections();\n    TrackMeteorDebug();\n  })\n\n  Meteor.publish(null, function () {\n    var options = __meteor_runtime_config__.kadira;\n    this.added('kadira_settings', Random.id(), options);\n    this.ready();\n  });\n\n  // notify we've connected\n  Kadira.connected = true;\n};\n\n//track how many times we've sent the data (once per minute)\nKadira._buildPayload = function () {\n  var payload = {host: Kadira.options.hostname, clientVersions: getClientVersions()};\n  var buildDetailedInfo = Kadira._isDetailedInfo();\n  _.extend(payload, Kadira.models.methods.buildPayload(buildDetailedInfo));\n  _.extend(payload, Kadira.models.pubsub.buildPayload(buildDetailedInfo));\n  _.extend(payload, Kadira.models.system.buildPayload());\n  _.extend(payload, Kadira.models.http.buildPayload());\n\n  if(Kadira.options.enableErrorTracking) {\n    _.extend(payload, Kadira.models.error.buildPayload());\n  }\n\n  return payload;\n}\n\nKadira._countDataSent = 0;\nKadira._detailInfoSentInterval = Math.ceil((1000*60) / Kadira.options.payloadTimeout);\nKadira._isDetailedInfo = function () {\n  return (Kadira._countDataSent++ % Kadira._detailInfoSentInterval) == 0;\n}\n\nKadira._sendAppStats = function () {\n  var appStats = {};\n  appStats.release = Meteor.release;\n  appStats.protocolVersion = '1.0.0';\n  appStats.packageVersions = [];\n  appStats.clientVersions = getClientVersions();\n\n  _.each(Package, function (v, name) {\n    appStats.packageVersions.push({\n      name: name,\n      version: packageMap[name] || null\n    });\n  });\n\n  Kadira.coreApi.sendData({\n    startTime: new Date(),\n    appStats: appStats\n  }).then(function(body) {\n    handleApiResponse(body);\n  }).catch(function(err) {\n    console.error('Monti APM Error on sending appStats:', err.message);\n  });\n}\n\nKadira._schedulePayloadSend = function () {\n  setTimeout(function () {\n    Kadira._schedulePayloadSend();\n    Kadira._sendPayload();\n  }, Kadira.options.payloadTimeout);\n}\n\nKadira._sendPayload = function () {\n  new Fibers(function() {\n    var payload = Kadira._buildPayload();\n    Kadira.coreApi.sendData(payload)\n    .then(function (body) {\n      handleApiResponse(body);\n    })\n    .catch(function(err) {\n      console.log('Monti APM Error:', err.message);\n    });\n  }).run();\n}\n\n// this return the __kadiraInfo from the current Fiber by default\n// if called with 2nd argument as true, it will get the kadira info from\n// Meteor.EnvironmentVariable\n//\n// WARNNING: returned info object is the reference object.\n//  Changing it might cause issues when building traces. So use with care\nKadira._getInfo = function(currentFiber, useEnvironmentVariable) {\n  currentFiber = currentFiber || Fibers.current;\n  if(currentFiber) {\n    if(useEnvironmentVariable) {\n      return Kadira.env.kadiraInfo.get();\n    }\n    return currentFiber.__kadiraInfo;\n  }\n};\n\n// this does not clone the info object. So, use with care\nKadira._setInfo = function(info) {\n  Fibers.current.__kadiraInfo = info;\n};\n\nKadira.startContinuousProfiling = function () {\n  MontiProfiler.startContinuous(function onProfile({ profile, startTime, endTime }) {\n    if (!Kadira.connected) {\n      return;\n    }\n\n    Kadira.coreApi.sendData({ profiles: [{profile, startTime, endTime }]})\n      .catch(e => console.log('Monti: err sending cpu profile', e));\n  });\n}\n\nKadira.enableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = true;\n  Kadira.options.enableErrorTracking = true;\n};\n\nKadira.disableErrorTracking = function () {\n  __meteor_runtime_config__.kadira.enableErrorTracking = false;\n  Kadira.options.enableErrorTracking = false;\n};\n\nKadira.trackError = function (type, message, options) {\n  if(Kadira.options.enableErrorTracking && type && message) {\n    options = options || {};\n    options.subType = options.subType || 'server';\n    options.stacks = options.stacks || '';\n    var error = {message: message, stack: options.stacks};\n    var trace = {\n      type: type,\n      subType: options.subType,\n      name: message,\n      errored: true,\n      at: Kadira.syncedDate.getTime(),\n      events: [['start', 0, {}], ['error', 0, {error: error}]],\n      metrics: {total: 0}\n    };\n    Kadira.models.error.trackError(error, trace);\n  }\n}\n\nKadira.ignoreErrorTracking = function (err) {\n  err._skipKadira = true;\n}\n\nKadira.startEvent = function (name, data = {}) {\n  var kadiraInfo = Kadira._getInfo();\n  if(kadiraInfo) {\n    return Kadira.tracer.event(kadiraInfo.trace, 'custom', data, { name });\n  }\n\n  return false\n}\n\nKadira.endEvent = function (event, data) {\n  var kadiraInfo = Kadira._getInfo();\n\n  // The event could be false if it could not be started.\n  // Handle it here instead of requiring the app to.\n  if (kadiraInfo && event) {\n    Kadira.tracer.eventEnd(kadiraInfo.trace, event, data);\n  }\n}\n","var Fiber = Npm.require('fibers');\n\nwrapServer = function(serverProto) {\n  var originalHandleConnect = serverProto._handleConnect\n  serverProto._handleConnect = function(socket, msg) {\n    originalHandleConnect.call(this, socket, msg);\n    var session = socket._meteorSession;\n    // sometimes it is possible for _meteorSession to be undefined\n    // one such reason would be if DDP versions are not matching\n    // if then, we should not process it\n    if(!session) {\n      return;\n    }\n\n    Kadira.EventBus.emit('system', 'createSession', msg, socket._meteorSession);\n\n    if(Kadira.connected) {\n      Kadira.models.system.handleSessionActivity(msg, socket._meteorSession);\n    }\n  };\n};\n","import { MeteorDebugIgnore } from \"./error\";\n\nconst MAX_PARAMS_LENGTH = 4000\n\nwrapSession = function(sessionProto) {\n  var originalProcessMessage = sessionProto.processMessage;\n  sessionProto.processMessage = function(msg) {\n    if(true) {\n      var kadiraInfo = {\n        session: this.id,\n        userId: this.userId\n      };\n\n      if(msg.msg == 'method' || msg.msg == 'sub') {\n        kadiraInfo.trace = Kadira.tracer.start(this, msg);\n        Kadira.waitTimeBuilder.register(this, msg.id);\n\n        let params = Kadira.tracer._applyObjectFilters(msg.params || []);\n        // use JSON instead of EJSON to save the CPU\n        let stringifiedParams = JSON.stringify(params);\n\n        // The params could be several mb or larger.\n        // Truncate if it is large\n        if (stringifiedParams.length > MAX_PARAMS_LENGTH) {\n          stringifiedParams = `Monti APM: params are too big. First ${MAX_PARAMS_LENGTH} characters: ${stringifiedParams.slice(0, MAX_PARAMS_LENGTH)}`;\n        }\n\n        var startData = { userId: this.userId, params: stringifiedParams };\n        Kadira.tracer.event(kadiraInfo.trace, 'start', startData);\n        var waitEventId = Kadira.tracer.event(kadiraInfo.trace, 'wait', {}, kadiraInfo);\n        msg._waitEventId = waitEventId;\n        msg.__kadiraInfo = kadiraInfo;\n\n        if(msg.msg == 'sub') {\n          // start tracking inside processMessage allows us to indicate\n          // wait time as well\n          Kadira.EventBus.emit('pubsub', 'subReceived', this, msg);\n          Kadira.models.pubsub._trackSub(this, msg);\n        }\n      }\n\n      // Update session last active time\n      Kadira.EventBus.emit('system', 'ddpMessageReceived', this, msg);\n      Kadira.models.system.handleSessionActivity(msg, this);\n    }\n\n    return originalProcessMessage.call(this, msg);\n  };\n\n  // adding the method context to the current fiber\n  var originalMethodHandler = sessionProto.protocol_handlers.method;\n  sessionProto.protocol_handlers.method = function(msg, unblock) {\n    var self = this;\n    //add context\n    var kadiraInfo = msg.__kadiraInfo;\n    if(kadiraInfo) {\n      Kadira._setInfo(kadiraInfo);\n\n      // end wait event\n      var waitList = Kadira.waitTimeBuilder.build(this, msg.id);\n      Kadira.tracer.eventEnd(kadiraInfo.trace, msg._waitEventId, {waitOn: waitList});\n\n      unblock = Kadira.waitTimeBuilder.trackWaitTime(this, msg, unblock);\n      var response = Kadira.env.kadiraInfo.withValue(kadiraInfo, function () {\n        return originalMethodHandler.call(self, msg, unblock);\n      });\n      unblock();\n    } else {\n      var response = originalMethodHandler.call(self, msg, unblock);\n    }\n\n    return response;\n  };\n\n  //to capture the currently processing message\n  var orginalSubHandler = sessionProto.protocol_handlers.sub;\n  sessionProto.protocol_handlers.sub = function(msg, unblock) {\n    var self = this;\n    //add context\n    var kadiraInfo = msg.__kadiraInfo;\n    if(kadiraInfo) {\n      Kadira._setInfo(kadiraInfo);\n\n      // end wait event\n      var waitList = Kadira.waitTimeBuilder.build(this, msg.id);\n      Kadira.tracer.eventEnd(kadiraInfo.trace, msg._waitEventId, {waitOn: waitList});\n\n      unblock = Kadira.waitTimeBuilder.trackWaitTime(this, msg, unblock);\n      var response = Kadira.env.kadiraInfo.withValue(kadiraInfo, function () {\n        return orginalSubHandler.call(self, msg, unblock);\n      });\n      unblock();\n    } else {\n      var response = orginalSubHandler.call(self, msg, unblock);\n    }\n\n    return response;\n  };\n\n  //to capture the currently processing message\n  var orginalUnSubHandler = sessionProto.protocol_handlers.unsub;\n  sessionProto.protocol_handlers.unsub = function(msg, unblock) {\n    unblock = Kadira.waitTimeBuilder.trackWaitTime(this, msg, unblock);\n    var response = orginalUnSubHandler.call(this, msg, unblock);\n    unblock();\n    return response;\n  };\n\n  //track method ending (to get the result of error)\n  var originalSend = sessionProto.send;\n  sessionProto.send = function(msg) {\n    if(msg.msg == 'result') {\n      var kadiraInfo = Kadira._getInfo();\n      if(kadiraInfo) {\n        if(msg.error) {\n          var error = _.pick(msg.error, ['message', 'stack', 'details']);\n\n          // pick the error from the wrapped method handler\n          if(kadiraInfo && kadiraInfo.currentError) {\n            // the error stack is wrapped so Meteor._debug can identify\n            // this as a method error.\n            error = _.pick(kadiraInfo.currentError, ['message', 'stack', 'details']);\n            // see wrapMethodHanderForErrors() method def for more info\n            if(error.stack && error.stack.stack) {\n              error.stack = error.stack.stack;\n            }\n          }\n\n          Kadira.tracer.endLastEvent(kadiraInfo.trace);\n          Kadira.tracer.event(kadiraInfo.trace, 'error', {error: error});\n        } else {\n          Kadira.tracer.endLastEvent(kadiraInfo.trace);\n          Kadira.tracer.event(kadiraInfo.trace, 'complete');\n        }\n\n        //processing the message\n        var trace = Kadira.tracer.buildTrace(kadiraInfo.trace);\n        Kadira.EventBus.emit('method', 'methodCompleted', trace, this);\n        Kadira.models.methods.processMethod(trace);\n\n        // error may or may not exist and error tracking can be disabled\n        if(error && Kadira.options.enableErrorTracking) {\n          Kadira.models.error.trackError(error, trace);\n        }\n\n        //clean and make sure, fiber is clean\n        //not sure we need to do this, but a preventive measure\n        Kadira._setInfo(null);\n      }\n    }\n\n    return originalSend.call(this, msg);\n  };\n};\n\n// wrap existing method handlers for capturing errors\n_.each(Meteor.server.method_handlers, function(handler, name) {\n  wrapMethodHanderForErrors(name, handler, Meteor.server.method_handlers);\n});\n\n// wrap future method handlers for capturing errors\nvar originalMeteorMethods = Meteor.methods;\nMeteor.methods = function(methodMap) {\n  _.each(methodMap, function(handler, name) {\n    wrapMethodHanderForErrors(name, handler, methodMap);\n  });\n  originalMeteorMethods(methodMap);\n};\n\n\nfunction wrapMethodHanderForErrors(name, originalHandler, methodMap) {\n  methodMap[name] = function() {\n    try{\n      return originalHandler.apply(this, arguments);\n    } catch(ex) {\n      if(ex && Kadira._getInfo()) {\n        // sometimes error may be just an string or a primitive\n        // in that case, we need to make it a psuedo error\n        if(typeof ex !== 'object') {\n          ex = {message: ex, stack: ex};\n        }\n        // Now we are marking this error to get tracked via methods\n        // But, this also triggers a Meteor.debug call and\n        // it only gets the stack\n        // We also track Meteor.debug errors and want to stop\n        // tracking this error. That's why we do this\n        // See Meteor.debug error tracking code for more\n        // If error tracking is disabled, we do not modify the stack since\n        // it would be shown as an object in the logs\n        if (Kadira.options.enableErrorTracking) {\n          ex.stack = {stack: ex.stack, source: 'method', [MeteorDebugIgnore]: true};\n          Kadira._getInfo().currentError = ex;\n        }\n      }\n      throw ex;\n    }\n  }\n}\n","import { MeteorDebugIgnore } from \"./error\";\n\nwrapSubscription = function(subscriptionProto) {\n  // If the ready event runs outside the Fiber, Kadira._getInfo() doesn't work.\n  // we need some other way to store kadiraInfo so we can use it at ready hijack.\n  var originalRunHandler = subscriptionProto._runHandler;\n  subscriptionProto._runHandler = function() {\n    var kadiraInfo = Kadira._getInfo();\n    if (kadiraInfo) {\n      this.__kadiraInfo = kadiraInfo;\n    };\n    originalRunHandler.call(this);\n  }\n\n  var originalReady = subscriptionProto.ready;\n  subscriptionProto.ready = function() {\n    // meteor has a field called `_ready` which tracks this\n    // but we need to make it future proof\n    if(!this._apmReadyTracked) {\n      var kadiraInfo = Kadira._getInfo() || this.__kadiraInfo;\n      delete this.__kadiraInfo;\n      //sometime .ready can be called in the context of the method\n      //then we have some problems, that's why we are checking this\n      //eg:- Accounts.createUser\n      // Also, when the subscription is created by fast render, _subscriptionId and\n      // the trace.id are both undefined but we don't want to complete the HTTP trace here\n      if(kadiraInfo && this._subscriptionId && this._subscriptionId == kadiraInfo.trace.id) {\n        Kadira.tracer.endLastEvent(kadiraInfo.trace);\n        Kadira.tracer.event(kadiraInfo.trace, 'complete');\n        var trace = Kadira.tracer.buildTrace(kadiraInfo.trace);\n      }\n\n      Kadira.EventBus.emit('pubsub', 'subCompleted', trace, this._session, this);\n      Kadira.models.pubsub._trackReady(this._session, this, trace);\n      this._apmReadyTracked = true;\n    }\n\n    // we still pass the control to the original implementation\n    // since multiple ready calls are handled by itself\n    originalReady.call(this);\n  };\n\n  var originalError = subscriptionProto.error;\n  subscriptionProto.error = function(err) {\n    if (typeof err === 'string') {\n      err = { message: err };\n    }\n\n    var kadiraInfo = Kadira._getInfo();\n\n    if (kadiraInfo && this._subscriptionId && this._subscriptionId == kadiraInfo.trace.id) {\n      Kadira.tracer.endLastEvent(kadiraInfo.trace);\n\n      var errorForApm = _.pick(err, 'message', 'stack');\n      Kadira.tracer.event(kadiraInfo.trace, 'error', {error: errorForApm});\n      var trace = Kadira.tracer.buildTrace(kadiraInfo.trace);\n\n      Kadira.models.pubsub._trackError(this._session, this, trace);\n\n      // error tracking can be disabled and if there is a trace\n      // trace should be available all the time, but it won't\n      // if something wrong happened on the trace building\n      if(Kadira.options.enableErrorTracking && trace) {\n        Kadira.models.error.trackError(err, trace);\n      }\n    }\n\n    // wrap error stack so Meteor._debug can identify and ignore it\n    // it is not wrapped when error tracking is disabled since it\n    // would be shown as an object in the logs\n    if (Kadira.options.enableErrorTracking) {\n      err.stack = {stack: err.stack, source: 'subscription', [MeteorDebugIgnore]: true};\n    }\n    originalError.call(this, err);\n  };\n\n  var originalDeactivate = subscriptionProto._deactivate;\n  subscriptionProto._deactivate = function() {\n    Kadira.EventBus.emit('pubsub', 'subDeactivated', this._session, this);\n    Kadira.models.pubsub._trackUnsub(this._session, this);\n    originalDeactivate.call(this);\n  };\n\n  //adding the currenSub env variable\n  ['added', 'changed', 'removed'].forEach(function(funcName) {\n    var originalFunc = subscriptionProto[funcName];\n    subscriptionProto[funcName] = function(collectionName, id, fields) {\n      var self = this;\n\n      // we need to run this code in a fiber and that's how we track\n      // subscription info. May be we can figure out, some other way to do this\n      // We use this currently to get the publication info when tracking message\n      // sizes at wrap_ddp_stringify.js\n      Kadira.env.currentSub = self;\n      var res = originalFunc.call(self, collectionName, id, fields);\n      Kadira.env.currentSub = null;\n\n      return res;\n    };\n  });\n};\n","wrapOplogObserveDriver = function(proto) {\n  // Track the polled documents. This is reflect to the RAM size and\n  // for the CPU usage directly\n  var originalPublishNewResults = proto._publishNewResults;\n  proto._publishNewResults = function(newResults, newBuffer) {\n    var coll = this._cursorDescription.collectionName;\n    var query = this._cursorDescription.selector;\n    var opts = this._cursorDescription.options;\n    var docSize = Kadira.docSzCache.getSize(coll, query, opts, newResults);\n    var docSize = Kadira.docSzCache.getSize(coll, query, opts, newBuffer);\n    var count = newResults.size() + newBuffer.size();\n    if(this._ownerInfo) {\n      Kadira.models.pubsub.trackPolledDocuments(this._ownerInfo, count);\n      Kadira.models.pubsub.trackDocSize(this._ownerInfo.name, \"polledFetches\", docSize*count);\n    } else {\n      this._polledDocuments = count;\n      this._docSize = {\n        polledFetches: docSize*count\n      }\n    }\n    return originalPublishNewResults.call(this, newResults, newBuffer);\n  };\n\n  var originalHandleOplogEntryQuerying = proto._handleOplogEntryQuerying;\n  proto._handleOplogEntryQuerying = function(op) {\n    Kadira.models.pubsub.trackDocumentChanges(this._ownerInfo, op);\n    return originalHandleOplogEntryQuerying.call(this, op);\n  };\n\n  var originalHandleOplogEntrySteadyOrFetching = proto._handleOplogEntrySteadyOrFetching;\n  proto._handleOplogEntrySteadyOrFetching = function(op) {\n    Kadira.models.pubsub.trackDocumentChanges(this._ownerInfo, op);\n    return originalHandleOplogEntrySteadyOrFetching.call(this, op);\n  };\n\n  // track live updates\n  ['_addPublished', '_removePublished', '_changePublished'].forEach(function(fnName) {\n    var originalFn = proto[fnName];\n    proto[fnName] = function(a, b, c) {\n      if(this._ownerInfo) {\n        Kadira.models.pubsub.trackLiveUpdates(this._ownerInfo, fnName, 1);\n\n        if(fnName === \"_addPublished\") {\n          var coll = this._cursorDescription.collectionName;\n          var query = this._cursorDescription.selector;\n          var opts = this._cursorDescription.options;\n          var docSize = Kadira.docSzCache.getSize(coll, query, opts, [b]);\n\n          Kadira.models.pubsub.trackDocSize(this._ownerInfo.name, \"liveFetches\", docSize);\n        }\n      } else {\n        // If there is no ownerInfo, that means this is the initial adds\n        if(!this._liveUpdatesCounts) {\n          this._liveUpdatesCounts = {\n            _initialAdds: 0\n          };\n        }\n\n        this._liveUpdatesCounts._initialAdds++;\n\n        if(fnName === \"_addPublished\") {\n          if(!this._docSize) {\n            this._docSize = {\n              initialFetches: 0\n            };\n          }\n\n          if(!this._docSize.initialFetches) {\n            this._docSize.initialFetches = 0;\n          }\n\n          var coll = this._cursorDescription.collectionName;\n          var query = this._cursorDescription.selector;\n          var opts = this._cursorDescription.options;\n          var docSize = Kadira.docSzCache.getSize(coll, query, opts, [b]);\n\n          this._docSize.initialFetches += docSize;\n        }\n      }\n\n      return originalFn.call(this, a, b, c);\n    };\n  });\n\n  var originalStop = proto.stop;\n  proto.stop = function() {\n    if(this._ownerInfo && this._ownerInfo.type === 'sub') {\n      Kadira.EventBus.emit('pubsub', 'observerDeleted', this._ownerInfo);\n      Kadira.models.pubsub.trackDeletedObserver(this._ownerInfo);\n    }\n\n    return originalStop.call(this);\n  };\n};\n\nwrapPollingObserveDriver = function(proto) {\n  var originalPollMongo = proto._pollMongo;\n  proto._pollMongo = function() {\n    var start = Date.now();\n    originalPollMongo.call(this);\n\n    // Current result is stored in the following variable.\n    // So, we can use that\n    // Sometimes, it's possible to get size as undefined.\n    // May be something with different version. We don't need to worry about\n    // this now\n    var count = 0;\n    var docSize = 0;\n\n    if(this._results && this._results.size) {\n      count = this._results.size() || 0;\n\n      var coll = this._cursorDescription.collectionName;\n      var query = this._cursorDescription.selector;\n      var opts = this._cursorDescription.options;\n\n      docSize = Kadira.docSzCache.getSize(coll, query, opts, this._results._map)*count;\n    }\n\n    if(this._ownerInfo) {\n      Kadira.models.pubsub.trackPolledDocuments(this._ownerInfo, count);\n      Kadira.models.pubsub.trackDocSize(this._ownerInfo.name, \"polledFetches\", docSize);\n    } else {\n      this._polledDocuments = count;\n      this._polledDocSize = docSize;\n    }\n  };\n\n  var originalStop = proto.stop;\n  proto.stop = function() {\n    if(this._ownerInfo && this._ownerInfo.type === 'sub') {\n      Kadira.EventBus.emit('pubsub', 'observerDeleted', this._ownerInfo);\n      Kadira.models.pubsub.trackDeletedObserver(this._ownerInfo);\n    }\n\n    return originalStop.call(this);\n  };\n};\n\nwrapMultiplexer = function(proto) {\n  var originalInitalAdd = proto.addHandleAndSendInitialAdds;\n   proto.addHandleAndSendInitialAdds = function(handle) {\n    if(!this._firstInitialAddTime) {\n      this._firstInitialAddTime = Date.now();\n    }\n\n    handle._wasMultiplexerReady = this._ready();\n    handle._queueLength = this._queue._taskHandles.length;\n\n    if(!handle._wasMultiplexerReady) {\n      handle._elapsedPollingTime = Date.now() - this._firstInitialAddTime;\n    }\n    return originalInitalAdd.call(this, handle);\n  };\n};\n\nwrapForCountingObservers = function() {\n  // to count observers\n  var mongoConnectionProto = MeteorX.MongoConnection.prototype;\n  var originalObserveChanges = mongoConnectionProto._observeChanges;\n  mongoConnectionProto._observeChanges = function(cursorDescription, ordered, callbacks) {\n    var ret = originalObserveChanges.call(this, cursorDescription, ordered, callbacks);\n    // get the Kadira Info via the Meteor.EnvironmentalVariable\n    var kadiraInfo = Kadira._getInfo(null, true);\n\n    if(kadiraInfo && ret._multiplexer) {\n      if(!ret._multiplexer.__kadiraTracked) {\n        // new multiplexer\n        ret._multiplexer.__kadiraTracked = true;\n        Kadira.EventBus.emit('pubsub', 'newSubHandleCreated', kadiraInfo.trace);\n        Kadira.models.pubsub.incrementHandleCount(kadiraInfo.trace, false);\n        if(kadiraInfo.trace.type == 'sub') {\n          var ownerInfo = {\n            type: kadiraInfo.trace.type,\n            name: kadiraInfo.trace.name,\n            startTime: (new Date()).getTime()\n          };\n\n          var observerDriver = ret._multiplexer._observeDriver;\n          observerDriver._ownerInfo = ownerInfo;\n          Kadira.EventBus.emit('pubsub', 'observerCreated', ownerInfo);\n          Kadira.models.pubsub.trackCreatedObserver(ownerInfo);\n\n          // We need to send initially polled documents if there are\n          if(observerDriver._polledDocuments) {\n            Kadira.models.pubsub.trackPolledDocuments(ownerInfo, observerDriver._polledDocuments);\n            observerDriver._polledDocuments = 0;\n          }\n\n          // We need to send initially polled documents if there are\n          if(observerDriver._polledDocSize) {\n            Kadira.models.pubsub.trackDocSize(ownerInfo.name, \"polledFetches\", observerDriver._polledDocSize);\n            observerDriver._polledDocSize = 0;\n          }\n\n          // Process _liveUpdatesCounts\n          _.each(observerDriver._liveUpdatesCounts, function(count, key) {\n            Kadira.models.pubsub.trackLiveUpdates(ownerInfo, key, count);\n          });\n\n          // Process docSize\n          _.each(observerDriver._docSize, function(count, key) {\n            Kadira.models.pubsub.trackDocSize(ownerInfo.name, key, count);\n          });\n        }\n      } else {\n        Kadira.EventBus.emit('pubsub', 'cachedSubHandleCreated', kadiraInfo.trace);\n        Kadira.models.pubsub.incrementHandleCount(kadiraInfo.trace, true);\n      }\n    }\n\n    return ret;\n  }\n};","wrapStringifyDDP = function() {\n  var originalStringifyDDP = DDPCommon.stringifyDDP;\n\n  DDPCommon.stringifyDDP = function(msg) {\n    var msgString = originalStringifyDDP(msg);\n    var msgSize = Buffer.byteLength(msgString, 'utf8');\n\n    var kadiraInfo = Kadira._getInfo(null, true);\n\n    if(kadiraInfo && !Kadira.env.currentSub) {\n      if(kadiraInfo.trace.type === 'method') {\n        Kadira.models.methods.trackMsgSize(kadiraInfo.trace.name, msgSize);\n      }\n\n      return msgString;\n    }\n\n    // 'currentSub' is set when we wrap Subscription object and override\n    // handlers for 'added', 'changed', 'removed' events. (see lib/hijack/wrap_subscription.js)\n    if(Kadira.env.currentSub) {\n      if(Kadira.env.currentSub.__kadiraInfo){\n        Kadira.models.pubsub.trackMsgSize(Kadira.env.currentSub._name, \"initialSent\", msgSize);\n        return msgString;\n      }\n      Kadira.models.pubsub.trackMsgSize(Kadira.env.currentSub._name, \"liveSent\", msgSize);\n      return msgString;\n    }\n\n    Kadira.models.methods.trackMsgSize(\"<not-a-method-or-a-pub>\", msgSize);\n    return msgString;\n  }\n}\n","import { wrapWebApp } from \"./wrap_webapp\";\nimport { wrapFastRender } from \"./fast_render\";\nimport { wrapFs } from \"./fs\";\nimport { wrapPicker } from \"./picker\";\nimport { wrapRouters } from './wrap_routers';\n\nvar logger = Npm.require('debug')('kadira:hijack:instrument');\n\nvar instrumented = false;\nKadira._startInstrumenting = function(callback) {\n  if(instrumented) {\n    callback();\n    return;\n  }\n\n  instrumented = true;\n  wrapStringifyDDP();\n  wrapWebApp();\n  wrapFastRender();\n  wrapPicker();\n  wrapFs();\n  wrapRouters();\n\n  MeteorX.onReady(function() {\n    //instrumenting session\n    wrapServer(MeteorX.Server.prototype);\n    wrapSession(MeteorX.Session.prototype);\n    wrapSubscription(MeteorX.Subscription.prototype);\n\n    if(MeteorX.MongoOplogDriver) {\n      wrapOplogObserveDriver(MeteorX.MongoOplogDriver.prototype);\n    }\n\n    if(MeteorX.MongoPollingDriver) {\n      wrapPollingObserveDriver(MeteorX.MongoPollingDriver.prototype);\n    }\n\n    if(MeteorX.Multiplexer) {\n      wrapMultiplexer(MeteorX.Multiplexer.prototype);\n    }\n\n    wrapForCountingObservers();\n    hijackDBOps();\n\n    setLabels();\n    callback();\n  });\n};\n\n// We need to instrument this rightaway and it's okay\n// One reason for this is to call `setLables()` function\n// Otherwise, CPU profile can't see all our custom labeling\nKadira._startInstrumenting(function() {\n  console.log('Monti APM: completed instrumenting the app')\n});\n","// This hijack is important to make sure, collections created before\n// we hijack dbOps, even gets tracked.\n//  Meteor does not simply expose MongoConnection object to the client\n//  It picks methods which are necessory and make a binded object and\n//  assigned to the Mongo.Collection\n//  so, even we updated prototype, we can't track those collections\n//  but, this will fix it.\nvar originalOpen = MongoInternals.RemoteCollectionDriver.prototype.open;\nMongoInternals.RemoteCollectionDriver.prototype.open = function open(name) {\n  var self = this;\n  var ret = originalOpen.call(self, name);\n\n  _.each(ret, function(fn, m) {\n    // make sure, it's in the actual mongo connection object\n    // meteorhacks:mongo-collection-utils package add some arbitary methods\n    // which does not exist in the mongo connection\n    if(self.mongo[m]) {\n      ret[m] = function() {\n        Array.prototype.unshift.call(arguments, name);\n        return OptimizedApply(self.mongo, self.mongo[m], arguments);\n      };\n    }\n  });\n\n  return ret;\n};\n\n// TODO: this should be added to Meteorx\nfunction getSyncronousCursor() {\n  const MongoColl = typeof Mongo !== \"undefined\" ? Mongo.Collection : Meteor.Collection;\n  const coll = new MongoColl(\"__dummy_coll_\" + Random.id());\n  // we need to wait until the db is connected with meteor. findOne does that\n  coll.findOne();\n  \n  const cursor = coll.find();\n  cursor.fetch();\n  return cursor._synchronousCursor.constructor\n}\n\nhijackDBOps = function hijackDBOps() {\n  var mongoConnectionProto = MeteorX.MongoConnection.prototype;\n  //findOne is handled by find - so no need to track it\n  //upsert is handles by update\n  ['find', 'update', 'remove', 'insert', '_ensureIndex', '_dropIndex'].forEach(function(func) {\n    var originalFunc = mongoConnectionProto[func];\n    mongoConnectionProto[func] = function(collName, selector, mod, options) {\n      var payload = {\n        coll: collName,\n        func: func,\n      };\n\n      if(func == 'insert') {\n        //add nothing more to the payload\n      } else if(func == '_ensureIndex' || func == '_dropIndex') {\n        //add index\n        payload.index = JSON.stringify(selector);\n      } else if(func == 'update' && options && options.upsert) {\n        payload.func = 'upsert';\n        payload.selector = JSON.stringify(selector);\n      } else {\n        //all the other functions have selectors\n        payload.selector = JSON.stringify(selector);\n      }\n\n      var kadiraInfo = Kadira._getInfo();\n      if(kadiraInfo) {\n        var eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n      }\n\n      //this cause V8 to avoid any performance optimizations, but this is must to use\n      //otherwise, if the error adds try catch block our logs get messy and didn't work\n      //see: issue #6\n      try{\n        var ret = originalFunc.apply(this, arguments);\n        //handling functions which can be triggered with an asyncCallback\n        var endOptions = {};\n\n        if(HaveAsyncCallback(arguments)) {\n          endOptions.async = true;\n        }\n\n        if(func == 'update') {\n          // upsert only returns an object when called `upsert` directly\n          // otherwise it only act an update command\n          if(options && options.upsert && typeof ret == 'object') {\n            endOptions.updatedDocs = ret.numberAffected;\n            endOptions.insertedId = ret.insertedId;\n          } else {\n            endOptions.updatedDocs = ret;\n          }\n        } else if(func == 'remove') {\n          endOptions.removedDocs = ret;\n        }\n\n        if(eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endOptions);\n        }\n      } catch(ex) {\n        if(eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {err: ex.message});\n        }\n        throw ex;\n      }\n\n      return ret;\n    };\n  });\n\n  var cursorProto = MeteorX.MongoCursor.prototype;\n  ['forEach', 'map', 'fetch', 'count', 'observeChanges', 'observe'].forEach(function(type) {\n    var originalFunc = cursorProto[type];\n    cursorProto[type] = function() {\n      var cursorDescription = this._cursorDescription;\n      var payload = Object.assign(Object.create(null), {\n        coll: cursorDescription.collectionName,\n        selector: JSON.stringify(cursorDescription.selector),\n        func: type,\n        cursor: true\n      });\n\n      if(cursorDescription.options) {\n        var cursorOptions = _.pick(cursorDescription.options, ['fields', 'sort', 'limit']);\n        for(var field in cursorOptions) {\n          var value = cursorOptions[field]\n          if(typeof value == 'object') {\n            value = JSON.stringify(value);\n          }\n          payload[field] = value;\n        }\n      }\n\n      var kadiraInfo = Kadira._getInfo();\n      var previousTrackNextObject;\n      if(kadiraInfo) {\n        var eventId = Kadira.tracer.event(kadiraInfo.trace, 'db', payload);\n\n        previousTrackNextObject = kadiraInfo.trackNextObject\n        if (type === 'forEach' || type === 'map') {\n          kadiraInfo.trackNextObject = true;\n        }\n      }\n\n      try{\n        var ret = originalFunc.apply(this, arguments);\n\n        var endData = {};\n        if(type == 'observeChanges' || type == 'observe') {\n          var observerDriver;\n          endData.oplog = false;\n          // get data written by the multiplexer\n          endData.wasMultiplexerReady = ret._wasMultiplexerReady;\n          endData.queueLength = ret._queueLength;\n          endData.elapsedPollingTime = ret._elapsedPollingTime;\n\n          if(ret._multiplexer) {\n            // older meteor versions done not have an _multiplexer value\n            observerDriver = ret._multiplexer._observeDriver;\n            if(observerDriver) {\n              observerDriver = ret._multiplexer._observeDriver;\n              var observerDriverClass = observerDriver.constructor;\n              var usesOplog = typeof observerDriverClass.cursorSupported == 'function';\n              endData.oplog = usesOplog;\n              var size = 0;\n              ret._multiplexer._cache.docs.forEach(function() {size++});\n              endData.noOfCachedDocs = size;\n\n              // if multiplexerWasNotReady, we need to get the time spend for the polling\n              if(!ret._wasMultiplexerReady) {\n                endData.initialPollingTime = observerDriver._lastPollTime;\n              }\n            }\n          }\n\n          if(!endData.oplog) {\n            // let's try to find the reason\n            var reasonInfo = Kadira.checkWhyNoOplog(cursorDescription, observerDriver);\n            endData.noOplogCode = reasonInfo.code;\n            endData.noOplogReason = reasonInfo.reason;\n            endData.noOplogSolution = reasonInfo.solution;\n          }\n        } else if(type == 'fetch' || type == 'map'){\n          //for other cursor operation\n\n          endData.docsFetched = ret.length;\n\n          if(type == 'fetch') {\n            var coll = cursorDescription.collectionName;\n            var query = cursorDescription.selector;\n            var opts = cursorDescription.options;\n            var docSize = Kadira.docSzCache.getSize(coll, query, opts, ret) * ret.length;\n            endData.docSize = docSize;\n\n            if(kadiraInfo) {\n              if(kadiraInfo.trace.type === 'method') {\n                Kadira.models.methods.trackDocSize(kadiraInfo.trace.name, docSize);\n              } else if(kadiraInfo.trace.type === 'sub') {\n                Kadira.models.pubsub.trackDocSize(kadiraInfo.trace.name, \"cursorFetches\", docSize);\n              }\n\n              kadiraInfo.trackNextObject = previousTrackNextObject\n            } else {\n              // Fetch with no kadira info are tracked as from a null method\n              Kadira.models.methods.trackDocSize(\"<not-a-method-or-a-pub>\", docSize);\n            }\n\n            // TODO: Add doc size tracking to `map` as well.\n          }\n        }\n\n        if(eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endData);\n        }\n        return ret;\n      } catch(ex) {\n        if(eventId) {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {err: ex.message});\n        }\n        throw ex;\n      }\n    };\n  });\n\n  const SyncronousCursor = getSyncronousCursor();\n  var origNextObject = SyncronousCursor.prototype._nextObject\n  SyncronousCursor.prototype._nextObject = function () {\n    var kadiraInfo = Kadira._getInfo();\n    var shouldTrack = kadiraInfo && kadiraInfo.trackNextObject;\n    if(shouldTrack ) {\n      var event = Kadira.tracer.event(kadiraInfo.trace, 'db', {\n        func: '_nextObject',\n        coll: this._cursorDescription.collectionName\n      });\n    }\n\n    var result = origNextObject.call(this);\n\n    if (shouldTrack) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, event);\n    }\n    return result;\n  }\n};\n","var originalCall = HTTP.call;\n\nHTTP.call = function(method, url) {\n  var kadiraInfo = Kadira._getInfo();\n  if(kadiraInfo) {\n    var eventId = Kadira.tracer.event(kadiraInfo.trace, 'http', {method: method, url: url});\n  }\n\n  try {\n    var response = originalCall.apply(this, arguments);\n\n    //if the user supplied an asynCallback, we don't have a response object and it handled asynchronously\n    //we need to track it down to prevent issues like: #3\n    var endOptions = HaveAsyncCallback(arguments)? {async: true}: {statusCode: response.statusCode};\n    if(eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, endOptions);\n    }\n    return response;\n  } catch(ex) {\n    if(eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {err: ex.message});\n    }\n    throw ex;\n  }\n};","var originalSend = Email.send;\n\nEmail.send = function(options) {\n  var kadiraInfo = Kadira._getInfo();\n  if(kadiraInfo) {\n    var data = _.pick(options, 'from', 'to', 'cc', 'bcc', 'replyTo');\n    var eventId = Kadira.tracer.event(kadiraInfo.trace, 'email', data);\n  }\n  try {\n    var ret = originalSend.call(this, options);\n    if(eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId);\n    }\n    return ret;\n  } catch(ex) {\n    if(eventId) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, eventId, {err: ex.message});\n    }\n    throw ex;\n  }\n};","var Fibers = Npm.require('fibers');\nvar EventSymbol = Symbol();\nvar StartTracked = Symbol();\n\nvar activeFibers = 0;\n\nvar originalYield = Fibers.yield;\nFibers.yield = function() {\n  var kadiraInfo = Kadira._getInfo();\n  if(kadiraInfo) {\n    var eventId = Kadira.tracer.event(kadiraInfo.trace, 'async');\n    if(eventId) {\n      // The event unique to this fiber\n      // Using a symbol since Meteor doesn't copy symbols to new fibers created\n      // for promises. This is needed so the correct event is ended when a fiber runs after being yielded.\n      Fibers.current[EventSymbol] = eventId;\n    }\n  }\n\n  return originalYield();\n};\n\nvar originalRun = Fibers.prototype.run;\nvar originalThrowInto = Fibers.prototype.throwInto;\n\nfunction ensureFiberCounted(fiber) {\n  // If fiber.started is true, and StartTracked is false\n  // then the fiber was probably initially ran before we wrapped Fibers.run\n  if (!fiber.started || !fiber[StartTracked]) {\n    activeFibers += 1;\n    fiber[StartTracked] = true;\n  }\n}\n\nFibers.prototype.run = function(val) {\n  ensureFiberCounted(this);\n\n  if(this[EventSymbol]) {\n    var kadiraInfo = Kadira._getInfo(this);\n    if(kadiraInfo) {\n      Kadira.tracer.eventEnd(kadiraInfo.trace, this[EventSymbol]);\n      this[EventSymbol] = null;\n    }\n  } else if (!this.__kadiraInfo && Fibers.current && Fibers.current.__kadiraInfo) {\n    // Copy kadiraInfo when packages or user code creates a new fiber\n    // Done by many apps and packages in connect middleware since older\n    // versions of Meteor did not do it automatically\n    this.__kadiraInfo = Fibers.current.__kadiraInfo;\n  }\n\n  let result;\n  try {\n    result = originalRun.call(this, val);\n  } finally {\n    if (!this.started) {\n      activeFibers -= 1;\n      this[StartTracked] = false;\n    }\n  }\n\n  return result;\n};\n\nFibers.prototype.throwInto = function (val) {\n  ensureFiberCounted(this);\n\n  // TODO: this should probably end the current async event since in some places\n  // Meteor calls throwInto instead of run after a fiber is yielded. For example,\n  // when a promise is awaited and rejects an error.\n\n  let result;\n  try {\n    result = originalThrowInto.call(this, val);\n  } finally {\n    if (!this.started) {\n      activeFibers -= 1;\n      this[StartTracked] = false;\n    }\n  }\n\n  return result;\n};\n\nlet activeFiberTotal = 0;\nlet activeFiberCount = 0;\nlet previousTotalCreated = 0;\n\nsetInterval(() => {\n  activeFiberTotal += activeFibers;\n  activeFiberCount += 1;\n}, 1000);\n\nexport function getFiberMetrics() {\n  return {\n    created: Fibers.fibersCreated - previousTotalCreated,\n    active: activeFiberTotal / activeFiberCount,\n    poolSize: Fibers.poolSize\n  }\n}\n\nexport function resetFiberMetrics() {\n  activeFiberTotal = 0;\n  activeFiberCount = 0;\n  previousTotalCreated = Fibers.fibersCreated;\n}\n","export const MeteorDebugIgnore = Symbol()\n\nTrackUncaughtExceptions = function () {\n  process.on('uncaughtException', function (err) {\n    // skip errors with `_skipKadira` flag\n    if(err._skipKadira) {\n      return;\n    }\n\n    // let the server crash normally if error tracking is disabled\n    if(!Kadira.options.enableErrorTracking) {\n      printErrorAndKill(err);\n    }\n\n    // looking for already tracked errors and throw them immediately\n    // throw error immediately if kadira is not ready\n    if(err._tracked || !Kadira.connected) {\n      printErrorAndKill(err);\n    }\n\n    var trace = getTrace(err, 'server-crash', 'uncaughtException');\n    Kadira.models.error.trackError(err, trace);\n    Kadira._sendPayload(function () {\n      clearTimeout(timer);\n      throwError(err);\n    });\n\n    var timer = setTimeout(function () {\n      throwError(err);\n    }, 1000*10);\n\n    function throwError(err) {\n      // sometimes error came back from a fiber.\n      // But we don't fibers to track that error for us\n      // That's why we throw the error on the nextTick\n      process.nextTick(function() {\n        // we need to mark this error where we really need to throw\n        err._tracked = true;\n        printErrorAndKill(err);\n      });\n    }\n  });\n\n  function printErrorAndKill(err) {\n    // since we are capturing error, we are also on the error message.\n    // so developers think we are also reponsible for the error.\n    // But we are not. This will fix that.\n    console.error(err.stack);\n    process.exit(7);\n  }\n}\n\nTrackUnhandledRejections = function () {\n  process.on('unhandledRejection', function (reason) {\n    // skip errors with `_skipKadira` flag\n    if(\n      reason._skipKadira ||\n      !Kadira.options.enableErrorTracking\n    ) {\n      return;\n    }\n\n    var trace = getTrace(reason, 'server-internal', 'unhandledRejection');\n    Kadira.models.error.trackError(reason, trace);\n\n    // TODO: we should respect the --unhandled-rejections option\n    // message taken from \n    // https://github.com/nodejs/node/blob/f4797ff1ef7304659d747d181ec1e7afac408d50/lib/internal/process/promises.js#L243-L248\n    const message =\n      'This error originated either by ' +\n      'throwing inside of an async function without a catch block, ' +\n      'or by rejecting a promise which was not handled with .catch().' +\n      ' The promise rejected with the reason: ';\n\n    // We could emit a warning instead like Node does internally\n    // but it requires Node 8 or newer\n    console.warn(message);\n    console.error(reason && reason.stack ? reason.stack : reason)\n  });\n}\n\nTrackMeteorDebug = function () {\n  var originalMeteorDebug = Meteor._debug;\n  Meteor._debug = function (message, stack) {\n    // Sometimes Meteor calls Meteor._debug with no arguments\n    // to log an empty line\n    const isArgs = message !== undefined || stack !== undefined;\n\n    // We've changed `stack` into an object at method and sub handlers so we can\n    // detect the error here. These errors are already tracked so don't track them again.\n    var alreadyTracked = false;\n\n    // Some Meteor versions pass the error, and other versions pass the error stack\n    // Restore so origionalMeteorDebug shows the stack as a string instead as an object\n    if (stack && stack[MeteorDebugIgnore]) {\n      alreadyTracked = true;\n      arguments[1] = stack.stack;\n    } else if (stack && stack.stack && stack.stack[MeteorDebugIgnore]) {\n      alreadyTracked = true;\n      arguments[1] = stack.stack.stack;\n    }\n\n    // only send to the server if connected to kadira\n    if (\n      Kadira.options.enableErrorTracking &&\n      isArgs &&\n      !alreadyTracked &&\n      Kadira.connected\n    ) {\n      let errorMessage = message;\n\n      if (typeof message == 'string' && stack instanceof Error) {\n        const separator = message.endsWith(':') ? '' : ':'\n        errorMessage = `${message}${separator} ${stack.message}`\n      }\n\n      let error = new Error(errorMessage);\n      if (stack instanceof Error) {\n        error.stack = stack.stack;\n      } else if (stack) {\n        error.stack = stack;\n      } else {\n        error.stack = CreateUserStack(error);\n      }\n      var trace = getTrace(error, 'server-internal', 'Meteor._debug');\n      Kadira.models.error.trackError(error, trace);\n    }\n\n    return originalMeteorDebug.apply(this, arguments);\n  }\n}\n\nfunction getTrace(err, type, subType) {\n  return {\n    type: type,\n    subType: subType,\n    name: err.message,\n    errored: true,\n    at: Kadira.syncedDate.getTime(),\n    events: [\n      ['start', 0, {}],\n      ['error', 0, {error: {message: err.message, stack: err.stack}}]\n    ],\n    metrics: {\n      total: 0\n    }\n  };\n}\n","setLabels = function () {\n  // name Session.prototype.send\n  var originalSend = MeteorX.Session.prototype.send;\n  MeteorX.Session.prototype.send = function kadira_Session_send (msg) {\n    return originalSend.call(this, msg);\n  }\n\n  // name Multiplexer initial adds\n  // Multiplexer is undefined in rocket chat\n  if (MeteorX.Multiplexer) {\n    var originalSendAdds = MeteorX.Multiplexer.prototype._sendAdds;\n    MeteorX.Multiplexer.prototype._sendAdds = function kadira_Multiplexer_sendAdds (handle) {\n      return originalSendAdds.call(this, handle);\n    }\n  }\n\n  // name MongoConnection insert\n  var originalMongoInsert = MeteorX.MongoConnection.prototype._insert;\n  MeteorX.MongoConnection.prototype._insert = function kadira_MongoConnection_insert (coll, doc, cb) {\n    return originalMongoInsert.call(this, coll, doc, cb);\n  }\n\n  // name MongoConnection update\n  var originalMongoUpdate = MeteorX.MongoConnection.prototype._update;\n  MeteorX.MongoConnection.prototype._update = function kadira_MongoConnection_update (coll, selector, mod, options, cb) {\n    return originalMongoUpdate.call(this, coll, selector, mod, options, cb);\n  }\n\n  // name MongoConnection remove\n  var originalMongoRemove = MeteorX.MongoConnection.prototype._remove;\n  MeteorX.MongoConnection.prototype._remove = function kadira_MongoConnection_remove (coll, selector, cb) {\n    return originalMongoRemove.call(this, coll, selector, cb);\n  }\n\n  // name Pubsub added\n  var originalPubsubAdded = MeteorX.Session.prototype.sendAdded;\n  MeteorX.Session.prototype.sendAdded = function kadira_Session_sendAdded (coll, id, fields) {\n    return originalPubsubAdded.call(this, coll, id, fields);\n  }\n\n  // name Pubsub changed\n  var originalPubsubChanged = MeteorX.Session.prototype.sendChanged;\n  MeteorX.Session.prototype.sendChanged = function kadira_Session_sendChanged (coll, id, fields) {\n    return originalPubsubChanged.call(this, coll, id, fields);\n  }\n\n  // name Pubsub removed\n  var originalPubsubRemoved = MeteorX.Session.prototype.sendRemoved;\n  MeteorX.Session.prototype.sendRemoved = function kadira_Session_sendRemoved (coll, id) {\n    return originalPubsubRemoved.call(this, coll, id);\n  }\n\n  // name MongoCursor forEach\n  var originalCursorForEach = MeteorX.MongoCursor.prototype.forEach;\n  MeteorX.MongoCursor.prototype.forEach = function kadira_Cursor_forEach () {\n    return originalCursorForEach.apply(this, arguments);\n  }\n\n  // name MongoCursor map\n  var originalCursorMap = MeteorX.MongoCursor.prototype.map;\n  MeteorX.MongoCursor.prototype.map = function kadira_Cursor_map () {\n    return originalCursorMap.apply(this, arguments);\n  }\n\n  // name MongoCursor fetch\n  var originalCursorFetch = MeteorX.MongoCursor.prototype.fetch;\n  MeteorX.MongoCursor.prototype.fetch = function kadira_Cursor_fetch () {\n    return originalCursorFetch.apply(this, arguments);\n  }\n\n  // name MongoCursor count\n  var originalCursorCount = MeteorX.MongoCursor.prototype.count;\n  MeteorX.MongoCursor.prototype.count = function kadira_Cursor_count () {\n    return originalCursorCount.apply(this, arguments);\n  }\n\n  // name MongoCursor observeChanges\n  var originalCursorObserveChanges = MeteorX.MongoCursor.prototype.observeChanges;\n  MeteorX.MongoCursor.prototype.observeChanges = function kadira_Cursor_observeChanges () {\n    return originalCursorObserveChanges.apply(this, arguments);\n  }\n\n  // name MongoCursor observe\n  var originalCursorObserve = MeteorX.MongoCursor.prototype.observe;\n  MeteorX.MongoCursor.prototype.observe = function kadira_Cursor_observe () {\n    return originalCursorObserve.apply(this, arguments);\n  }\n\n  // name CrossBar listen\n  var originalCrossbarListen = DDPServer._Crossbar.prototype.listen;\n  DDPServer._Crossbar.prototype.listen = function kadira_Crossbar_listen (trigger, callback) {\n    return originalCrossbarListen.call(this, trigger, callback);\n  }\n\n  // name CrossBar fire\n  var originalCrossbarFire = DDPServer._Crossbar.prototype.fire;\n  DDPServer._Crossbar.prototype.fire = function kadira_Crossbar_fire (notification) {\n    return originalCrossbarFire.call(this, notification);\n  }\n}\n","export function wrapFastRender () {\n  Meteor.startup(() => {\n    if (Package['staringatlights:fast-render']) {\n      const FastRender = Package['staringatlights:fast-render'].FastRender;\n\n      // Flow Router doesn't call FastRender.route until after all\n      // Meteor.startup callbacks finish\n      let origRoute = FastRender.route\n      FastRender.route = function (path, _callback) {\n        let callback = function () {\n          const info = Kadira._getInfo()\n          if (info) {\n            info.suggestedRouteName = path\n          }\n\n          return _callback.apply(this, arguments)\n        }\n\n        return origRoute.call(FastRender, path, callback)\n      }\n    }\n  });\n}\n","import fs from 'fs';\nconst Fibers = require('fibers');\n\nfunction wrapCallback(args, createWrapper) {\n  if (typeof args[args.length - 1] === 'function') {\n    args[args.length - 1] = createWrapper(args[args.length - 1])\n  }\n}\n\nexport function handleErrorEvent(eventEmitter, trace, event) {\n  function handler (error) {\n    if (trace && event) {\n      Kadira.tracer.eventEnd(trace, event, {\n        error: error\n      });\n    }\n\n    // Node throws the error if there are no listeners\n    // We want it to behave as if we are not listening to it\n    if (eventEmitter.listenerCount('error') === 1) {\n      eventEmitter.removeListener('error', handler);\n      eventEmitter.emit('error', error);\n    }\n  }\n\n  eventEmitter.on('error', handler);\n}\n\nexport function wrapFs() {\n  // Some npm packages will do fs calls in the\n  // callback of another fs call.\n  // This variable is set with the kadiraInfo while\n  // a callback is run so we can track other fs calls\n  let fsKadiraInfo = null;\n  \n  let originalStat = fs.stat;\n  fs.stat = function () {\n    const kadiraInfo = Kadira._getInfo() || fsKadiraInfo;\n\n    if (kadiraInfo) {\n      let event = Kadira.tracer.event(kadiraInfo.trace, 'fs', {\n        func: 'stat',\n        path: arguments[0],\n        options: typeof arguments[1] === 'object' ? arguments[1] : undefined\n      });\n\n      wrapCallback(arguments, (cb) => {\n        return function () {\n          Kadira.tracer.eventEnd(kadiraInfo.trace, event);\n\n          if (!Fibers.current) {\n            fsKadiraInfo = kadiraInfo;\n          }\n\n          try {\n            cb.apply(null, arguments)\n          } finally {\n            fsKadiraInfo = null;\n          }\n        }\n      });\n    }\n\n    return originalStat.apply(fs, arguments);\n  };\n\n  let originalCreateReadStream = fs.createReadStream;\n  fs.createReadStream = function () {\n    const kadiraInfo = Kadira._getInfo() || fsKadiraInfo;\n    let stream = originalCreateReadStream.apply(this, arguments);\n\n    if (kadiraInfo) {\n      const event = Kadira.tracer.event(kadiraInfo.trace, 'fs', {\n        func: 'createReadStream',\n        path: arguments[0],\n        options: JSON.stringify(arguments[1])\n      });\n\n      stream.on('end', () => {\n        Kadira.tracer.eventEnd(kadiraInfo.trace, event);\n      });\n\n      handleErrorEvent(stream, kadiraInfo.trace, event);\n    }\n\n    return stream;\n  };\n}\n","let PerformanceObserver;\nlet constants;\n\ntry {\n  // Only available in Node 8.5 and newer\n  ({\n    PerformanceObserver,\n    constants\n  } = require('perf_hooks'));\n} catch (e) {}\n\nexport default class GCMetrics {\n  constructor() {\n    this._observer = null;\n    this.started = false;\n    this.metrics = {};\n\n    this.reset();\n  }\n\n  start() {\n    if (this.started) {\n      return false;\n    }\n\n    if (!PerformanceObserver || !constants) {\n      // The node version is too old to have PerformanceObserver\n      return false;\n    }\n\n    this.started = true;\n\n    this.observer = new PerformanceObserver(list => {\n      list.getEntries().forEach(entry => {\n        let metric = this._mapKindToMetric(entry.kind);\n        this.metrics[metric] += entry.duration;\n      });\n    });\n    this.observer.observe({ entryTypes: ['gc'], buffered: false });\n  }\n\n  _mapKindToMetric(gcKind) {\n    switch(gcKind) {\n      case constants.NODE_PERFORMANCE_GC_MAJOR:\n        return 'gcMajor';\n      case constants.NODE_PERFORMANCE_GC_MINOR:\n        return 'gcMinor';\n      case constants.NODE_PERFORMANCE_GC_INCREMENTAL:\n        return 'gcIncremental';\n      case constants.NODE_PERFORMANCE_GC_WEAKCB:\n        return 'gcWeakCB';\n      default:\n        console.log(`Monti APM: Unrecognized GC Kind: ${gcKind}`);\n    }\n  }\n\n  reset() {\n    this.metrics = {\n      gcMajor: 0,\n      gcMinor: 0,\n      gcIncremental: 0,\n      gcWeakCB: 0\n    };\n  }\n}\n","var client;\nvar serverStatus = Object.create(null);\n\nvar otherCheckouts = 0;\n\n// These metrics are only for the mongo pool for the primary Mongo server\nvar primaryCheckouts = 0;\nvar totalCheckoutTime = 0;\nvar maxCheckoutTime = 0;\nvar created = 0;\nvar measurementCount = 0;\nvar pendingTotal = 0;\nvar checkedOutTotal = 0;\n\nsetInterval(() => {\n  let status = getServerStatus(getPrimary(), true);\n\n  if (status) {\n    pendingTotal += status.pending.length;\n    checkedOutTotal += status.checkedOut.size;\n    measurementCount += 1;\n  }\n}, 1000);\n\n// the pool defaults to 100, though usually the default isn't used\nvar DEFAULT_MAX_POOL_SIZE = 100;\n\nfunction getPoolSize () {\n  if (client && client.topology && client.topology.s && client.topology.s.options) {\n    return client.topology.s.options.maxPoolSize || DEFAULT_MAX_POOL_SIZE;\n  }\n\n  return 0;\n}\n\nexport function getMongoDriverStats () {\n  return {\n    poolSize: getPoolSize(),\n    primaryCheckouts,\n    otherCheckouts,\n    checkoutTime: totalCheckoutTime,\n    maxCheckoutTime,\n    pending: pendingTotal / measurementCount,\n    checkedOut: checkedOutTotal / measurementCount,\n    created\n  };\n};\n\nexport function resetMongoDriverStats() {\n  primaryCheckouts = 0;\n  otherCheckouts = 0;\n  totalCheckoutTime = 0;\n  maxCheckoutTime = 0;\n  pendingTotal = 0;\n  checkedOutTotal = 0;\n  measurementCount = 0;\n  primaryCheckouts = 0;\n  created = 0;\n}\n\nMeteor.startup(() => {\n  let _client = MongoInternals.defaultRemoteCollectionDriver().mongo.client;\n\n  if (!_client || !_client.s) {\n    // Old version of agent\n    return;\n  }\n\n  let options = _client.s.options;\n  if (!options || !options.useUnifiedTopology) {\n    // CMAP and topology monitoring requires useUnifiedTopology\n    return;\n  }\n\n  client = _client;\n\n  // Get the number of connections already created\n  let primaryDescription = getServerDescription(getPrimary());\n  if (primaryDescription && primaryDescription.s && primaryDescription.s.pool) {\n    let pool = primaryDescription.s.pool;\n    let totalConnections = pool.totalConnectionCount;\n    let availableConnections = pool.availableConnectionCount;\n\n    // totalConnectionCount counts available connections twice\n    created += totalConnections - availableConnections;\n  }\n\n  client.on('connectionCreated', event => {\n    let primary = getPrimary();\n    if (primary === event.address) {\n      created += 1;\n    }\n  });\n\n  client.on('connectionClosed', event => {\n    let status = getServerStatus(event.address, true);\n    if (status) {\n      status.checkedOut.delete(event.connectionId);\n    }\n  });\n\n  client.on('connectionCheckOutStarted', event => {\n    let status = getServerStatus(event.address);\n    status.pending.push(event.time);\n  });\n\n  client.on('connectionCheckOutFailed', event => {\n    let status = getServerStatus(event.address, true);\n    if (status) {\n      status.pending.shift();\n    }\n  });\n\n  client.on('connectionCheckedOut', event => {\n    let status = getServerStatus(event.address);\n    let start = status.pending.shift();\n    let primary = getPrimary();\n\n    if (start && primary === event.address) {\n      let checkoutDuration = event.time.getTime() - start.getTime();\n\n      primaryCheckouts += 1;\n      totalCheckoutTime += checkoutDuration;\n      if (checkoutDuration > maxCheckoutTime) {\n        maxCheckoutTime = checkoutDuration;\n      }\n    } else {\n      otherCheckouts += 1;\n    }\n\n    status.checkedOut.add(event.connectionId);\n  });\n\n  client.on('connectionCheckedIn', event => {\n    let status = getServerStatus(event.address, true);\n    if (status) {\n      status.checkedOut.delete(event.connectionId);\n    }\n  });\n\n  client.on('serverClosed', function (event) {\n    delete serverStatus[event.address];\n  });\n});\n\nfunction getServerStatus(address, disableCreate) {\n  if (typeof address !== 'string') {\n    return null;\n  }\n\n  if (address in serverStatus) {\n    return serverStatus[address];\n  }\n\n  if (disableCreate) {\n    return null;\n  }\n\n  serverStatus[address] = {\n    pending: [],\n    checkedOut: new Set(),\n  }\n\n  return serverStatus[address];\n}\n\nfunction getPrimary() {\n  if (!client || !client.topology) {\n    return null;\n  }\n\n  let server = client.topology.lastIsMaster();\n\n  if (server.type === 'Standalone') {\n    return server.address;\n  }\n\n  if (!server || !server.primary) {\n    return null;\n  }\n\n  return server.primary;\n}\n\nfunction getServerDescription(address) {\n  if (!client || !client.topology || !client.topology.s || !client.topology.s.servers) {\n    return null;\n  }\n  let description = client.topology.s.servers.get(address);\n\n  return description || null;\n}\n","import Fiber from \"fibers\";\n\nexport function wrapPicker () {\n  Meteor.startup(() => {\n    if (!Package['meteorhacks:picker']) {\n      return;\n    }\n\n    const Picker = Package['meteorhacks:picker'].Picker;\n\n    // Wrap Picker._processRoute to make sure it runs the\n    // handler in a Fiber with __kadiraInfo set\n    // Needed if any previous middleware called `next` outside of a fiber.\n    const origProcessRoute = Picker.constructor.prototype._processRoute;\n    Picker.constructor.prototype._processRoute = function (callback, params, req) {\n      const args = arguments;\n\n      if (!Fiber.current) {\n        return new Fiber(() => {\n          Kadira._setInfo(req.__kadiraInfo)\n          return origProcessRoute.apply(this, args);\n        }).run();\n      }\n      \n      if (req.__kadiraInfo) {\n        Kadira._setInfo(req.__kadiraInfo);\n      }\n\n      return origProcessRoute.apply(this, args);\n    };\n  });\n}\n","import Fibers from 'fibers';\n\nexport function wrapRouters () {\n  let connectRoutes = []\n  try {\n    connectRoutes.push(require('connect-route'));\n  } catch (e) {\n    // We can ignore errors\n  }\n\n  try {\n    if (Package['simple:json-routes']) {\n      // Relative from .npm/node_modules/meteor/montiapm_agent/node_modules\n      // Npm.require is less strict on what paths you use than require\n      connectRoutes.push(Npm.require('../../simple_json-routes/node_modules/connect-route'));\n    }\n  } catch (e) {\n     // we can ignore errors\n  }\n\n  connectRoutes.forEach(connectRoute => {\n    if (typeof connectRoute !== 'function') {\n      return;\n    }\n  \n    connectRoute((router) => {\n      const oldAdd = router.constructor.prototype.add;\n      router.constructor.prototype.add = function (method, route, handler) {\n        // Unlike most routers, connect-route doesn't look at the arguments length\n        oldAdd.call(this, method, route, function () {\n          if (arguments[0] && arguments[0].__kadiraInfo) {\n            arguments[0].__kadiraInfo.suggestedRouteName = route;\n          }\n\n          handler.apply(null, arguments)\n        });\n      }\n    });\n  })\n}\n","import { WebAppInternals, WebApp } from 'meteor/webapp';\nimport Fibers from 'fibers';\n\n// Maximum content-length size\nMAX_BODY_SIZE = 8000\n// Maximum characters for stringified body\nMAX_STRINGIFIED_BODY_SIZE = 4000\n\nconst canWrapStaticHandler = !!WebAppInternals.staticFilesByArch\n\n// This checks if running on a version of Meteor that\n// wraps connect handlers in a fiber.\n// This check is dependant on Meteor's implementation of `use`,\n// which wraps every handler in a new fiber.\n// This will need to be updated if Meteor starts reusing\n// fibers when they exist.\nexport function checkHandlersInFiber () {\n  const handlersLength = WebApp.rawConnectHandlers.stack.length;\n  let inFiber = false;\n  let outsideFiber = Fibers.current;\n\n  WebApp.rawConnectHandlers.use((_req, _res, next) => {\n    inFiber = Fibers.current && Fibers.current !== outsideFiber;\n    \n    // in case we didn't successfully remove this handler\n    // and it is a real request\n    next();\n  });\n\n  if (WebApp.rawConnectHandlers.stack[handlersLength]) {\n    let handler = WebApp.rawConnectHandlers.stack[handlersLength].handle;\n\n    // remove the newly added handler\n    // We remove it immediately so there is no opportunity for\n    // other code to add handlers first if the current fiber is yielded\n    // while running the handler\n    while (WebApp.rawConnectHandlers.stack.length > handlersLength) {\n      WebApp.rawConnectHandlers.stack.pop();\n    }\n\n    handler({}, {}, () => {})\n  }\n\n  return inFiber;\n}\n\nconst InfoSymbol = Symbol()\n\nexport async function wrapWebApp() {\n  if (!checkHandlersInFiber() || !canWrapStaticHandler) {\n    return;\n  }\n\n  const parseUrl = require('parseurl');\n\n  WebAppInternals.registerBoilerplateDataCallback('__montiApmRouteName', function (request) {\n    // TODO: record in trace which arch is used\n\n    if (request[InfoSymbol]) {\n      request[InfoSymbol].isAppRoute = true\n    }\n\n    // Let WebApp know we didn't make changes\n    // so it can use a cache\n    return false\n  })\n\n  // We want the request object returned by categorizeRequest to have\n  // __kadiraInfo\n  let origCategorizeRequest = WebApp.categorizeRequest;\n  WebApp.categorizeRequest = function (req) {\n    let result = origCategorizeRequest.apply(this, arguments);\n\n    if (result && req.__kadiraInfo) {\n      result[InfoSymbol] = req.__kadiraInfo;\n    }\n\n    return result;\n  }\n\n  // Adding the handler directly to the stack\n  // to force it to be the first one to run\n  WebApp.rawConnectHandlers.stack.unshift({\n    route: '',\n    handle: (req, res, next) => {\n    const name = parseUrl(req).pathname;\n    const trace = Kadira.tracer.start(`${req.method}-${name}`, 'http');\n\n    const headers = Kadira.tracer._applyObjectFilters(req.headers);\n    Kadira.tracer.event(trace, 'start', {\n      url: req.url,\n      method: req.method,\n      headers: JSON.stringify(headers),\n    });\n    req.__kadiraInfo = { trace };\n\n    res.on('finish', () => {\n      if (req.__kadiraInfo.asyncEvent) {\n        Kadira.tracer.eventEnd(trace, req.__kadiraInfo.asyncEvent);\n      }\n\n      Kadira.tracer.endLastEvent(trace);\n\n      if (req.__kadiraInfo.isStatic) {\n        trace.name = `${req.method}-<static file>`\n      } else if (req.__kadiraInfo.suggestedRouteName) {\n        trace.name = `${req.method}-${req.__kadiraInfo.suggestedRouteName}`\n      } else if (req.__kadiraInfo.isAppRoute) {\n        trace.name = `${req.method}-<app>`\n      }\n\n      const isJson = req.headers['content-type'] === 'application/json';\n      const hasSmallBody = req.headers['content-length'] > 0 && req.headers['content-length'] < MAX_BODY_SIZE\n\n      // Check after all middleware have run to see if any of them\n      // set req.body\n      // Technically bodies can be used with any method, but since many load balancers and\n      // other software only support bodies for POST requests, we are\n      // not recording the body for other methods.\n      if (req.method === 'POST' && req.body && isJson && hasSmallBody) {\n        try {\n          let body = JSON.stringify(req.body);\n\n          // Check the body size again in case it is much\n          // larger than what was in the content-length header\n          if (body.length < MAX_STRINGIFIED_BODY_SIZE) {\n            trace.events[0].data.body = body;\n          }\n        } catch (e) {\n          // It is okay if this fails\n        }\n      }\n\n      // TODO: record status code\n      Kadira.tracer.event(trace, 'complete');\n      let built = Kadira.tracer.buildTrace(trace);\n      Kadira.models.http.processRequest(built, req, res);\n    });\n\n    next();\n  }\n});\n\n\n  function wrapHandler(handler) {\n    // connect identifies error handles by them accepting\n    // four arguments\n    let errorHandler = handler.length === 4;\n\n    function wrapper(req, res, next) {\n      let error;\n      if (errorHandler) {\n        error = req;\n        req = res;\n        res = next;\n        next = arguments[3]\n      }\n\n      const kadiraInfo = req.__kadiraInfo;\n      Kadira._setInfo(kadiraInfo);\n\n      let nextCalled = false;\n      // TODO: track errors passed to next or thrown\n      function wrappedNext(...args) {\n        if (kadiraInfo && kadiraInfo.asyncEvent) {\n          Kadira.tracer.eventEnd(req.__kadiraInfo.trace, req.__kadiraInfo.asyncEvent);\n          req.__kadiraInfo.asyncEvent = null;\n        }\n\n        nextCalled = true;\n        next(...args)\n      }\n\n      let potentialPromise\n\n      if (errorHandler) {\n        potentialPromise = handler.call(this, error, req, res, wrappedNext);\n      } else {\n        potentialPromise = handler.call(this, req, res, wrappedNext);\n      }\n\n      if (potentialPromise && typeof potentialPromise.then === 'function') {\n        potentialPromise.then(() => {\n          // res.finished is depreciated in Node 13, but it is the only option\n          // for Node 12.9 and older.\n          if (kadiraInfo && !res.finished && !nextCalled) {\n            const lastEvent = Kadira.tracer.getLastEvent(kadiraInfo.trace)\n            if (lastEvent.endAt) {\n              // req is not done, and next has not been called\n              // create an async event that will end when either of those happens\n              kadiraInfo.asyncEvent = Kadira.tracer.event(kadiraInfo.trace, 'async');\n            }\n          }\n        });\n      }\n\n      return potentialPromise;\n    }\n\n    if (errorHandler) {\n      return function (error, req, res, next) {\n        return wrapper(error, req, res, next);\n      }\n    } else {\n      return function (req, res, next) {\n        return wrapper(req, res, next);\n      }\n    }\n  }\n\n  function wrapConnect(app, wrapStack) {\n    let oldUse = app.use;\n    if (wrapStack) {\n      // We need to set kadiraInfo on the Fiber the handler will run in.\n      // Meteor has already wrapped the handler to run it in a new Fiber\n      // by using Promise.asyncApply so we are not able to directly set it\n      // on that Fiber. \n      // Meteor's promise library copies properties from the current fiber to\n      // the new fiber, so we can wrap it in another Fiber with kadiraInfo set\n      // and Meteor will copy kadiraInfo to the new Fiber.\n      // It will only create the additional Fiber if it isn't already running in a Fiber\n      app.stack.forEach(entry => {\n        let wrappedHandler = wrapHandler(entry.handle)\n        if (entry.handle.length >= 4) {\n          entry.handle = function (error, req, res, next) {\n            return Promise.asyncApply(\n              wrappedHandler,\n              this,\n              arguments,\n              true\n            );\n          };\n        } else {\n          entry.handle = function (req, res, next) {\n            return Promise.asyncApply(\n              wrappedHandler,\n              this,\n              arguments,\n              true\n            )\n          }\n        }\n      });\n    }\n    app.use = function (...args) {\n      args[args.length - 1] = wrapHandler(args[args.length - 1])\n      return oldUse.apply(app, args);\n    }\n  }\n\n  wrapConnect(WebApp.rawConnectHandlers, false);\n  wrapConnect(WebAppInternals.meteorInternalHandlers, false);\n\n  // The oauth package and other core packages might have already added their middleware,\n  // so we need to wrap the existing middleware\n  wrapConnect(WebApp.connectHandlers, true);\n\n  wrapConnect(WebApp.connectApp, false);\n\n  let oldStaticFilesMiddleware = WebAppInternals.staticFilesMiddleware;\n  const staticHandler = wrapHandler(oldStaticFilesMiddleware.bind(WebAppInternals, WebAppInternals.staticFilesByArch));\n  WebAppInternals.staticFilesMiddleware = function (_staticFiles, req, res, next) {\n    if (req.__kadiraInfo) {\n      req.__kadiraInfo.isStatic = true;\n    }\n\n    return staticHandler(req, res, function () {\n      // if the request is for a static file, the static handler will end the response\n      // instead of calling next\n      req.__kadiraInfo.isStatic = false;\n      return next.apply(this, arguments);\n    });\n  };\n}\n","function normalizedPrefix (name) {\n  return name.replace('KADIRA_', 'MONTI_');\n}\n\nKadira._parseEnv = function (env) {\n  var options = {};\n  for(var name in env) {\n    var value = env[name];\n    var normalizedName = normalizedPrefix(name);\n    var info = Kadira._parseEnv._options[normalizedName];\n\n    if(info && value) {\n      options[info.name] = info.parser(value);\n    }\n  }\n\n  return options;\n};\n\n\nKadira._parseEnv.parseInt = function (str) {\n  var num = parseInt(str);\n  if(num || num === 0) return num;\n  throw new Error('Kadira: Match Error: \"'+num+'\" is not a number');\n};\n\n\nKadira._parseEnv.parseBool = function (str) {\n  str = str.toLowerCase();\n  if(str === 'true') return true;\n  if(str === 'false') return false;\n  throw new Error('Kadira: Match Error: '+str+' is not a boolean');\n};\n\n\nKadira._parseEnv.parseUrl = function (str) {\n  return str;\n};\n\n\nKadira._parseEnv.parseString = function (str) {\n  return str;\n};\n\n\nKadira._parseEnv._options = {\n  // auth\n  MONTI_APP_ID: {\n    name: 'appId',\n    parser: Kadira._parseEnv.parseString\n  },\n  MONTI_APP_SECRET: {\n    name: 'appSecret',\n    parser: Kadira._parseEnv.parseString\n  },\n  // delay to send the initial ping to the kadira engine after page loads\n  MONTI_OPTIONS_CLIENT_ENGINE_SYNC_DELAY: {\n    name: 'clientEngineSyncDelay',\n    parser: Kadira._parseEnv.parseInt,\n  },\n  // time between sending errors to the engine\n  MONTI_OPTIONS_ERROR_DUMP_INTERVAL: {\n    name: 'errorDumpInterval',\n    parser: Kadira._parseEnv.parseInt,\n  },\n  // no of errors allowed in a given interval\n  MONTI_OPTIONS_MAX_ERRORS_PER_INTERVAL: {\n    name: 'maxErrorsPerInterval',\n    parser: Kadira._parseEnv.parseInt,\n  },\n  // a zone.js specific option to collect the full stack trace(which is not much useful)\n  MONTI_OPTIONS_COLLECT_ALL_STACKS: {\n    name: 'collectAllStacks',\n    parser: Kadira._parseEnv.parseBool,\n  },\n  // enable error tracking (which is turned on by default)\n  MONTI_OPTIONS_ENABLE_ERROR_TRACKING: {\n    name: 'enableErrorTracking',\n    parser: Kadira._parseEnv.parseBool,\n  },\n  // kadira engine endpoint\n  MONTI_OPTIONS_ENDPOINT: {\n    name: 'endpoint',\n    parser: Kadira._parseEnv.parseUrl,\n  },\n  // define the hostname of the current running process\n  MONTI_OPTIONS_HOSTNAME: {\n    name: 'hostname',\n    parser: Kadira._parseEnv.parseString,\n  },\n  // interval between sending data to the kadira engine from the server\n  MONTI_OPTIONS_PAYLOAD_TIMEOUT: {\n    name: 'payloadTimeout',\n    parser: Kadira._parseEnv.parseInt,\n  },\n  // set HTTP/HTTPS proxy\n  MONTI_OPTIONS_PROXY: {\n    name: 'proxy',\n    parser: Kadira._parseEnv.parseUrl,\n  },\n  // number of items cached for tracking document size\n  MONTI_OPTIONS_DOCUMENT_SIZE_CACHE_SIZE: {\n    name: 'documentSizeCacheSize',\n    parser: Kadira._parseEnv.parseInt,\n  },\n  // enable uploading sourcemaps\n  MONTI_UPLOAD_SOURCE_MAPS: {\n    name: 'uploadSourceMaps',\n    parser: Kadira._parseEnv.parseBool\n  },\n  MONTI_RECORD_IP_ADDRESS: {\n    name: 'recordIPAddress',\n    parser: Kadira._parseEnv.parseString,\n  },\n  MONTI_EVENT_STACK_TRACE: {\n    name: 'eventStackTrace',\n    parser: Kadira._parseEnv.parseBool,\n  }\n};\n","Kadira._connectWithEnv = function() {\n  var options = Kadira._parseEnv(process.env);\n  if(options.appId && options.appSecret) {\n\n    Kadira.connect(\n      options.appId,\n      options.appSecret,\n      options\n    );\n\n    Kadira.connect = function() {\n      throw new Error('Kadira has been already connected using credentials from Environment Variables');\n    };\n  }\n};\n\n\nKadira._connectWithSettings = function () {\n  var montiSettings = Meteor.settings.monti || Meteor.settings.kadira\n\n  if(\n    montiSettings &&\n    montiSettings.appId &&\n    montiSettings.appSecret\n  ) {\n    Kadira.connect(\n      montiSettings.appId,\n      montiSettings.appSecret,\n      montiSettings.options || {}\n    );\n\n    Kadira.connect = function() {\n      throw new Error('Kadira has been already connected using credentials from Meteor.settings');\n    };\n  }\n};\n\n\n// Try to connect automatically\nKadira._connectWithEnv();\nKadira._connectWithSettings();\n","import { Meteor } from 'meteor/meteor';\n\nconst conflictingPackages = [\n  'mdg:meteor-apm-agent',\n  'lmachens:kadira',\n  'meteorhacks:kadira',\n];\n\nMeteor.startup(() => {\n  conflictingPackages.forEach((name) => {\n    if (name in Package) {\n      console.log(`Monti APM: your app is using the ${name} package. Using more than one APM agent in an app can cause unexpected problems.`);\n    }\n  });\n});\n"]}}]