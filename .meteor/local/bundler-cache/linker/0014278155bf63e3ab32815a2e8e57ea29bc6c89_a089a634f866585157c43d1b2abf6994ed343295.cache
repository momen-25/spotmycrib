[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar _ = Package.underscore._;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\nvar ReactiveDict = Package['reactive-dict'].ReactiveDict;\nvar ReactiveVar = Package['reactive-var'].ReactiveVar;\nvar DDP = Package['ddp-client'].DDP;\nvar EJSON = Package.ejson.EJSON;\nvar meteorInstall = Package.modules.meteorInstall;\nvar FastRender = Package['staringatlights:fast-render'].FastRender;\nvar __init_fast_render = Package['staringatlights:fast-render'].__init_fast_render;\nvar InjectData = Package['staringatlights:inject-data'].InjectData;\nvar Promise = Package.promise.Promise;\n\n/* Package-scope variables */\nvar SharedRouter, options, pathDef, SharedGroup, group, SharedRoute, Triggers, Router, Group, Route, FlowRouter;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"jns:flow-router-ssr\":{\"lib\":{\"router.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jns_flow-router-ssr/lib/router.js                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet Qs;\nmodule.link(\"qs\", {\n  default(v) {\n    Qs = v;\n  }\n\n}, 0);\nlet PathToRegexp;\nmodule.link(\"path-to-regexp\", {\n  default(v) {\n    PathToRegexp = v;\n  }\n\n}, 1);\nSharedRouter = class {\n  constructor() {\n    this._routes = [];\n    this._routesMap = {}; // holds onRoute callbacks\n\n    this._onRouteCallbacks = [];\n    this.env = {};\n    this.env.trailingSlash = new Meteor.EnvironmentVariable();\n  }\n\n  route(pathDef, options, group) {\n    if (!/^\\/.*/.test(pathDef)) {\n      const message = \"route's path must start with '/'\";\n      throw new Error(message);\n    }\n\n    options = options || {};\n    const currentRoute = new Route(this, pathDef, options, group);\n\n    currentRoute._init();\n\n    this._routes.push(currentRoute);\n\n    if (options.name) {\n      this._routesMap[options.name] = currentRoute;\n    }\n\n    this._triggerRouteRegister(currentRoute);\n\n    return currentRoute;\n  } // XXX this function needs to be cleaned up if possible by removing `if (this.isServer)`\n  // and `if (this.isClient)` if possible\n\n\n  path(pathDef) {\n    let fields = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let queryParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (this._routesMap[pathDef]) {\n      pathDef = this._routesMap[pathDef].path;\n    }\n\n    let newPath = ''; // Prefix the path with the router global prefix\n\n    if (this._basePath) {\n      newPath += \"/\".concat(this._basePath, \"/\");\n    } // Encode query params\n\n\n    queryParams = this._encodeValues(queryParams);\n    const toPath = PathToRegexp.compile(pathDef);\n    newPath += toPath(fields); // If we have one optional parameter in path definition e.g.\n    // /:category?\n    // and the parameter isn't present, path will be an empty string.\n    // We have this check as a value for path is required by e.g. FlowRouter.go()\n\n    if (!newPath) {\n      newPath = '/';\n    } // Replace multiple slashes with single slash\n\n\n    newPath = newPath.replace(/\\/\\/+/g, '/'); // remove trailing slash\n    // but keep the root slash if it's the only one\n\n    newPath = newPath.match(/^\\/{1}$/) ? newPath : newPath.replace(/\\/$/, ''); // explictly asked to add a trailing slash\n\n    if (this.env.trailingSlash.get() && _.last(newPath) !== '/') {\n      newPath += '/';\n    }\n\n    const strQueryParams = Qs.stringify(queryParams || {});\n\n    if (strQueryParams) {\n      newPath += \"?\".concat(strQueryParams);\n    }\n\n    return newPath;\n  }\n\n  go() {// client only\n  }\n\n  watchPathChange() {// client only\n  }\n\n  group(options) {\n    return new Group(this, options);\n  }\n\n  url() {\n    // We need to remove the leading base path, or \"/\", as it will be inserted\n    // automatically by `Meteor.absoluteUrl` as documented in:\n    // http://docs.meteor.com/#/full/meteor_absoluteurl\n    const completePath = this.path(...arguments);\n    const basePath = this._basePath || '/';\n    const pathWithoutBase = completePath.replace(RegExp(\"^\".concat(basePath)), '');\n    return Meteor.absoluteUrl(pathWithoutBase);\n  } // For client:\n  // .current is not reactive on the client\n  // This is by design. use .getParam() instead\n  // If you really need to watch the path change, use .watchPathChange()\n\n\n  current() {\n    // We can't trust outside, that's why we clone this\n    // Anyway, we can't clone the whole object since it has non-jsonable values\n    // That's why we clone what's really needed.\n    const context = _.clone(this._getCurrentRouteContext());\n\n    context.queryParams = EJSON.clone(context.queryParams);\n    context.params = EJSON.clone(context.params);\n    return context;\n  }\n\n  onRouteRegister(cb) {\n    this._onRouteCallbacks.push(cb);\n  }\n\n  _encodeValues(obj) {\n    const newObj = {};\n    Object.keys(obj).forEach(key => {\n      const value = obj[key];\n      newObj[key] = typeof value !== 'undefined' ? encodeURIComponent(value) : value;\n    });\n    return newObj;\n  }\n\n  _triggerRouteRegister(currentRoute) {\n    // We should only need to send a safe set of fields on the route\n    // object.\n    // This is not to hide what's inside the route object, but to show\n    // these are the public APIs\n    const routePublicApi = _.pick(currentRoute, 'name', 'pathDef', 'path');\n\n    const omittingOptionFields = ['triggersEnter', 'triggersExit', 'name', 'action'];\n    routePublicApi.options = _.omit(currentRoute.options, omittingOptionFields);\n\n    this._onRouteCallbacks.forEach(cb => {\n      cb(routePublicApi);\n    });\n  }\n\n  _getCurrentRouteContext() {\n    throw new Error('Not implemented');\n  }\n\n  _init() {\n    throw new Error('Not implemented');\n  }\n\n  withTrailingSlash(fn) {\n    return this.env.trailingSlash.withValue(true, fn);\n  }\n\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"group.js\":function module(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jns_flow-router-ssr/lib/group.js                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nSharedGroup = class {\n  constructor(router, options, parent) {\n    options = options || {};\n\n    if (options.prefix && !/^\\/.*/.test(options.prefix)) {\n      const message = \"group's prefix must start with '/'\";\n      throw new Error(message);\n    }\n\n    this.prefix = options.prefix || '';\n    this.options = options;\n    this._router = router;\n    this.parent = parent;\n  }\n\n  route(pathDef, options, group) {\n    options = options || {};\n\n    if (!/^\\/.*/.test(pathDef)) {\n      const message = \"route's path must start with '/'\";\n      throw new Error(message);\n    }\n\n    pathDef = this.prefix + pathDef;\n    group = group || this;\n    return this._router.route(pathDef, options, group);\n  }\n\n  group(options) {\n    return new Group(this._router, options, this);\n  }\n\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"route.js\":function module(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jns_flow-router-ssr/lib/route.js                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nSharedRoute = class {\n  constructor(router, pathDef, options, group) {\n    options = options || {};\n    this.options = options;\n    this.name = options.name;\n    this.pathDef = pathDef; // Route.path is deprecated and will be removed in 3.0\n\n    this.path = this.pathDef;\n    this._router = router;\n    this._action = options.action || Function.prototype;\n    this.group = group;\n  }\n\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_init.js\":function module(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jns_flow-router-ssr/lib/_init.js                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n// Export Router Instance\nFlowRouter = new Router();\nFlowRouter.Router = Router;\nFlowRouter.Route = Route;\nPackage['kadira:flow-router-ssr'] = {\n  FlowRouter\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"client\":{\"triggers.js\":function module(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jns_flow-router-ssr/client/triggers.js                                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n// a set of utility functions for triggers\nTriggers = {}; // Apply filters for a set of triggers\n// @triggers - a set of triggers\n// @filter - filter with array fileds with `only` and `except`\n//           support only either `only` or `except`, but not both\n\nTriggers.applyFilters = (triggers, filter) => {\n  if (!(triggers instanceof Array)) {\n    triggers = [triggers];\n  }\n\n  if (!filter) {\n    return triggers;\n  }\n\n  if (filter.only && filter.except) {\n    throw new Error(\"Triggers don't support only and except filters at once\");\n  }\n\n  if (filter.only && !(filter.only instanceof Array)) {\n    throw new Error('only filters needs to be an array');\n  }\n\n  if (filter.except && !(filter.except instanceof Array)) {\n    throw new Error('except filters needs to be an array');\n  }\n\n  if (filter.only) {\n    return Triggers.createRouteBoundTriggers(triggers, filter.only);\n  }\n\n  if (filter.except) {\n    return Triggers.createRouteBoundTriggers(triggers, filter.except, true);\n  }\n\n  throw new Error('Provided a filter but not supported');\n}; //  create triggers by bounding them to a set of route names\n//  @triggers - a set of triggers\n//  @names - list of route names to be bound (trigger runs only for these names)\n//  @negate - negate the result (triggers won't run for above names)\n\n\nTriggers.createRouteBoundTriggers = (triggers, names, negate) => {\n  const namesMap = {};\n  names.forEach(name => {\n    namesMap[name] = true;\n  });\n  const filteredTriggers = triggers.map(originalTrigger => {\n    const modifiedTrigger = (context, next) => {\n      const routeName = context.route.name;\n      let matched = namesMap[routeName] ? 1 : -1;\n      matched = negate ? matched * -1 : matched;\n\n      if (matched === 1) {\n        originalTrigger(context, next);\n      }\n    };\n\n    return modifiedTrigger;\n  });\n  return filteredTriggers;\n}; //  run triggers and abort if redirected or callback stopped\n//  @triggers - a set of triggers\n//  @context - context we need to pass (it must have the route)\n//  @redirectFn - function which used to redirect\n//  @after - called after if only all the triggers runs\n\n\nTriggers.runTriggers = (triggers, context, redirectFn, after) => {\n  let abort = false;\n  let inCurrentLoop = true;\n  let alreadyRedirected = false;\n\n  for (let lc = 0; lc < triggers.length; lc++) {\n    const trigger = triggers[lc];\n    trigger(context, doRedirect, doStop);\n\n    if (abort) {\n      return;\n    }\n  } // mark that, we've exceeds the currentEventloop for\n  // this set of triggers.\n\n\n  inCurrentLoop = false;\n  after();\n\n  function doRedirect(url, params, queryParams) {\n    if (alreadyRedirected) {\n      throw new Error('already redirected');\n    }\n\n    if (!inCurrentLoop) {\n      throw new Error('redirect needs to be done in sync');\n    }\n\n    if (!url) {\n      throw new Error('trigger redirect requires an URL');\n    }\n\n    abort = true;\n    alreadyRedirected = true;\n    redirectFn(url, params, queryParams);\n  }\n\n  function doStop() {\n    abort = true;\n  }\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"router.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jns_flow-router-ssr/client/router.js                                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nlet _objectSpread;\n\nmodule.link(\"@babel/runtime/helpers/objectSpread2\", {\n  default(v) {\n    _objectSpread = v;\n  }\n\n}, 0);\nlet Qs;\nmodule.link(\"qs\", {\n  default(v) {\n    Qs = v;\n  }\n\n}, 0);\nlet PathToRegexp;\nmodule.link(\"path-to-regexp\", {\n  default(v) {\n    PathToRegexp = v;\n  }\n\n}, 1);\nlet ParseUrl;\nmodule.link(\"parseurl\", {\n  default(v) {\n    ParseUrl = v;\n  }\n\n}, 2);\nconst logger = console;\nRouter = class extends SharedRouter {\n  constructor() {\n    super(); // holds the current context\n\n    this._current = {}; // tracks the current path change\n\n    this._onEveryPath = new Tracker.Dependency();\n    this._params = new ReactiveDict();\n    this._queryParams = new ReactiveDict(); // if _askedToWait is true. We don't automatically start the router\n    // in Meteor.startup callback. (see client/_init.js)\n    // Instead user need to call `.initialize()\n\n    this._askedToWait = false;\n    this._initialized = false;\n    this._triggersEnter = [];\n    this._triggersExit = []; // Meteor exposes to the client the path prefix that was defined using the\n    // ROOT_URL environement variable on the server using the global runtime\n    // configuration. See #315.\n\n    this._basePath = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n    this.env.replaceState = new Meteor.EnvironmentVariable();\n    this.env.reload = new Meteor.EnvironmentVariable();\n    this.env.inAction = new Meteor.EnvironmentVariable();\n    this.env.inPopstate = new Meteor.EnvironmentVariable(); // this holds route pathDefs\n\n    this._routeDefs = [];\n\n    this._initTriggersAPI();\n\n    this._initClickAnchorHandlers();\n  }\n\n  initialize(options) {\n    options = options || {};\n\n    if (this._initialized) {\n      throw new Error('FlowRouter is already initialized');\n    }\n\n    this._initialized = true;\n    const path = location.pathname + location.search + (location.hash || '');\n\n    this._initiateHandlingBackButton();\n\n    this.go(path);\n  }\n\n  wait() {\n    if (this._initialized) {\n      throw new Error(\"can't wait after FlowRouter has been initialized\");\n    }\n\n    this._askedToWait = true;\n  }\n\n  reload() {\n    this.env.reload.withValue(true, () => {\n      this.go(this._current.path);\n    });\n  }\n\n  setParams(newParams) {\n    if (!this._current.route) {\n      return false;\n    }\n\n    const pathDef = this._current.route.pathDef;\n    const existingParams = this._current.params;\n\n    const params = _objectSpread(_objectSpread({}, existingParams), newParams);\n\n    for (const k in params) {\n      if (params[k] === null || params[k] === undefined) {\n        delete params[k];\n      }\n    }\n\n    const queryParams = this._current.queryParams;\n    this.go(pathDef, params, queryParams);\n    return true;\n  }\n\n  setQueryParams(newParams) {\n    if (!this._current.route) {\n      return false;\n    }\n\n    const queryParams = _objectSpread(_objectSpread({}, this._current.queryParams), newParams);\n\n    for (const k in queryParams) {\n      if (queryParams[k] === null || queryParams[k] === undefined) {\n        delete queryParams[k];\n      }\n    }\n\n    const pathDef = this._current.route.pathDef;\n    const params = this._current.params;\n    this.go(pathDef, params, queryParams);\n    return true;\n  }\n\n  withReplaceState(fn) {\n    return this.env.replaceState.withValue(true, fn);\n  }\n\n  watchPathChange() {\n    this._onEveryPath.depend();\n  }\n\n  getParam(key) {\n    // We update this._params reactive store only after we Tracker.afterFlush\n    // event to make sure, older routes does not get the updated value even\n    // before the new UI is rendered.\n    //\n    // But, then it cause issues for the new route(in the action)\n    // where if picks up older data.\n    //\n    // That's why we directly get values from the context when called\n    // inside an action.\n    const value = this._params.get(key);\n\n    if (this.env.inAction.get()) {\n      return this._current.params[key];\n    }\n\n    return value;\n  }\n\n  getQueryParam(key) {\n    // See above .getParam() for more information.\n    const value = this._queryParams.get(key);\n\n    if (this.env.inAction.get()) {\n      return this._current.queryParams[key];\n    }\n\n    return value;\n  }\n\n  getRouteName() {\n    this.watchPathChange();\n    return this._current.route.name;\n  }\n\n  route(pathDef, options, group) {\n    const currentRoute = super.route(pathDef, options, group);\n    const keys = [];\n    const regexp = PathToRegexp(pathDef, keys);\n\n    this._routeDefs.push({\n      regexp,\n      keys,\n      pathDef,\n      route: currentRoute\n    });\n\n    return currentRoute;\n  }\n\n  go(pathDef, fields, queryParams) {\n    const path = this.path(pathDef, fields, queryParams);\n\n    if (!path) {\n      logger.error('Path is required for FlowRouter.go()');\n      return;\n    }\n\n    const context = this._buildContext(path); // Implement idempotant routing\n\n\n    const insideAReload = this.env.reload.get();\n\n    if (this._current.path === path && !insideAReload) {\n      return;\n    }\n\n    const allQueryParams = this._decodeValues(Qs.parse(context.queryString)); // Remove basePath from the path\n\n\n    let pathname = context.pathname;\n\n    if (this._basePath) {\n      const cleanedBasePath = this._basePath.trim().replace(/^\\//, '').replace(/$\\//, '');\n\n      pathname = context.pathname.replace(\"/\".concat(cleanedBasePath), '');\n    }\n\n    for (let lc = 0; lc < this._routeDefs.length; lc++) {\n      const routeDef = this._routeDefs[lc];\n      const matched = routeDef.regexp.exec(pathname);\n\n      if (matched) {\n        const params = {};\n        routeDef.keys.forEach((_ref, index) => {\n          let {\n            name\n          } = _ref;\n          const match = matched[index + 1];\n          params[name] = typeof match !== 'undefined' ? decodeURIComponent(match) : match;\n        });\n\n        const matchedContext = _objectSpread(_objectSpread({}, context), {}, {\n          params,\n          queryParams: allQueryParams,\n          route: routeDef.route\n        });\n\n        this._navigate(matchedContext);\n\n        return;\n      }\n    }\n\n    const notFoundRoute = this._getNotFoundRoute();\n\n    const notFoundContext = _objectSpread(_objectSpread({}, context), {}, {\n      route: notFoundRoute,\n      params: {},\n      queryParams: allQueryParams\n    });\n\n    this._navigate(notFoundContext);\n  }\n\n  _navigate(context) {\n    const triggersEnter = [...this._triggersEnter, ...context.route._triggersEnter];\n\n    const redirectArgs = this._runTriggers(triggersEnter, context);\n\n    if (redirectArgs) {\n      return this.go(...redirectArgs);\n    } // Set the current context\n\n\n    const oldContext = this._current;\n    this._current = context; // Run exit handlers\n\n    if (oldContext && oldContext.route) {\n      const triggersExit = [...this._triggersExit, ...oldContext.route._triggersExit];\n\n      const exitRedirectArgs = this._runTriggers(triggersExit, oldContext);\n\n      if (exitRedirectArgs) {\n        return this.go(...exitRedirectArgs);\n      }\n    } // If we are inside a popstate event,\n    // we should not change the history\n\n\n    if (!this.env.inPopstate.get()) {\n      const useReplaceState = this.env.replaceState.get();\n      const {\n        path,\n        params,\n        queryParams\n      } = context;\n      const urlState = {\n        path,\n        params,\n        queryParams\n      };\n\n      if (useReplaceState) {\n        history.replaceState(urlState, window.title, path);\n      } else {\n        history.pushState(urlState, window.title, path);\n      }\n    }\n\n    this._applyRoute();\n  }\n\n  _applyRoute() {\n    const currentContext = this._current;\n    const route = currentContext.route; // otherwise, computations inside action will trigger to re-run\n    // this computation. which we do not need.\n\n    Tracker.nonreactive(() => {\n      this.env.inAction.withValue(true, () => {\n        route.callAction(currentContext);\n      });\n      Tracker.afterFlush(() => {\n        this._onEveryPath.changed();\n\n        this._updateReactiveDict(this._params, currentContext.params);\n\n        this._updateReactiveDict(this._queryParams, currentContext.queryParams);\n      });\n    });\n  }\n\n  _getNotFoundRoute() {\n    const notFoundOptions = this.notFound || {\n      action() {\n        const current = FlowRouter.current();\n        logger.error('There is no route for the path:', current.path);\n      }\n\n    };\n    return new Route(this, '*', notFoundOptions);\n  }\n\n  _runTriggers(triggers, context) {\n    let redirectArgs;\n\n    const redirectFn = (url, params, queryParams) => {\n      if (/^http(s)?:\\/\\//.test(url)) {\n        const message = \"\\n          Redirects to URLs outside of the app are not supported\\n          in this version of Flow Router.\\n          Use 'window.location = yourUrl' instead.\\n        \";\n        throw new Error(message);\n      }\n\n      redirectArgs = [url, params, queryParams];\n    };\n\n    Triggers.runTriggers(triggers, context, redirectFn, () => {});\n    return redirectArgs;\n  }\n\n  _decodeValues(obj) {\n    const newObj = {};\n    Object.keys(obj).forEach(key => {\n      const value = obj[key];\n      newObj[key] = typeof value !== 'undefined' ? decodeURIComponent(value) : value;\n    });\n    return newObj;\n  }\n\n  _updateReactiveDict(dict, newValues) {\n    const currentKeys = _.keys(newValues);\n\n    const oldKeys = _.keys(dict.keyDeps); // set new values\n\n\n    currentKeys.forEach(key => {\n      dict.set(key, newValues[key]);\n    }); // remove keys which does not exisits here\n\n    const removedKeys = _.difference(oldKeys, currentKeys);\n\n    removedKeys.forEach(key => {\n      dict.set(key, undefined);\n    });\n  }\n\n  _initTriggersAPI() {\n    this.triggers = {\n      enter: (triggers, filter) => {\n        triggers = Triggers.applyFilters(triggers, filter);\n\n        if (triggers.length) {\n          this._triggersEnter = this._triggersEnter.concat(triggers);\n        }\n      },\n      exit: (triggers, filter) => {\n        triggers = Triggers.applyFilters(triggers, filter);\n\n        if (triggers.length) {\n          this._triggersExit = this._triggersExit.concat(triggers);\n        }\n      }\n    };\n  } // This is required for implementing a router class.\n\n\n  _getCurrentRouteContext() {\n    return this._current;\n  }\n\n  _initClickAnchorHandlers() {\n    // This logic is taken from page.js\n    // See: https://github.com/visionmedia/page.js\n    const self = this;\n    const clickEvent = typeof document !== 'undefined' && document.ontouchstart ? 'touchstart' : 'click';\n    document.addEventListener(clickEvent, onclick, false);\n\n    function onclick(e) {\n      if (which(e) !== 1) {\n        return;\n      }\n\n      if (e.metaKey || e.ctrlKey || e.shiftKey) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      } // ensure link\n      // use shadow dom when available\n\n\n      let el = e.path ? e.path[0] : e.target;\n\n      while (el && el.nodeName !== 'A') {\n        el = el.parentNode;\n      }\n\n      if (!el || el.nodeName !== 'A') {\n        return;\n      } // Ignore if tag has\n      // 1. \"download\" attribute\n      // 2. rel=\"external\" attribute\n\n\n      if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') {\n        return;\n      } // ensure non-hash for the same path\n\n\n      const link = el.getAttribute('href');\n\n      if (el.pathname === location.pathname && (el.hash || link === '#')) {\n        return;\n      } // Check for mailto: in the href\n\n\n      if (link && link.indexOf('mailto:') > -1) {\n        return;\n      } // check target\n\n\n      if (el.target) {\n        return;\n      } // x-origin\n\n\n      if (!sameOrigin(el.href)) {\n        return;\n      } // rebuild path\n\n\n      let path = el.pathname + el.search + (el.hash || ''); // strip leading \"/[drive letter]:\" on NW.js on Windows\n\n      if (typeof process !== 'undefined' && path.match(/^\\/[a-zA-Z]:\\//)) {\n        path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n      }\n\n      e.preventDefault();\n      self.go(path);\n    }\n\n    function which(e) {\n      e = e || window.event;\n      return e.which === null ? e.button : e.which;\n    }\n\n    function sameOrigin(href) {\n      let origin = \"\".concat(location.protocol, \"//\").concat(location.hostname);\n\n      if (location.port) {\n        origin += \":\".concat(location.port);\n      }\n\n      return href && href.indexOf(origin) === 0;\n    }\n  }\n\n  _initiateHandlingBackButton() {\n    const self = this;\n    window.addEventListener('popstate', onpopstate, false);\n\n    function onpopstate() {\n      // In some browsers they fire popstate event right after page has loaded.\n      // That's not the correct way for the popstate.\n      // Normally, we need to handle it.\n      // But, we don't want to do it since self.go() is already idempotent.\n      const path = location.pathname + location.search + (location.hash || '');\n      self.env.inPopstate.withValue(true, function () {\n        self.go(path);\n      });\n    }\n  }\n\n  _buildContext(path) {\n    const parsedUrl = ParseUrl({\n      url: path\n    });\n    const context = {\n      path,\n      pathname: parsedUrl.pathname,\n      hash: parsedUrl.hash ? parsedUrl.hash.substr(1) : null,\n      queryString: parsedUrl.search ? parsedUrl.search.substr(1) : null\n    };\n    return context;\n  }\n\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"group.js\":function module(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jns_flow-router-ssr/client/group.js                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nGroup = class extends SharedGroup {\n  constructor(router, options, parent) {\n    super(router, options, parent);\n    options = options || {};\n    this.name = options.name;\n    this._triggersEnter = options.triggersEnter || [];\n    this._triggersExit = options.triggersExit || [];\n    this._subscriptions = options.subscriptions || Function.prototype;\n\n    if (this.parent) {\n      this.prefix = parent.prefix + this.prefix;\n      this._triggersEnter = parent._triggersEnter.concat(this._triggersEnter);\n      this._triggersExit = this._triggersExit.concat(parent._triggersExit);\n    }\n  }\n\n  route(pathDef, options, group) {\n    options = options || {};\n    const triggersEnter = options.triggersEnter || [];\n    options.triggersEnter = this._triggersEnter.concat(triggersEnter);\n    const triggersExit = options.triggersExit || [];\n    options.triggersExit = triggersExit.concat(this._triggersExit);\n    return super.route(pathDef, options, group);\n  }\n\n  callSubscriptions(current) {\n    if (this.parent) {\n      this.parent.callSubscriptions(current);\n    }\n\n    this._subscriptions.call(current.route, current.params, current.queryParams);\n  }\n\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"route.js\":function module(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jns_flow-router-ssr/client/route.js                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nRoute = class extends SharedRoute {\n  constructor(router, pathDef, options, group) {\n    super(router, pathDef, options, group);\n    options = options || {};\n    this._triggersEnter = options.triggersEnter || [];\n    this._triggersExit = options.triggersExit || [];\n  } // This is a required method for the route. It's crucial to\n  // have a dummy method even we don't need it.\n\n\n  _init() {}\n\n  callAction(current) {\n    this._action(current.params, current.queryParams);\n  }\n\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_init.js\":function module(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jns_flow-router-ssr/client/_init.js                                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n// Initialize FlowRouter\nMeteor.startup(() => {\n  if (!FlowRouter._askedToWait) {\n    FlowRouter.initialize();\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"node_modules\":{\"qs\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/qs/package.json                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"qs\",\n  \"version\": \"6.3.0\",\n  \"main\": \"lib/index.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/qs/lib/index.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"stringify.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/qs/lib/stringify.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n'use strict';\n\nvar utils = require('./utils');\nvar formats = require('./formats');\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaults = {\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar stringify = function stringify(object, prefix, generateArrayPrefix, strictNullHandling, skipNulls, encoder, filter, sort, allowDots, serializeDate, formatter) {\n    var obj = object;\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (obj === null) {\n        if (strictNullHandling) {\n            return encoder ? encoder(prefix) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (typeof obj === 'string' || typeof obj === 'number' || typeof obj === 'boolean' || utils.isBuffer(obj)) {\n        if (encoder) {\n            return [formatter(encoder(prefix)) + '=' + formatter(encoder(obj))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (Array.isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        if (Array.isArray(obj)) {\n            values = values.concat(stringify(\n                obj[key],\n                generateArrayPrefix(prefix, key),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter\n            ));\n        } else {\n            values = values.concat(stringify(\n                obj[key],\n                prefix + (allowDots ? '.' + key : '[' + key + ']'),\n                generateArrayPrefix,\n                strictNullHandling,\n                skipNulls,\n                encoder,\n                filter,\n                sort,\n                allowDots,\n                serializeDate,\n                formatter\n            ));\n        }\n    }\n\n    return values;\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = opts || {};\n    var delimiter = typeof options.delimiter === 'undefined' ? defaults.delimiter : options.delimiter;\n    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n    var skipNulls = typeof options.skipNulls === 'boolean' ? options.skipNulls : defaults.skipNulls;\n    var encode = typeof options.encode === 'boolean' ? options.encode : defaults.encode;\n    var encoder = encode ? (typeof options.encoder === 'function' ? options.encoder : defaults.encoder) : null;\n    var sort = typeof options.sort === 'function' ? options.sort : null;\n    var allowDots = typeof options.allowDots === 'undefined' ? false : options.allowDots;\n    var serializeDate = typeof options.serializeDate === 'function' ? options.serializeDate : defaults.serializeDate;\n    if (typeof options.format === 'undefined') {\n        options.format = formats.default;\n    } else if (!Object.prototype.hasOwnProperty.call(formats.formatters, options.format)) {\n        throw new TypeError('Unknown format option provided.');\n    }\n    var formatter = formats.formatters[options.format];\n    var objKeys;\n    var filter;\n\n    if (options.encoder !== null && options.encoder !== undefined && typeof options.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (Array.isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (options.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = options.arrayFormat;\n    } else if ('indices' in options) {\n        arrayFormat = options.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (sort) {\n        objKeys.sort(sort);\n    }\n\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (skipNulls && obj[key] === null) {\n            continue;\n        }\n\n        keys = keys.concat(stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            strictNullHandling,\n            skipNulls,\n            encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            formatter\n        ));\n    }\n\n    return keys.join(delimiter);\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"utils.js\":function module(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/qs/lib/utils.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n'use strict';\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nexports.arrayToObject = function (source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nexports.merge = function (target, source, options) {\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (Array.isArray(target)) {\n            target.push(source);\n        } else if (typeof target === 'object') {\n            target[source] = true;\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (Array.isArray(target) && !Array.isArray(source)) {\n        mergeTarget = exports.arrayToObject(target, options);\n    }\n\n    if (Array.isArray(target) && Array.isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                if (target[i] && typeof target[i] === 'object') {\n                    target[i] = exports.merge(target[i], item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (Object.prototype.hasOwnProperty.call(acc, key)) {\n            acc[key] = exports.merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nexports.decode = function (str) {\n    try {\n        return decodeURIComponent(str.replace(/\\+/g, ' '));\n    } catch (e) {\n        return str;\n    }\n};\n\nexports.encode = function (str) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = typeof str === 'string' ? str : String(str);\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D || // -\n            c === 0x2E || // .\n            c === 0x5F || // _\n            c === 0x7E || // ~\n            (c >= 0x30 && c <= 0x39) || // 0-9\n            (c >= 0x41 && c <= 0x5A) || // a-z\n            (c >= 0x61 && c <= 0x7A) // A-Z\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        out += hexTable[0xF0 | (c >> 18)] + hexTable[0x80 | ((c >> 12) & 0x3F)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nexports.compact = function (obj, references) {\n    if (typeof obj !== 'object' || obj === null) {\n        return obj;\n    }\n\n    var refs = references || [];\n    var lookup = refs.indexOf(obj);\n    if (lookup !== -1) {\n        return refs[lookup];\n    }\n\n    refs.push(obj);\n\n    if (Array.isArray(obj)) {\n        var compacted = [];\n\n        for (var i = 0; i < obj.length; ++i) {\n            if (obj[i] && typeof obj[i] === 'object') {\n                compacted.push(exports.compact(obj[i], refs));\n            } else if (typeof obj[i] !== 'undefined') {\n                compacted.push(obj[i]);\n            }\n        }\n\n        return compacted;\n    }\n\n    var keys = Object.keys(obj);\n    keys.forEach(function (key) {\n        obj[key] = exports.compact(obj[key], refs);\n    });\n\n    return obj;\n};\n\nexports.isRegExp = function (obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nexports.isBuffer = function (obj) {\n    if (obj === null || typeof obj === 'undefined') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"formats.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/qs/lib/formats.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nmodule.exports = {\n    'default': 'RFC3986',\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return value;\n        }\n    },\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"parse.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/qs/lib/parse.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    arrayLimit: 20,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    parameterLimit: 1000,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar parseValues = function parseValues(str, options) {\n    var obj = {};\n    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);\n\n    for (var i = 0; i < parts.length; ++i) {\n        var part = parts[i];\n        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part);\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos));\n            val = options.decoder(part.slice(pos + 1));\n        }\n        if (has.call(obj, key)) {\n            obj[key] = [].concat(obj[key]).concat(val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function parseObject(chain, val, options) {\n    if (!chain.length) {\n        return val;\n    }\n\n    var root = chain.shift();\n\n    var obj;\n    if (root === '[]') {\n        obj = [];\n        obj = obj.concat(parseObject(chain, val, options));\n    } else {\n        obj = options.plainObjects ? Object.create(null) : {};\n        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;\n        var index = parseInt(cleanRoot, 10);\n        if (\n            !isNaN(index) &&\n            root !== cleanRoot &&\n            String(index) === cleanRoot &&\n            index >= 0 &&\n            (options.parseArrays && index <= options.arrayLimit)\n        ) {\n            obj = [];\n            obj[index] = parseObject(chain, val, options);\n        } else {\n            obj[cleanRoot] = parseObject(chain, val, options);\n        }\n    }\n\n    return obj;\n};\n\nvar parseKeys = function parseKeys(givenKey, val, options) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^\\.\\[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var parent = /^([^\\[\\]]*)/;\n    var child = /(\\[[^\\[\\]]*\\])/g;\n\n    // Get the parent\n\n    var segment = parent.exec(key);\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (segment[1]) {\n        // If we aren't using plain objects, optionally prefix keys\n        // that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, segment[1])) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(segment[1]);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while ((segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].replace(/\\[|\\]/g, ''))) {\n            if (!options.allowPrototypes) {\n                continue;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options);\n};\n\nmodule.exports = function (str, opts) {\n    var options = opts || {};\n\n    if (options.decoder !== null && options.decoder !== undefined && typeof options.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    options.delimiter = typeof options.delimiter === 'string' || utils.isRegExp(options.delimiter) ? options.delimiter : defaults.delimiter;\n    options.depth = typeof options.depth === 'number' ? options.depth : defaults.depth;\n    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : defaults.arrayLimit;\n    options.parseArrays = options.parseArrays !== false;\n    options.decoder = typeof options.decoder === 'function' ? options.decoder : defaults.decoder;\n    options.allowDots = typeof options.allowDots === 'boolean' ? options.allowDots : defaults.allowDots;\n    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : defaults.plainObjects;\n    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : defaults.allowPrototypes;\n    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : defaults.parameterLimit;\n    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : defaults.strictNullHandling;\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options);\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    return utils.compact(obj);\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"path-to-regexp\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/path-to-regexp/package.json                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"path-to-regexp\",\n  \"version\": \"1.7.0\",\n  \"main\": \"index.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/path-to-regexp/index.js                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isarray = require('isarray')\n\n/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = options && options.delimiter || '/'\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      continue\n    }\n\n    var next = str[index]\n    var prefix = res[2]\n    var name = res[3]\n    var capture = res[4]\n    var group = res[5]\n    var modifier = res[6]\n    var asterisk = res[7]\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n    }\n\n    var partial = prefix != null && next != null && next !== prefix\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = res[2] || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    })\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index)\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path)\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (obj, opts) {\n    var path = ''\n    var data = obj || {}\n    var options = opts || {}\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n\n        continue\n      }\n\n      var value = data[token.name]\n      var segment\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value)\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      })\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options))\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var route = ''\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = '(?:' + token.pattern + ')'\n\n      keys.push(token)\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*'\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?'\n        } else {\n          capture = prefix + '(' + capture + ')?'\n        }\n      } else {\n        capture = prefix + '(' + capture + ')'\n      }\n\n      route += capture\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/')\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?'\n  }\n\n  if (end) {\n    route += '$'\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)'\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options)\n    keys = []\n  }\n\n  options = options || {}\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"isarray\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/isarray/package.json                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"isarray\",\n  \"version\": \"0.0.1\",\n  \"main\": \"index.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/isarray/index.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"parseurl\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/parseurl/package.json                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"parseurl\",\n  \"version\": \"1.3.1\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/parseurl/index.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n */\n\nvar url = require('url')\nvar parse = url.parse\nvar Url = url.Url\n\n/**\n * Pattern for a simple path case.\n * See: https://github.com/joyent/node/pull/7878\n */\n\nvar simplePathRegExp = /^(\\/\\/?(?!\\/)[^\\?#\\s]*)(\\?[^#\\s]*)?$/\n\n/**\n * Exports.\n */\n\nmodule.exports = parseurl\nmodule.exports.original = originalurl\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @api public\n */\n\nfunction parseurl(req) {\n  var url = req.url\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return req._parsedUrl = parsed\n};\n\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @api public\n */\n\nfunction originalurl(req) {\n  var url = req.originalUrl\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url)\n  parsed._raw = url\n\n  return req._parsedOriginalUrl = parsed\n};\n\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @api private\n */\n\nfunction fastparse(str) {\n  // Try fast path regexp\n  // See: https://github.com/joyent/node/pull/7878\n  var simplePath = typeof str === 'string' && simplePathRegExp.exec(str)\n\n  // Construct simple URL\n  if (simplePath) {\n    var pathname = simplePath[1]\n    var search = simplePath[2] || null\n    var url = Url !== undefined\n      ? new Url()\n      : {}\n    url.path = str\n    url.href = str\n    url.pathname = pathname\n    url.search = search\n    url.query = search && search.substr(1)\n\n    return url\n  }\n\n  return parse(str)\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @api private\n */\n\nfunction fresh(url, parsedUrl) {\n  return typeof parsedUrl === 'object'\n    && parsedUrl !== null\n    && (Url === undefined || parsedUrl instanceof Url)\n    && parsedUrl._raw === url\n}\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"url\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/url/package.json                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"url\",\n  \"version\": \"0.11.0\",\n  \"main\": \"./url.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"url.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/url/url.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"util.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/url/util.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"punycode\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/punycode/package.json                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"punycode\",\n  \"version\": \"1.3.2\",\n  \"main\": \"punycode.js\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"punycode.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/punycode/punycode.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"querystring\":{\"package.json\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/querystring/package.json                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = {\n  \"name\": \"querystring\",\n  \"version\": \"0.2.0\"\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function module(require,exports){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/querystring/index.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"decode.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/querystring/decode.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"encode.js\":function module(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jns_flow-router-ssr/node_modules/querystring/encode.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/lib/router.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/lib/group.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/lib/route.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/client/triggers.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/client/router.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/client/group.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/client/route.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/lib/_init.js\");\nrequire(\"/node_modules/meteor/jns:flow-router-ssr/client/_init.js\");\n\n/* Exports */\nPackage._define(\"jns:flow-router-ssr\", {\n  FlowRouter: FlowRouter\n});\n\n})();\n","servePath":"/packages/jns_flow-router-ssr.js","sourceMap":{"version":3,"sources":["packages/jns:flow-router-ssr/lib/router.js","packages/jns:flow-router-ssr/lib/group.js","packages/jns:flow-router-ssr/lib/route.js","packages/jns:flow-router-ssr/lib/_init.js","packages/jns:flow-router-ssr/client/triggers.js","packages/jns:flow-router-ssr/client/router.js","packages/jns:flow-router-ssr/client/group.js","packages/jns:flow-router-ssr/client/route.js","packages/jns:flow-router-ssr/client/_init.js"],"names":["Qs","module","link","default","v","PathToRegexp","SharedRouter","constructor","_routes","_routesMap","_onRouteCallbacks","env","trailingSlash","Meteor","EnvironmentVariable","route","pathDef","options","group","test","message","Error","currentRoute","Route","_init","push","name","_triggerRouteRegister","path","fields","queryParams","newPath","_basePath","_encodeValues","toPath","compile","replace","match","get","_","last","strQueryParams","stringify","go","watchPathChange","Group","url","completePath","basePath","pathWithoutBase","RegExp","absoluteUrl","current","context","clone","_getCurrentRouteContext","EJSON","params","onRouteRegister","cb","obj","newObj","Object","keys","forEach","key","value","encodeURIComponent","routePublicApi","pick","omittingOptionFields","omit","withTrailingSlash","fn","withValue","SharedGroup","router","parent","prefix","_router","SharedRoute","_action","action","Function","prototype","FlowRouter","Router","Package","Triggers","applyFilters","triggers","filter","Array","only","except","createRouteBoundTriggers","names","negate","namesMap","filteredTriggers","map","originalTrigger","modifiedTrigger","next","routeName","matched","runTriggers","redirectFn","after","abort","inCurrentLoop","alreadyRedirected","lc","length","trigger","doRedirect","doStop","_objectSpread","ParseUrl","logger","console","_current","_onEveryPath","Tracker","Dependency","_params","ReactiveDict","_queryParams","_askedToWait","_initialized","_triggersEnter","_triggersExit","__meteor_runtime_config__","ROOT_URL_PATH_PREFIX","replaceState","reload","inAction","inPopstate","_routeDefs","_initTriggersAPI","_initClickAnchorHandlers","initialize","location","pathname","search","hash","_initiateHandlingBackButton","wait","setParams","newParams","existingParams","k","undefined","setQueryParams","withReplaceState","depend","getParam","getQueryParam","getRouteName","regexp","error","_buildContext","insideAReload","allQueryParams","_decodeValues","parse","queryString","cleanedBasePath","trim","routeDef","exec","index","decodeURIComponent","matchedContext","_navigate","notFoundRoute","_getNotFoundRoute","notFoundContext","triggersEnter","redirectArgs","_runTriggers","oldContext","triggersExit","exitRedirectArgs","useReplaceState","urlState","history","window","title","pushState","_applyRoute","currentContext","nonreactive","callAction","afterFlush","changed","_updateReactiveDict","notFoundOptions","notFound","dict","newValues","currentKeys","oldKeys","keyDeps","set","removedKeys","difference","enter","concat","exit","self","clickEvent","document","ontouchstart","addEventListener","onclick","e","which","metaKey","ctrlKey","shiftKey","defaultPrevented","el","target","nodeName","parentNode","hasAttribute","getAttribute","indexOf","sameOrigin","href","process","preventDefault","event","button","origin","protocol","hostname","port","onpopstate","parsedUrl","substr","_subscriptions","subscriptions","callSubscriptions","call","startup"],"mappings":"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","file":"/packages/jns_flow-router-ssr.js","sourcesContent":["import Qs from 'qs';\nimport PathToRegexp from 'path-to-regexp';\n\nSharedRouter = class {\n  constructor() {\n    this._routes = [];\n    this._routesMap = {};\n\n    // holds onRoute callbacks\n    this._onRouteCallbacks = [];\n\n    this.env = {};\n    this.env.trailingSlash = new Meteor.EnvironmentVariable();\n  }\n\n  route(pathDef, options, group) {\n    if (!/^\\/.*/.test(pathDef)) {\n      const message = \"route's path must start with '/'\";\n      throw new Error(message);\n    }\n\n    options = options || {};\n\n    const currentRoute = new Route(this, pathDef, options, group);\n    currentRoute._init();\n\n    this._routes.push(currentRoute);\n\n\n    if (options.name) {\n      this._routesMap[options.name] = currentRoute;\n    }\n\n    this._triggerRouteRegister(currentRoute);\n\n    return currentRoute;\n  }\n\n  // XXX this function needs to be cleaned up if possible by removing `if (this.isServer)`\n  // and `if (this.isClient)` if possible\n  path(pathDef, fields = {}, queryParams = {}) {\n    if (this._routesMap[pathDef]) {\n      pathDef = this._routesMap[pathDef].path;\n    }\n\n    let newPath = '';\n\n    // Prefix the path with the router global prefix\n    if (this._basePath) {\n      newPath += `/${this._basePath}/`;\n    }\n\n    // Encode query params\n    queryParams = this._encodeValues(queryParams);\n\n    const toPath = PathToRegexp.compile(pathDef);\n    newPath += toPath(fields);\n\n    // If we have one optional parameter in path definition e.g.\n    // /:category?\n    // and the parameter isn't present, path will be an empty string.\n    // We have this check as a value for path is required by e.g. FlowRouter.go()\n    if (!newPath) {\n      newPath = '/';\n    }\n\n    // Replace multiple slashes with single slash\n    newPath = newPath.replace(/\\/\\/+/g, '/');\n\n    // remove trailing slash\n    // but keep the root slash if it's the only one\n    newPath = newPath.match(/^\\/{1}$/) ? newPath : newPath.replace(/\\/$/, '');\n\n    // explictly asked to add a trailing slash\n    if (this.env.trailingSlash.get() && _.last(newPath) !== '/') {\n      newPath += '/';\n    }\n\n    const strQueryParams = Qs.stringify(queryParams || {});\n\n    if (strQueryParams) {\n      newPath += `?${strQueryParams}`;\n    }\n\n    return newPath;\n  }\n\n  go() {\n    // client only\n  }\n\n  watchPathChange() {\n    // client only\n  }\n\n  group(options) {\n    return new Group(this, options);\n  }\n\n  url(...args) {\n    // We need to remove the leading base path, or \"/\", as it will be inserted\n    // automatically by `Meteor.absoluteUrl` as documented in:\n    // http://docs.meteor.com/#/full/meteor_absoluteurl\n    const completePath = this.path(...args);\n    const basePath = this._basePath || '/';\n    const pathWithoutBase = completePath.replace(RegExp(`^${basePath}`), '');\n    return Meteor.absoluteUrl(pathWithoutBase);\n  }\n\n  // For client:\n  // .current is not reactive on the client\n  // This is by design. use .getParam() instead\n  // If you really need to watch the path change, use .watchPathChange()\n  current() {\n    // We can't trust outside, that's why we clone this\n    // Anyway, we can't clone the whole object since it has non-jsonable values\n    // That's why we clone what's really needed.\n    const context = _.clone(this._getCurrentRouteContext());\n\n    context.queryParams = EJSON.clone(context.queryParams);\n    context.params = EJSON.clone(context.params);\n\n    return context;\n  }\n\n  onRouteRegister(cb) {\n    this._onRouteCallbacks.push(cb);\n  }\n\n  _encodeValues(obj) {\n    const newObj = {};\n    Object.keys(obj).forEach(key => {\n      const value = obj[key];\n      newObj[key] = typeof value !== 'undefined' ? encodeURIComponent(value) : value;\n    });\n\n    return newObj;\n  }\n\n  _triggerRouteRegister(currentRoute) {\n    // We should only need to send a safe set of fields on the route\n    // object.\n    // This is not to hide what's inside the route object, but to show\n    // these are the public APIs\n    const routePublicApi = _.pick(currentRoute, 'name', 'pathDef', 'path');\n    const omittingOptionFields = [\n      'triggersEnter', 'triggersExit', 'name', 'action'\n    ];\n    routePublicApi.options = _.omit(currentRoute.options, omittingOptionFields);\n\n    this._onRouteCallbacks.forEach((cb) => {\n      cb(routePublicApi);\n    });\n  }\n\n  _getCurrentRouteContext() {\n    throw new Error('Not implemented');\n  }\n\n  _init() {\n    throw new Error('Not implemented');\n  }\n\n  withTrailingSlash(fn) {\n    return this.env.trailingSlash.withValue(true, fn);\n  }\n};\n","SharedGroup = class {\n  constructor(router, options, parent) {\n    options = options || {};\n\n    if (options.prefix && !/^\\/.*/.test(options.prefix)) {\n      const message = \"group's prefix must start with '/'\";\n      throw new Error(message);\n    }\n\n    this.prefix = options.prefix || '';\n    this.options = options;\n    this._router = router;\n    this.parent = parent;\n  }\n\n  route(pathDef, options, group) {\n    options = options || {};\n\n    if (!/^\\/.*/.test(pathDef)) {\n      const message = \"route's path must start with '/'\";\n      throw new Error(message);\n    }\n\n    pathDef = this.prefix + pathDef;\n\n    group = group || this;\n\n    return this._router.route(pathDef, options, group);\n  }\n\n  group(options) {\n    return new Group(this._router, options, this);\n  }\n};\n","SharedRoute = class {\n  constructor(router, pathDef, options, group) {\n    options = options || {};\n\n    this.options = options;\n\n    this.name = options.name;\n\n    this.pathDef = pathDef;\n\n    // Route.path is deprecated and will be removed in 3.0\n    this.path = this.pathDef;\n\n    this._router = router;\n\n    this._action = options.action || Function.prototype;\n\n    this.group = group;\n  }\n};\n","// Export Router Instance\nFlowRouter = new Router();\nFlowRouter.Router = Router;\nFlowRouter.Route = Route;\n\nPackage['kadira:flow-router-ssr'] = {FlowRouter};\n","// a set of utility functions for triggers\n\nTriggers = {};\n\n// Apply filters for a set of triggers\n// @triggers - a set of triggers\n// @filter - filter with array fileds with `only` and `except`\n//           support only either `only` or `except`, but not both\nTriggers.applyFilters = (triggers, filter) => {\n  if (!(triggers instanceof Array)) {\n    triggers = [triggers];\n  }\n\n  if (!filter) {\n    return triggers;\n  }\n\n  if (filter.only && filter.except) {\n    throw new Error(\"Triggers don't support only and except filters at once\");\n  }\n\n  if (filter.only && !(filter.only instanceof Array)) {\n    throw new Error('only filters needs to be an array');\n  }\n\n  if (filter.except && !(filter.except instanceof Array)) {\n    throw new Error('except filters needs to be an array');\n  }\n\n  if (filter.only) {\n    return Triggers.createRouteBoundTriggers(triggers, filter.only);\n  }\n\n  if (filter.except) {\n    return Triggers.createRouteBoundTriggers(triggers, filter.except, true);\n  }\n\n  throw new Error('Provided a filter but not supported');\n};\n\n//  create triggers by bounding them to a set of route names\n//  @triggers - a set of triggers\n//  @names - list of route names to be bound (trigger runs only for these names)\n//  @negate - negate the result (triggers won't run for above names)\nTriggers.createRouteBoundTriggers = (triggers, names, negate) => {\n  const namesMap = {};\n\n  names.forEach((name) => {\n    namesMap[name] = true;\n  });\n\n  const filteredTriggers = triggers.map((originalTrigger) => {\n    const modifiedTrigger = (context, next) => {\n      const routeName = context.route.name;\n      let matched = namesMap[routeName] ? 1 : -1;\n      matched = negate ? matched * -1 : matched;\n\n      if (matched === 1) {\n        originalTrigger(context, next);\n      }\n    };\n    return modifiedTrigger;\n  });\n\n  return filteredTriggers;\n};\n\n//  run triggers and abort if redirected or callback stopped\n//  @triggers - a set of triggers\n//  @context - context we need to pass (it must have the route)\n//  @redirectFn - function which used to redirect\n//  @after - called after if only all the triggers runs\nTriggers.runTriggers = (triggers, context, redirectFn, after) => {\n  let abort = false;\n  let inCurrentLoop = true;\n  let alreadyRedirected = false;\n\n  for (let lc = 0; lc < triggers.length; lc++) {\n    const trigger = triggers[lc];\n    trigger(context, doRedirect, doStop);\n\n    if (abort) {\n      return;\n    }\n  }\n\n  // mark that, we've exceeds the currentEventloop for\n  // this set of triggers.\n  inCurrentLoop = false;\n  after();\n\n  function doRedirect(url, params, queryParams) {\n    if (alreadyRedirected) {\n      throw new Error('already redirected');\n    }\n\n    if (!inCurrentLoop) {\n      throw new Error('redirect needs to be done in sync');\n    }\n\n    if (!url) {\n      throw new Error('trigger redirect requires an URL');\n    }\n\n    abort = true;\n    alreadyRedirected = true;\n    redirectFn(url, params, queryParams);\n  }\n\n  function doStop() {\n    abort = true;\n  }\n};\n","/* eslint new-cap: 0, no-loop-func: 0, prefer-arrow-callback: 0 */\nimport Qs from 'qs';\nimport PathToRegexp from 'path-to-regexp';\nimport ParseUrl from 'parseurl';\nconst logger = console;\n\nRouter = class extends SharedRouter {\n  constructor() {\n    super();\n\n    // holds the current context\n    this._current = {};\n\n    // tracks the current path change\n    this._onEveryPath = new Tracker.Dependency();\n    this._params = new ReactiveDict();\n    this._queryParams = new ReactiveDict();\n\n    // if _askedToWait is true. We don't automatically start the router\n    // in Meteor.startup callback. (see client/_init.js)\n    // Instead user need to call `.initialize()\n    this._askedToWait = false;\n    this._initialized = false;\n\n    this._triggersEnter = [];\n    this._triggersExit = [];\n\n    // Meteor exposes to the client the path prefix that was defined using the\n    // ROOT_URL environement variable on the server using the global runtime\n    // configuration. See #315.\n    this._basePath = __meteor_runtime_config__.ROOT_URL_PATH_PREFIX || '';\n\n    this.env.replaceState = new Meteor.EnvironmentVariable();\n    this.env.reload = new Meteor.EnvironmentVariable();\n    this.env.inAction = new Meteor.EnvironmentVariable();\n    this.env.inPopstate = new Meteor.EnvironmentVariable();\n\n    // this holds route pathDefs\n    this._routeDefs = [];\n\n    this._initTriggersAPI();\n    this._initClickAnchorHandlers();\n  }\n\n  initialize(options) {\n    options = options || {};\n\n    if (this._initialized) {\n      throw new Error('FlowRouter is already initialized');\n    }\n\n    this._initialized = true;\n    const path = location.pathname + location.search + (location.hash || '');\n    this._initiateHandlingBackButton();\n    this.go(path);\n  }\n\n  wait() {\n    if (this._initialized) {\n      throw new Error(\"can't wait after FlowRouter has been initialized\");\n    }\n\n    this._askedToWait = true;\n  }\n\n  reload() {\n    this.env.reload.withValue(true, () => {\n      this.go(this._current.path);\n    });\n  }\n\n  setParams(newParams) {\n    if (!this._current.route) {\n      return false;\n    }\n\n    const pathDef = this._current.route.pathDef;\n    const existingParams = this._current.params;\n\n    const params = {\n      ...existingParams,\n      ...newParams\n    };\n\n    for (const k in params) {\n      if (params[k] === null || params[k] === undefined) {\n        delete params[k];\n      }\n    }\n\n    const queryParams = this._current.queryParams;\n\n    this.go(pathDef, params, queryParams);\n    return true;\n  }\n\n  setQueryParams(newParams) {\n    if (!this._current.route) {\n      return false;\n    }\n\n    const queryParams = {\n      ...this._current.queryParams,\n      ...newParams\n    };\n\n    for (const k in queryParams) {\n      if (queryParams[k] === null || queryParams[k] === undefined) {\n        delete queryParams[k];\n      }\n    }\n\n    const pathDef = this._current.route.pathDef;\n    const params = this._current.params;\n    this.go(pathDef, params, queryParams);\n    return true;\n  }\n\n  withReplaceState(fn) {\n    return this.env.replaceState.withValue(true, fn);\n  }\n\n  watchPathChange() {\n    this._onEveryPath.depend();\n  }\n\n  getParam(key) {\n    // We update this._params reactive store only after we Tracker.afterFlush\n    // event to make sure, older routes does not get the updated value even\n    // before the new UI is rendered.\n    //\n    // But, then it cause issues for the new route(in the action)\n    // where if picks up older data.\n    //\n    // That's why we directly get values from the context when called\n    // inside an action.\n    const value = this._params.get(key);\n    if (this.env.inAction.get()) {\n      return this._current.params[key];\n    }\n\n    return value;\n  }\n\n  getQueryParam(key) {\n    // See above .getParam() for more information.\n    const value = this._queryParams.get(key);\n    if (this.env.inAction.get()) {\n      return this._current.queryParams[key];\n    }\n\n    return value;\n  }\n\n  getRouteName() {\n    this.watchPathChange();\n    return this._current.route.name;\n  }\n\n  route(pathDef, options, group) {\n    const currentRoute = super.route(pathDef, options, group);\n    const keys = [];\n    const regexp = PathToRegexp(pathDef, keys);\n    this._routeDefs.push({regexp, keys, pathDef, route: currentRoute});\n\n    return currentRoute;\n  }\n\n  go(pathDef, fields, queryParams) {\n    const path = this.path(pathDef, fields, queryParams);\n\n    if (!path) {\n      logger.error('Path is required for FlowRouter.go()');\n      return;\n    }\n\n    const context = this._buildContext(path);\n\n    // Implement idempotant routing\n    const insideAReload = this.env.reload.get();\n    if (this._current.path === path && !insideAReload) {\n      return;\n    }\n\n    const allQueryParams = this._decodeValues(Qs.parse(context.queryString));\n\n    // Remove basePath from the path\n    let pathname = context.pathname;\n    if (this._basePath) {\n      const cleanedBasePath = this._basePath\n        .trim()\n        .replace(/^\\//, '')\n        .replace(/$\\//, '');\n      pathname = context.pathname.replace(`/${cleanedBasePath}`, '');\n    }\n\n    for (let lc = 0; lc < this._routeDefs.length; lc++) {\n      const routeDef = this._routeDefs[lc];\n      const matched = routeDef.regexp.exec(pathname);\n      if (matched) {\n        const params = {};\n        routeDef.keys.forEach(({name}, index) => {\n          const match = matched[index + 1];\n          params[name] = typeof match !== 'undefined' ? decodeURIComponent(match) : match;\n        });\n\n        const matchedContext = {\n          ...context,\n          params,\n          queryParams: allQueryParams,\n          route: routeDef.route\n        };\n\n        this._navigate(matchedContext);\n        return;\n      }\n    }\n\n    const notFoundRoute = this._getNotFoundRoute();\n    const notFoundContext = {\n      ...context,\n      route: notFoundRoute,\n      params: {},\n      queryParams: allQueryParams\n    };\n    this._navigate(notFoundContext);\n  }\n\n  _navigate(context) {\n    const triggersEnter = [\n      ...this._triggersEnter,\n      ...context.route._triggersEnter\n    ];\n    const redirectArgs = this._runTriggers(triggersEnter, context);\n\n    if (redirectArgs) {\n      return this.go(...redirectArgs);\n    }\n\n    // Set the current context\n    const oldContext = this._current;\n    this._current = context;\n\n    // Run exit handlers\n    if (oldContext && oldContext.route) {\n      const triggersExit = [\n        ...this._triggersExit,\n        ...oldContext.route._triggersExit\n      ];\n      const exitRedirectArgs = this._runTriggers(triggersExit, oldContext);\n\n      if (exitRedirectArgs) {\n        return this.go(...exitRedirectArgs);\n      }\n    }\n\n    // If we are inside a popstate event,\n    // we should not change the history\n    if (!this.env.inPopstate.get()) {\n      const useReplaceState = this.env.replaceState.get();\n      const {path, params, queryParams} = context;\n      const urlState = {path, params, queryParams};\n      if (useReplaceState) {\n        history.replaceState(urlState, window.title, path);\n      } else {\n        history.pushState(urlState, window.title, path);\n      }\n    }\n\n    this._applyRoute();\n  }\n\n  _applyRoute() {\n    const currentContext = this._current;\n    const route = currentContext.route;\n\n    // otherwise, computations inside action will trigger to re-run\n    // this computation. which we do not need.\n    Tracker.nonreactive(() => {\n      this.env.inAction.withValue(true, () => {\n        route.callAction(currentContext);\n      });\n\n      Tracker.afterFlush(() => {\n        this._onEveryPath.changed();\n        this._updateReactiveDict(this._params, currentContext.params);\n        this._updateReactiveDict(this._queryParams, currentContext.queryParams);\n      });\n    });\n  }\n\n  _getNotFoundRoute() {\n    const notFoundOptions = this.notFound || {\n      action() {\n        const current = FlowRouter.current();\n        logger.error('There is no route for the path:', current.path);\n      }\n    };\n\n    return new Route(this, '*', notFoundOptions);\n  }\n\n  _runTriggers(triggers, context) {\n    let redirectArgs;\n    const redirectFn = (url, params, queryParams) => {\n      if (/^http(s)?:\\/\\//.test(url)) {\n        const message = `\n          Redirects to URLs outside of the app are not supported\n          in this version of Flow Router.\n          Use 'window.location = yourUrl' instead.\n        `;\n        throw new Error(message);\n      }\n      redirectArgs = [url, params, queryParams];\n    };\n\n    Triggers.runTriggers(\n      triggers,\n      context,\n      redirectFn,\n      () => {}\n    );\n\n    return redirectArgs;\n  }\n\n  _decodeValues(obj) {\n    const newObj = {};\n    Object.keys(obj).forEach(key => {\n      const value = obj[key];\n      newObj[key] = typeof value !== 'undefined' ? decodeURIComponent(value) : value;\n    });\n\n    return newObj;\n  }\n\n  _updateReactiveDict(dict, newValues) {\n    const currentKeys = _.keys(newValues);\n    const oldKeys = _.keys(dict.keyDeps);\n\n    // set new values\n    currentKeys.forEach((key) => {\n      dict.set(key, newValues[key]);\n    });\n\n    // remove keys which does not exisits here\n    const removedKeys = _.difference(oldKeys, currentKeys);\n    removedKeys.forEach((key) => {\n      dict.set(key, undefined);\n    });\n  }\n\n  _initTriggersAPI() {\n    this.triggers = {\n      enter: (triggers, filter) => {\n        triggers = Triggers.applyFilters(triggers, filter);\n        if (triggers.length) {\n          this._triggersEnter = this._triggersEnter.concat(triggers);\n        }\n      },\n\n      exit: (triggers, filter) => {\n        triggers = Triggers.applyFilters(triggers, filter);\n        if (triggers.length) {\n          this._triggersExit = this._triggersExit.concat(triggers);\n        }\n      }\n    };\n  }\n\n  // This is required for implementing a router class.\n  _getCurrentRouteContext() {\n    return this._current;\n  }\n\n  _initClickAnchorHandlers() {\n    // This logic is taken from page.js\n    // See: https://github.com/visionmedia/page.js\n    const self = this;\n    const clickEvent =\n      typeof document !== 'undefined' && document.ontouchstart ?\n      'touchstart' : 'click';\n    document.addEventListener(clickEvent, onclick, false);\n\n    function onclick(e) {\n      if (which(e) !== 1) {\n        return;\n      }\n\n      if (e.metaKey || e.ctrlKey || e.shiftKey) {\n        return;\n      }\n\n      if (e.defaultPrevented) {\n        return;\n      }\n\n      // ensure link\n      // use shadow dom when available\n      let el = e.path ? e.path[0] : e.target;\n      while (el && el.nodeName !== 'A' ) {\n        el = el.parentNode;\n      }\n\n      if (!el || el.nodeName !== 'A') {\n        return;\n      }\n\n      // Ignore if tag has\n      // 1. \"download\" attribute\n      // 2. rel=\"external\" attribute\n      if (el.hasAttribute('download') || el.getAttribute('rel') === 'external') {\n        return;\n      }\n\n      // ensure non-hash for the same path\n      const link = el.getAttribute('href');\n      if (el.pathname === location.pathname && (el.hash || link === '#')) {\n        return;\n      }\n\n      // Check for mailto: in the href\n      if (link && link.indexOf('mailto:') > -1) {\n        return;\n      }\n\n      // check target\n      if (el.target) {\n        return;\n      }\n\n      // x-origin\n      if (!sameOrigin(el.href)) {\n        return;\n      }\n\n      // rebuild path\n      let path = el.pathname + el.search + (el.hash || '');\n\n      // strip leading \"/[drive letter]:\" on NW.js on Windows\n      if (typeof process !== 'undefined' && path.match(/^\\/[a-zA-Z]:\\//)) {\n        path = path.replace(/^\\/[a-zA-Z]:\\//, '/');\n      }\n\n      e.preventDefault();\n      self.go(path);\n    }\n\n    function which(e) {\n      e = e || window.event;\n      return e.which === null ? e.button : e.which;\n    }\n\n    function sameOrigin(href) {\n      let origin = `${location.protocol}//${location.hostname}`;\n      if (location.port) {\n        origin += `:${location.port}`;\n      }\n\n      return href && href.indexOf(origin) === 0;\n    }\n  }\n\n  _initiateHandlingBackButton() {\n    const self = this;\n    window.addEventListener('popstate', onpopstate, false);\n\n    function onpopstate() {\n      // In some browsers they fire popstate event right after page has loaded.\n      // That's not the correct way for the popstate.\n      // Normally, we need to handle it.\n      // But, we don't want to do it since self.go() is already idempotent.\n      const path = location.pathname + location.search + (location.hash || '');\n      self.env.inPopstate.withValue(true, function() {\n        self.go(path);\n      });\n    }\n  }\n\n  _buildContext(path) {\n    const parsedUrl = ParseUrl({url: path});\n\n    const context = {\n      path,\n      pathname: parsedUrl.pathname,\n      hash: parsedUrl.hash ? parsedUrl.hash.substr(1) : null,\n      queryString: parsedUrl.search ? parsedUrl.search.substr(1) : null\n    };\n\n    return context;\n  }\n};\n","Group = class extends SharedGroup {\n  constructor(router, options, parent) {\n    super(router, options, parent);\n\n    options = options || {};\n\n    this.name = options.name;\n\n    this._triggersEnter = options.triggersEnter || [];\n    this._triggersExit = options.triggersExit || [];\n    this._subscriptions = options.subscriptions || Function.prototype;\n\n    if (this.parent) {\n      this.prefix = parent.prefix + this.prefix;\n\n      this._triggersEnter = parent._triggersEnter.concat(this._triggersEnter);\n      this._triggersExit = this._triggersExit.concat(parent._triggersExit);\n    }\n  }\n\n  route(pathDef, options, group) {\n    options = options || {};\n\n    const triggersEnter = options.triggersEnter || [];\n    options.triggersEnter = this._triggersEnter.concat(triggersEnter);\n\n    const triggersExit = options.triggersExit || [];\n    options.triggersExit = triggersExit.concat(this._triggersExit);\n\n    return super.route(pathDef, options, group);\n  }\n\n  callSubscriptions(current) {\n    if (this.parent) {\n      this.parent.callSubscriptions(current);\n    }\n\n    this._subscriptions.call(current.route, current.params, current.queryParams);\n  }\n};\n","Route = class extends SharedRoute {\n  constructor(router, pathDef, options, group) {\n    super(router, pathDef, options, group);\n\n    options = options || {};\n\n    this._triggersEnter = options.triggersEnter || [];\n    this._triggersExit = options.triggersExit || [];\n  }\n\n  // This is a required method for the route. It's crucial to\n  // have a dummy method even we don't need it.\n  _init() {\n\n  }\n\n  callAction(current) {\n    this._action(current.params, current.queryParams);\n  }\n};\n","// Initialize FlowRouter\nMeteor.startup(() => {\n  if (!FlowRouter._askedToWait) {\n    FlowRouter.initialize();\n  }\n});\n"]}}]