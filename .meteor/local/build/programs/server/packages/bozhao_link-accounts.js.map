{"version":3,"sources":["meteor://ðŸ’»app/packages/bozhao:link-accounts/link_accounts_server.js"],"names":["_objectSpread","module","link","default","v","Meteor","Accounts","Mongo","check","Match","OAuth","Hook","_onLink","bindEnvironment","debugPrintExceptions","onLink","func","register","_beforeLink","beforeLink","_onUnlink","onUnlink","registerLoginHandler","options","undefined","credentialToken","String","credentialSecret","OneOf","result","retrieveCredential","type","error","Error","LoginCancelledError","numericError","LinkUserFromExternalService","serviceName","serviceData","methods","cordovaGoogle","userId","id","user","checkExistingSelector","existingUsers","users","find","fetch","length","forEach","existingUser","_id","services","setAttrs","each","callback","serviceOptions","Object","keys","key","updated","update","$set","unlinkService","cb","ObjectID","findOne","newServices"],"mappings":"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","file":"/packages/bozhao_link-accounts.js","sourcesContent":["import { Meteor } from 'meteor/meteor'\nimport { Accounts } from 'meteor/accounts-base'\nimport { Mongo } from 'meteor/mongo'\nimport { check, Match } from 'meteor/check'\nimport { OAuth } from 'meteor/oauth'\nimport { Hook } from 'meteor/callback-hook'\n\n/**\n * Hooks definition and registration\n */\nAccounts._onLink = new Hook({\n  bindEnvironment: false,\n  debugPrintExceptions: 'onLink callback'\n})\nAccounts.onLink = (func) => Accounts._onLink.register(func)\n\nAccounts._beforeLink = new Hook({\n  bindEnvironment: false,\n  debugPrintExceptions: 'beforeLink callback'\n})\nAccounts.beforeLink = (func) => Accounts._beforeLink.register(func)\n\nAccounts._onUnlink = new Hook({\n  bindEnvironment: false,\n  debugPrintExceptions: 'onUnlink callback'\n})\nAccounts.onUnlink = (func) => Accounts._onUnlink.register(func)\n\nAccounts.registerLoginHandler(function (options) {\n  if (!options.link) return undefined\n\n  check(options.link, {\n    credentialToken: String,\n    // When an error occurs while retrieving the access token, we store\n    // the error in the pending credentials table, with a secret of\n    // null. The client can call the login method with a secret of null\n    // to retrieve the error.\n    credentialSecret: Match.OneOf(null, String)\n  })\n\n  const result = OAuth.retrieveCredential(options.link.credentialToken, options.link.credentialSecret)\n  if (!result) {\n    return {\n      type: 'link',\n      error: new Meteor.Error(Accounts.LoginCancelledError.numericError, 'No matching link attempt found')\n    }\n  }\n\n  if (result instanceof Error || result instanceof Meteor.Error) throw result\n  else return Accounts.LinkUserFromExternalService(result.serviceName, result.serviceData, result.options)\n})\n\nMeteor.methods({\n  cordovaGoogle: function (serviceName, serviceData) {\n    Accounts.LinkUserFromExternalService(serviceName, serviceData, {}) // passing empty object cause in any case it is not used\n  }\n})\n\nAccounts.LinkUserFromExternalService = function (serviceName, serviceData, options) {\n  options = { ...options }\n\n  // We probably throw an error instead of call update or create here.\n  if (!Meteor.userId()) return new Meteor.Error('You must be logged in to use LinkUserFromExternalService')\n\n  if (serviceName === 'password' || serviceName === 'resume') { throw new Meteor.Error(\"Can't use LinkUserFromExternalService with internal service: \" + serviceName) }\n  if (!(serviceData.id || serviceData.userId)) { throw new Meteor.Error(\"'id' missing from service data for: \" + serviceName) }\n\n  const user = Meteor.user()\n\n  if (!user) {\n    return new Meteor.Error('User not found for LinkUserFromExternalService')\n  }\n  const checkExistingSelector = {}\n  if (serviceData.userId) {\n    serviceData.id = serviceData.userId\n    delete serviceData.userId\n  }\n  checkExistingSelector['services.' + serviceName + '.id'] = serviceData.id\n\n  const existingUsers = Meteor.users.find(checkExistingSelector).fetch()\n  if (existingUsers.length) {\n    existingUsers.forEach(function (existingUser) {\n      if (existingUser._id !== Meteor.userId()) { throw new Meteor.Error(`Provided ${serviceName} account is already in use by other user`) }\n    })\n  }\n\n  // we do not allow link another account from existing service.\n  // TODO maybe we can override this?\n  if (user.services && user.services[serviceName] && user.services[serviceName].id !== serviceData.id) {\n    return new Meteor.Error('User can link only one account to service: ' + serviceName)\n  } else {\n    const setAttrs = {}\n\n    // Before link hook\n    Accounts._beforeLink.each(callback => {\n      // eslint-disable-next-line node/no-callback-literal\n      callback({ type: serviceName, serviceData, user, serviceOptions: options })\n      return true\n    })\n\n    Object.keys(serviceData).forEach(key => {\n      setAttrs['services.' + serviceName + '.' + key] = serviceData[key]\n    })\n\n    const updated = Meteor.users.update(user._id, { $set: setAttrs })\n    if (updated !== 1) { throw new Meteor.Error(`Failed to link user ${Meteor.userId()} with ${serviceName} account`) }\n\n    // On link hook\n    Accounts._onLink.each(callback => {\n      // eslint-disable-next-line node/no-callback-literal\n      callback({ type: serviceName, serviceData, user: Meteor.user(), serviceOptions: options })\n      return true\n    })\n\n    return {\n      type: serviceName,\n      userId: user._id\n    }\n  }\n}\n\nAccounts.unlinkService = function (userId, serviceName, cb) {\n  check(userId, Match.OneOf(String, Mongo.ObjectID))\n  if (typeof serviceName !== 'string') {\n    throw new Meteor.Error('Service name must be string')\n  }\n  const user = Meteor.users.findOne({ _id: userId })\n  if (serviceName === 'resume' || serviceName === 'password') {\n    throw new Meteor.Error('Internal services cannot be unlinked: ' + serviceName)\n  }\n\n  if (user.services[serviceName]) {\n    const newServices = { ...user.services }\n    delete newServices[serviceName]\n    Meteor.users.update({ _id: user._id }, { $set: { services: newServices } }, function (result) {\n      if (cb && typeof cb === 'function') {\n        cb(result)\n      }\n    })\n    // On unlink hook\n    Accounts._onUnlink.each(callback => {\n      // eslint-disable-next-line node/no-callback-literal\n      callback({ type: serviceName, user: Meteor.user() })\n      return true\n    })\n  } else {\n    throw new Meteor.Error(500, 'no service')\n  }\n}\n"]}